{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.6"
    },
    "colab": {
      "name": "Patient_Survival_Assignment3.ipynb",
      "provenance": [],
      "collapsed_sections": []
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "SAt851eaDnRD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "37b20ce1-3894-419d-d0b0-f97399aa5a97"
      },
      "source": [
        "#import required libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import sys\n",
        "from sklearn.metrics import accuracy_score, roc_auc_score, make_scorer, f1_score"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EnmLhwpcDnRi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "outputId": "2410642c-0686-4e91-d24f-162c9643636c"
      },
      "source": [
        "#import data\n",
        "pharma_data = pd.read_csv('https://raw.githubusercontent.com/dphi-official/Datasets/master/pharma_data/Training_set_begs.csv')\n",
        "pharma_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID_Patient_Care_Situation</th>\n",
              "      <th>Diagnosed_Condition</th>\n",
              "      <th>Patient_ID</th>\n",
              "      <th>Treated_with_drugs</th>\n",
              "      <th>Patient_Age</th>\n",
              "      <th>Patient_Body_Mass_Index</th>\n",
              "      <th>Patient_Smoker</th>\n",
              "      <th>Patient_Rural_Urban</th>\n",
              "      <th>Patient_mental_condition</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>Z</th>\n",
              "      <th>Number_of_prev_cond</th>\n",
              "      <th>Survived_1_year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22374</td>\n",
              "      <td>8</td>\n",
              "      <td>3333</td>\n",
              "      <td>DX6</td>\n",
              "      <td>56</td>\n",
              "      <td>18.479385</td>\n",
              "      <td>YES</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18164</td>\n",
              "      <td>5</td>\n",
              "      <td>5740</td>\n",
              "      <td>DX2</td>\n",
              "      <td>36</td>\n",
              "      <td>22.945566</td>\n",
              "      <td>YES</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6283</td>\n",
              "      <td>23</td>\n",
              "      <td>10446</td>\n",
              "      <td>DX6</td>\n",
              "      <td>48</td>\n",
              "      <td>27.510027</td>\n",
              "      <td>YES</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5339</td>\n",
              "      <td>51</td>\n",
              "      <td>12011</td>\n",
              "      <td>DX1</td>\n",
              "      <td>5</td>\n",
              "      <td>19.130976</td>\n",
              "      <td>NO</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>33012</td>\n",
              "      <td>0</td>\n",
              "      <td>12513</td>\n",
              "      <td>NaN</td>\n",
              "      <td>128</td>\n",
              "      <td>1.348400</td>\n",
              "      <td>Cannot say</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   ID_Patient_Care_Situation  ...  Survived_1_year\n",
              "0                      22374  ...                0\n",
              "1                      18164  ...                1\n",
              "2                       6283  ...                0\n",
              "3                       5339  ...                1\n",
              "4                      33012  ...                1\n",
              "\n",
              "[5 rows x 18 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VQ_BLhVIDnSB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "outputId": "7736f69e-fe79-41dd-cd83-0f5f5a842a0b"
      },
      "source": [
        "test_data = pd.read_csv('https://raw.githubusercontent.com/dphi-official/Datasets/master/pharma_data/Testing_set_begs.csv')\n",
        "test_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID_Patient_Care_Situation</th>\n",
              "      <th>Diagnosed_Condition</th>\n",
              "      <th>Patient_ID</th>\n",
              "      <th>Treated_with_drugs</th>\n",
              "      <th>Patient_Age</th>\n",
              "      <th>Patient_Body_Mass_Index</th>\n",
              "      <th>Patient_Smoker</th>\n",
              "      <th>Patient_Rural_Urban</th>\n",
              "      <th>Patient_mental_condition</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>Z</th>\n",
              "      <th>Number_of_prev_cond</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19150</td>\n",
              "      <td>40</td>\n",
              "      <td>3709</td>\n",
              "      <td>DX3</td>\n",
              "      <td>16</td>\n",
              "      <td>29.443894</td>\n",
              "      <td>NO</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>23216</td>\n",
              "      <td>52</td>\n",
              "      <td>986</td>\n",
              "      <td>DX6</td>\n",
              "      <td>24</td>\n",
              "      <td>26.836321</td>\n",
              "      <td>NO</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11890</td>\n",
              "      <td>50</td>\n",
              "      <td>11821</td>\n",
              "      <td>DX4 DX5</td>\n",
              "      <td>63</td>\n",
              "      <td>25.523280</td>\n",
              "      <td>NO</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7149</td>\n",
              "      <td>32</td>\n",
              "      <td>3292</td>\n",
              "      <td>DX6</td>\n",
              "      <td>42</td>\n",
              "      <td>27.171155</td>\n",
              "      <td>NO</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>22845</td>\n",
              "      <td>20</td>\n",
              "      <td>9959</td>\n",
              "      <td>DX3</td>\n",
              "      <td>50</td>\n",
              "      <td>25.556192</td>\n",
              "      <td>NO</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   ID_Patient_Care_Situation  Diagnosed_Condition  ...    Z Number_of_prev_cond\n",
              "0                      19150                   40  ...  0.0                 2.0\n",
              "1                      23216                   52  ...  0.0                 2.0\n",
              "2                      11890                   50  ...  0.0                 2.0\n",
              "3                       7149                   32  ...  0.0                 3.0\n",
              "4                      22845                   20  ...  0.0                 1.0\n",
              "\n",
              "[5 rows x 17 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i6qGoAiJDnSW",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "outputId": "6b693deb-f572-4898-b43c-c00de7bd177b"
      },
      "source": [
        "pharma_data.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID_Patient_Care_Situation      int64\n",
              "Diagnosed_Condition            int64\n",
              "Patient_ID                     int64\n",
              "Treated_with_drugs            object\n",
              "Patient_Age                    int64\n",
              "Patient_Body_Mass_Index      float64\n",
              "Patient_Smoker                object\n",
              "Patient_Rural_Urban           object\n",
              "Patient_mental_condition      object\n",
              "A                            float64\n",
              "B                            float64\n",
              "C                            float64\n",
              "D                            float64\n",
              "E                            float64\n",
              "F                            float64\n",
              "Z                            float64\n",
              "Number_of_prev_cond          float64\n",
              "Survived_1_year                int64\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lzRW5Yw8DnSo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 714
        },
        "outputId": "0065b382-d5a5-45a0-8a83-427a529a23ee"
      },
      "source": [
        "#to see which variable has more correlation \n",
        "plt.figure(figsize=(20,10))\n",
        "sns.heatmap(pharma_data.corr(),cmap='coolwarm', annot=True)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9a70Oad5DnS8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 366
        },
        "outputId": "1e8a6c88-3653-4fc8-ff54-260c3adecfdb"
      },
      "source": [
        "#check for missing values\n",
        "pharma_data.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID_Patient_Care_Situation       0\n",
              "Diagnosed_Condition             0\n",
              "Patient_ID                      0\n",
              "Treated_with_drugs             13\n",
              "Patient_Age                     0\n",
              "Patient_Body_Mass_Index         0\n",
              "Patient_Smoker                  0\n",
              "Patient_Rural_Urban             0\n",
              "Patient_mental_condition        0\n",
              "A                            1235\n",
              "B                            1235\n",
              "C                            1235\n",
              "D                            1235\n",
              "E                            1235\n",
              "F                            1235\n",
              "Z                            1235\n",
              "Number_of_prev_cond          1235\n",
              "Survived_1_year                 0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Uqzc6B8VDnTP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 348
        },
        "outputId": "ff405369-eebd-4428-b902-0581e5cc4b56"
      },
      "source": [
        "test_data.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID_Patient_Care_Situation    0\n",
              "Diagnosed_Condition          0\n",
              "Patient_ID                   0\n",
              "Treated_with_drugs           0\n",
              "Patient_Age                  0\n",
              "Patient_Body_Mass_Index      0\n",
              "Patient_Smoker               0\n",
              "Patient_Rural_Urban          0\n",
              "Patient_mental_condition     0\n",
              "A                            0\n",
              "B                            0\n",
              "C                            0\n",
              "D                            0\n",
              "E                            0\n",
              "F                            0\n",
              "Z                            0\n",
              "Number_of_prev_cond          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hZgfqCQ7DnTg",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#function for calculating percentage of missing values in each column.\n",
        "#This function accepts dataframe as argument.\n",
        "def inititial_eda_checks(df):\n",
        "    '''\n",
        "    Takes df\n",
        "    Checks nulls\n",
        "    '''\n",
        "    if df.isnull().sum().sum() > 0:\n",
        "        mask_total = df.isnull().sum().sort_values(ascending=False) \n",
        "        total = mask_total[mask_total > 0]\n",
        "\n",
        "        mask_percent = df.isnull().mean().sort_values(ascending=False) \n",
        "        percent = mask_percent[mask_percent > 0] \n",
        "\n",
        "        missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n",
        "    \n",
        "        print(f'Total and Percentage of NaN:\\n {missing_data}')\n",
        "    else: \n",
        "        print('No NaN found.')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e_8kKwLmDnTu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 219
        },
        "outputId": "d3713d61-9046-44f7-9190-647266a92c8b"
      },
      "source": [
        "#running the abive function\n",
        "inititial_eda_checks(pharma_data)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total and Percentage of NaN:\n",
            "                      Total   Percent\n",
            "Z                     1235  0.053470\n",
            "F                     1235  0.053470\n",
            "E                     1235  0.053470\n",
            "D                     1235  0.053470\n",
            "C                     1235  0.053470\n",
            "B                     1235  0.053470\n",
            "A                     1235  0.053470\n",
            "Number_of_prev_cond   1235  0.053470\n",
            "Treated_with_drugs      13  0.000563\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GimwrmqeDnT_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "dcdfd9c1-9b37-4128-8e5f-6712fe317c9e"
      },
      "source": [
        "inititial_eda_checks(test_data)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No NaN found.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FR20rbe8DnUS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#replacing any empty values in a column using np.nan\n",
        "pharma_data.replace('', np.nan, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oqQUT81lDnUr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#function for imputing the numerical column values.\n",
        "#this function will accept dataframe and missing columns in a list as an input.\n",
        "from sklearn.impute import SimpleImputer \n",
        "def impute_missing_values(dataset_type,missing_columns):\n",
        "    imputer=SimpleImputer(missing_values=np.nan,strategy='mean')\n",
        "    for i in missing_columns:\n",
        "        imputer=imputer.fit(dataset_type[[i]])\n",
        "        dataset_type[i]=imputer.transform(dataset_type[[i]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hs9bFZPFDnVb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "mis_col_names=['Z','F','E','D','C','B','A','Number_of_prev_cond']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IWfBJgOODnVu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#calling the function for imputation.\n",
        "impute_missing_values(pharma_data,mis_col_names)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "82Jrgx1CDnV7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#this function will impute mode for missing values\n",
        "#this function accepts dataframe and missing column names as list \n",
        "from sklearn.impute import SimpleImputer \n",
        "def impute_missing_values_categorical(dataset_type,missing_columns):\n",
        "    imputer=SimpleImputer(missing_values=np.nan,strategy='most_frequent')\n",
        "    for i in missing_columns:\n",
        "        imputer=imputer.fit(dataset_type[[i]])\n",
        "        dataset_type[i]=imputer.transform(dataset_type[[i]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yhFEI_KYDnWJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cat_mis_columns=['Treated_with_drugs']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9vjJNdRGDnWV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "impute_missing_values_categorical(pharma_data,cat_mis_columns)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "shDyfGD9DnWh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "15ef99eb-ca1f-4428-ba45-7feffbf8ef10"
      },
      "source": [
        "#checking the misisng avlues after imputation\n",
        "inititial_eda_checks(pharma_data)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No NaN found.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OVDDH-qyDnWs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 127
        },
        "outputId": "af4322aa-387d-4e2a-fa50-92413593c2c2"
      },
      "source": [
        "pharma_data.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ID_Patient_Care_Situation', 'Diagnosed_Condition', 'Patient_ID',\n",
              "       'Treated_with_drugs', 'Patient_Age', 'Patient_Body_Mass_Index',\n",
              "       'Patient_Smoker', 'Patient_Rural_Urban', 'Patient_mental_condition',\n",
              "       'A', 'B', 'C', 'D', 'E', 'F', 'Z', 'Number_of_prev_cond',\n",
              "       'Survived_1_year'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Pcy9GoAkDnW4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "2a684400-d69e-42bd-ed3d-f9bb4e67fd84"
      },
      "source": [
        "#code for numerical column box plot \n",
        "continuous_labels = list(['ID_Patient_Care_Situation', 'Diagnosed_Condition', 'Patient_ID',\n",
        "       'Patient_Age', 'Patient_Body_Mass_Index',\n",
        "       'A', 'B', 'C', 'D', 'E', 'F', 'Z', 'Number_of_prev_cond',\n",
        "       'Survived_1_year'])\n",
        "i = 1\n",
        "plt.figure(figsize=(15,30))\n",
        "for var in continuous_labels: #plotting boxplot for each variable\n",
        "    plt.subplot(round(len(continuous_labels),0)/3+3,4,i)\n",
        "    plt.boxplot(pharma_data[var],whis=5)\n",
        "    plt.title(var)\n",
        "    i+=1\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x2160 with 14 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ANwNH-7qqrhp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "outputId": "31647314-184f-4340-942a-aba3ffcf2f5d"
      },
      "source": [
        "pharma_data['Survived_1_year'].value_counts() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1    14603\n",
              "0     8494\n",
              "Name: Survived_1_year, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0mVExQdcDnZK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#dropping ID_Patient_Care_Situation and Patient_ID column\n",
        "pharma_data = pharma_data.drop(['ID_Patient_Care_Situation','Patient_ID'],axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8nOhQchnGA5m",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#dropping ID_Patient_Care_Situation and Patient_ID column from test data\n",
        "test_data = test_data.drop(['ID_Patient_Care_Situation','Patient_ID'],axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DES8TwQiGHHZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "outputId": "5c4732c1-05e0-4686-df53-3efe36954877"
      },
      "source": [
        "#checking df after dropping columns\n",
        "pharma_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Diagnosed_Condition</th>\n",
              "      <th>Treated_with_drugs</th>\n",
              "      <th>Patient_Age</th>\n",
              "      <th>Patient_Body_Mass_Index</th>\n",
              "      <th>Patient_Smoker</th>\n",
              "      <th>Patient_Rural_Urban</th>\n",
              "      <th>Patient_mental_condition</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>Z</th>\n",
              "      <th>Number_of_prev_cond</th>\n",
              "      <th>Survived_1_year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8</td>\n",
              "      <td>DX6</td>\n",
              "      <td>56</td>\n",
              "      <td>18.479385</td>\n",
              "      <td>YES</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5</td>\n",
              "      <td>DX2</td>\n",
              "      <td>36</td>\n",
              "      <td>22.945566</td>\n",
              "      <td>YES</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>23</td>\n",
              "      <td>DX6</td>\n",
              "      <td>48</td>\n",
              "      <td>27.510027</td>\n",
              "      <td>YES</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>51</td>\n",
              "      <td>DX1</td>\n",
              "      <td>5</td>\n",
              "      <td>19.130976</td>\n",
              "      <td>NO</td>\n",
              "      <td>URBAN</td>\n",
              "      <td>Stable</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>DX6</td>\n",
              "      <td>128</td>\n",
              "      <td>1.348400</td>\n",
              "      <td>Cannot say</td>\n",
              "      <td>RURAL</td>\n",
              "      <td>Stable</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Diagnosed_Condition Treated_with_drugs  ...  Number_of_prev_cond  Survived_1_year\n",
              "0                    8                DX6  ...                  2.0                0\n",
              "1                    5               DX2   ...                  1.0                1\n",
              "2                   23                DX6  ...                  1.0                0\n",
              "3                   51               DX1   ...                  1.0                1\n",
              "4                    0                DX6  ...                  1.0                1\n",
              "\n",
              "[5 rows x 16 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DuHdQNbdkbbY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Findings of EDA\n",
        "\n",
        "    #The categorical features have a lot of unique values, we will be using cat_features (index of all categorical columns) instead of one hot encoding, but depending on the dataset it may be a good idea to adjust one_hot_max_size.\n",
        "\n",
        "    #There are missing values in the dataset for few columns.\n",
        "\n",
        "    #Used mean for numerical columns and mode for categorical columns.\n",
        "\n",
        "    #Checked for class imbalance, but this dataset is pretty much balanced.\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JEvFsQYMFncj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#segregating X and y\n",
        "X = pharma_data.drop(['Survived_1_year'],axis=1)\n",
        "y = pharma_data['Survived_1_year']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MMikFdGtDnZU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#splitting test and train datasets  \n",
        "from sklearn.model_selection import train_test_split\n",
        "x_train, x_test, y_train, y_test = train_test_split(X,y,test_size=0.20,random_state=42)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QIoKn2X6g4Ki",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#I tried a model selection in a separate notebook, where i tried RFC and DTC which didnt perform well in unseen datasets.\n",
        "#So opted to go on with Boosting models.\n",
        "#Chose CatBoostClassifier especially since we will be having more categorical columns after one hot encoding.  \n",
        "#But beauty of catboost is we no need to perform one hot encoding in a dataframe instead we can just pass the index of categorical columns in a raw data frame. \n",
        "#Comparatively very fast than the other boosting models.\n",
        "#Catboost handles categorical values automatically without one hot encoding."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5bVnG0WfGpIe",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# columns = list(pharma_data.columns)\n",
        "# cat_features = np.where(pharma_data[columns].dtypes != np.float)[0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4XM5aE6HG35g",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 329
        },
        "outputId": "7daee34d-8320-4237-b130-9a554f83581f"
      },
      "source": [
        "pharma_data.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Diagnosed_Condition           int64\n",
              "Treated_with_drugs           object\n",
              "Patient_Age                   int64\n",
              "Patient_Body_Mass_Index     float64\n",
              "Patient_Smoker               object\n",
              "Patient_Rural_Urban          object\n",
              "Patient_mental_condition     object\n",
              "A                           float64\n",
              "B                           float64\n",
              "C                           float64\n",
              "D                           float64\n",
              "E                           float64\n",
              "F                           float64\n",
              "Z                           float64\n",
              "Number_of_prev_cond         float64\n",
              "Survived_1_year               int64\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wkROuTmXHCAd",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#index of categorical columns in our pharma dataset\n",
        "cat_features = [1,4,5,6]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Bterc4uTH73D",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "95055498-20e1-4cb7-dc86-b65c46dfb10f"
      },
      "source": [
        "#install catboost\n",
        "!pip install catboost"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: catboost in /usr/local/lib/python3.6/dist-packages (0.23.2)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from catboost) (3.2.2)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.6/dist-packages (from catboost) (4.4.1)\n",
            "Requirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.6/dist-packages (from catboost) (1.0.5)\n",
            "Requirement already satisfied: graphviz in /usr/local/lib/python3.6/dist-packages (from catboost) (0.10.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from catboost) (1.12.0)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from catboost) (1.4.1)\n",
            "Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from catboost) (1.18.5)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->catboost) (2.4.7)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->catboost) (2.8.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->catboost) (0.10.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->catboost) (1.2.0)\n",
            "Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.6/dist-packages (from plotly->catboost) (1.3.3)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.24.0->catboost) (2018.9)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QD8Ck86LDnZd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "803724a8-4769-4755-bd42-59e5c76ba5f9"
      },
      "source": [
        "#using catboost with some basic parameters.\n",
        "from catboost import CatBoostClassifier\n",
        "clf = CatBoostClassifier(iterations=1000,\n",
        "                                 depth=6,\n",
        "                                 eval_metric = 'F1',\n",
        "                                 leaf_estimation_iterations = 10,\n",
        "                                use_best_model=True\n",
        "        )\n",
        "        \n",
        "clf.fit(x_train, \n",
        "        y_train,\n",
        "        cat_features=cat_features,\n",
        "        eval_set=(x_test, y_test)\n",
        ")\n",
        "\n",
        "y_pred = clf.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.8186809\ttest: 0.8174722\tbest: 0.8174722 (0)\ttotal: 81.3ms\tremaining: 1m 21s\n",
            "1:\tlearn: 0.8326332\ttest: 0.8313867\tbest: 0.8313867 (1)\ttotal: 106ms\tremaining: 52.9s\n",
            "2:\tlearn: 0.8316654\ttest: 0.8298944\tbest: 0.8313867 (1)\ttotal: 133ms\tremaining: 44.2s\n",
            "3:\tlearn: 0.8343464\ttest: 0.8329290\tbest: 0.8329290 (3)\ttotal: 160ms\tremaining: 39.8s\n",
            "4:\tlearn: 0.8339931\ttest: 0.8343262\tbest: 0.8343262 (4)\ttotal: 184ms\tremaining: 36.7s\n",
            "5:\tlearn: 0.8348791\ttest: 0.8323082\tbest: 0.8343262 (4)\ttotal: 210ms\tremaining: 34.8s\n",
            "6:\tlearn: 0.8363224\ttest: 0.8336570\tbest: 0.8343262 (4)\ttotal: 235ms\tremaining: 33.3s\n",
            "7:\tlearn: 0.8368096\ttest: 0.8352676\tbest: 0.8352676 (7)\ttotal: 258ms\tremaining: 32s\n",
            "8:\tlearn: 0.8362641\ttest: 0.8327974\tbest: 0.8352676 (7)\ttotal: 283ms\tremaining: 31.2s\n",
            "9:\tlearn: 0.8357608\ttest: 0.8342160\tbest: 0.8352676 (7)\ttotal: 310ms\tremaining: 30.7s\n",
            "10:\tlearn: 0.8373579\ttest: 0.8347854\tbest: 0.8352676 (7)\ttotal: 334ms\tremaining: 30s\n",
            "11:\tlearn: 0.8364869\ttest: 0.8340576\tbest: 0.8352676 (7)\ttotal: 359ms\tremaining: 29.6s\n",
            "12:\tlearn: 0.8378815\ttest: 0.8354267\tbest: 0.8354267 (12)\ttotal: 383ms\tremaining: 29.1s\n",
            "13:\tlearn: 0.8383248\ttest: 0.8343795\tbest: 0.8354267 (12)\ttotal: 409ms\tremaining: 28.8s\n",
            "14:\tlearn: 0.8376676\ttest: 0.8347041\tbest: 0.8354267 (12)\ttotal: 434ms\tremaining: 28.5s\n",
            "15:\tlearn: 0.8381122\ttest: 0.8352713\tbest: 0.8354267 (12)\ttotal: 455ms\tremaining: 28s\n",
            "16:\tlearn: 0.8381561\ttest: 0.8358643\tbest: 0.8358643 (16)\ttotal: 480ms\tremaining: 27.8s\n",
            "17:\tlearn: 0.8397120\ttest: 0.8370215\tbest: 0.8370215 (17)\ttotal: 511ms\tremaining: 27.9s\n",
            "18:\tlearn: 0.8408953\ttest: 0.8383253\tbest: 0.8383253 (18)\ttotal: 537ms\tremaining: 27.7s\n",
            "19:\tlearn: 0.8410981\ttest: 0.8388137\tbest: 0.8388137 (19)\ttotal: 566ms\tremaining: 27.7s\n",
            "20:\tlearn: 0.8407870\ttest: 0.8388450\tbest: 0.8388450 (20)\ttotal: 589ms\tremaining: 27.4s\n",
            "21:\tlearn: 0.8411396\ttest: 0.8384181\tbest: 0.8388450 (20)\ttotal: 613ms\tremaining: 27.2s\n",
            "22:\tlearn: 0.8418968\ttest: 0.8407108\tbest: 0.8407108 (22)\ttotal: 636ms\tremaining: 27s\n",
            "23:\tlearn: 0.8416707\ttest: 0.8405235\tbest: 0.8407108 (22)\ttotal: 661ms\tremaining: 26.9s\n",
            "24:\tlearn: 0.8426132\ttest: 0.8416788\tbest: 0.8416788 (24)\ttotal: 684ms\tremaining: 26.7s\n",
            "25:\tlearn: 0.8425497\ttest: 0.8409091\tbest: 0.8416788 (24)\ttotal: 710ms\tremaining: 26.6s\n",
            "26:\tlearn: 0.8432345\ttest: 0.8410972\tbest: 0.8416788 (24)\ttotal: 738ms\tremaining: 26.6s\n",
            "27:\tlearn: 0.8433500\ttest: 0.8409091\tbest: 0.8416788 (24)\ttotal: 760ms\tremaining: 26.4s\n",
            "28:\tlearn: 0.8436216\ttest: 0.8405656\tbest: 0.8416788 (24)\ttotal: 787ms\tremaining: 26.4s\n",
            "29:\tlearn: 0.8435695\ttest: 0.8412673\tbest: 0.8416788 (24)\ttotal: 813ms\tremaining: 26.3s\n",
            "30:\tlearn: 0.8442244\ttest: 0.8428734\tbest: 0.8428734 (30)\ttotal: 837ms\tremaining: 26.2s\n",
            "31:\tlearn: 0.8441991\ttest: 0.8424469\tbest: 0.8428734 (30)\ttotal: 861ms\tremaining: 26.1s\n",
            "32:\tlearn: 0.8444174\ttest: 0.8426693\tbest: 0.8428734 (30)\ttotal: 888ms\tremaining: 26s\n",
            "33:\tlearn: 0.8444481\ttest: 0.8427550\tbest: 0.8428734 (30)\ttotal: 918ms\tremaining: 26.1s\n",
            "34:\tlearn: 0.8453457\ttest: 0.8441114\tbest: 0.8441114 (34)\ttotal: 941ms\tremaining: 25.9s\n",
            "35:\tlearn: 0.8454053\ttest: 0.8441622\tbest: 0.8441622 (35)\ttotal: 965ms\tremaining: 25.8s\n",
            "36:\tlearn: 0.8454020\ttest: 0.8447630\tbest: 0.8447630 (36)\ttotal: 990ms\tremaining: 25.8s\n",
            "37:\tlearn: 0.8458056\ttest: 0.8451255\tbest: 0.8451255 (37)\ttotal: 1.01s\tremaining: 25.6s\n",
            "38:\tlearn: 0.8455099\ttest: 0.8447854\tbest: 0.8451255 (37)\ttotal: 1.04s\tremaining: 25.8s\n",
            "39:\tlearn: 0.8498059\ttest: 0.8483082\tbest: 0.8483082 (39)\ttotal: 1.07s\tremaining: 25.7s\n",
            "40:\tlearn: 0.8500384\ttest: 0.8486810\tbest: 0.8486810 (40)\ttotal: 1.09s\tremaining: 25.6s\n",
            "41:\tlearn: 0.8459030\ttest: 0.8452633\tbest: 0.8486810 (40)\ttotal: 1.12s\tremaining: 25.6s\n",
            "42:\tlearn: 0.8502001\ttest: 0.8493771\tbest: 0.8493771 (42)\ttotal: 1.15s\tremaining: 25.6s\n",
            "43:\tlearn: 0.8515754\ttest: 0.8503555\tbest: 0.8503555 (43)\ttotal: 1.17s\tremaining: 25.5s\n",
            "44:\tlearn: 0.8517981\ttest: 0.8506787\tbest: 0.8506787 (44)\ttotal: 1.2s\tremaining: 25.5s\n",
            "45:\tlearn: 0.8532563\ttest: 0.8553075\tbest: 0.8553075 (45)\ttotal: 1.23s\tremaining: 25.5s\n",
            "46:\tlearn: 0.8547208\ttest: 0.8560399\tbest: 0.8560399 (46)\ttotal: 1.25s\tremaining: 25.4s\n",
            "47:\tlearn: 0.8547434\ttest: 0.8564078\tbest: 0.8564078 (47)\ttotal: 1.28s\tremaining: 25.4s\n",
            "48:\tlearn: 0.8555234\ttest: 0.8564532\tbest: 0.8564532 (48)\ttotal: 1.3s\tremaining: 25.3s\n",
            "49:\tlearn: 0.8565123\ttest: 0.8568211\tbest: 0.8568211 (49)\ttotal: 1.33s\tremaining: 25.3s\n",
            "50:\tlearn: 0.8578774\ttest: 0.8574650\tbest: 0.8574650 (50)\ttotal: 1.36s\tremaining: 25.3s\n",
            "51:\tlearn: 0.8588429\ttest: 0.8600386\tbest: 0.8600386 (51)\ttotal: 1.39s\tremaining: 25.3s\n",
            "52:\tlearn: 0.8604792\ttest: 0.8607310\tbest: 0.8607310 (52)\ttotal: 1.41s\tremaining: 25.2s\n",
            "53:\tlearn: 0.8607350\ttest: 0.8612856\tbest: 0.8612856 (53)\ttotal: 1.43s\tremaining: 25.1s\n",
            "54:\tlearn: 0.8606432\ttest: 0.8599968\tbest: 0.8612856 (53)\ttotal: 1.46s\tremaining: 25s\n",
            "55:\tlearn: 0.8610741\ttest: 0.8615236\tbest: 0.8615236 (55)\ttotal: 1.48s\tremaining: 25s\n",
            "56:\tlearn: 0.8629589\ttest: 0.8613845\tbest: 0.8615236 (55)\ttotal: 1.51s\tremaining: 24.9s\n",
            "57:\tlearn: 0.8627990\ttest: 0.8617124\tbest: 0.8617124 (57)\ttotal: 1.53s\tremaining: 24.9s\n",
            "58:\tlearn: 0.8635941\ttest: 0.8626755\tbest: 0.8626755 (58)\ttotal: 1.56s\tremaining: 24.8s\n",
            "59:\tlearn: 0.8640142\ttest: 0.8630358\tbest: 0.8630358 (59)\ttotal: 1.58s\tremaining: 24.8s\n",
            "60:\tlearn: 0.8637557\ttest: 0.8622638\tbest: 0.8630358 (59)\ttotal: 1.61s\tremaining: 24.7s\n",
            "61:\tlearn: 0.8640600\ttest: 0.8628590\tbest: 0.8630358 (59)\ttotal: 1.63s\tremaining: 24.7s\n",
            "62:\tlearn: 0.8636896\ttest: 0.8621748\tbest: 0.8630358 (59)\ttotal: 1.66s\tremaining: 24.7s\n",
            "63:\tlearn: 0.8646793\ttest: 0.8627261\tbest: 0.8630358 (59)\ttotal: 1.68s\tremaining: 24.6s\n",
            "64:\tlearn: 0.8647819\ttest: 0.8623586\tbest: 0.8630358 (59)\ttotal: 1.71s\tremaining: 24.6s\n",
            "65:\tlearn: 0.8651926\ttest: 0.8630115\tbest: 0.8630358 (59)\ttotal: 1.74s\tremaining: 24.6s\n",
            "66:\tlearn: 0.8650704\ttest: 0.8629672\tbest: 0.8630358 (59)\ttotal: 1.76s\tremaining: 24.6s\n",
            "67:\tlearn: 0.8658537\ttest: 0.8630491\tbest: 0.8630491 (67)\ttotal: 1.79s\tremaining: 24.5s\n",
            "68:\tlearn: 0.8648605\ttest: 0.8621359\tbest: 0.8630491 (67)\ttotal: 1.81s\tremaining: 24.5s\n",
            "69:\tlearn: 0.8651276\ttest: 0.8625101\tbest: 0.8630491 (67)\ttotal: 1.84s\tremaining: 24.4s\n",
            "70:\tlearn: 0.8653332\ttest: 0.8623705\tbest: 0.8630491 (67)\ttotal: 1.86s\tremaining: 24.4s\n",
            "71:\tlearn: 0.8656704\ttest: 0.8634376\tbest: 0.8634376 (71)\ttotal: 1.89s\tremaining: 24.3s\n",
            "72:\tlearn: 0.8653339\ttest: 0.8630248\tbest: 0.8634376 (71)\ttotal: 1.91s\tremaining: 24.3s\n",
            "73:\tlearn: 0.8653425\ttest: 0.8626053\tbest: 0.8634376 (71)\ttotal: 1.94s\tremaining: 24.2s\n",
            "74:\tlearn: 0.8660830\ttest: 0.8630692\tbest: 0.8634376 (71)\ttotal: 1.97s\tremaining: 24.2s\n",
            "75:\tlearn: 0.8659293\ttest: 0.8633933\tbest: 0.8634376 (71)\ttotal: 1.99s\tremaining: 24.2s\n",
            "76:\tlearn: 0.8653121\ttest: 0.8627069\tbest: 0.8634376 (71)\ttotal: 2.01s\tremaining: 24.2s\n",
            "77:\tlearn: 0.8657528\ttest: 0.8631271\tbest: 0.8634376 (71)\ttotal: 2.05s\tremaining: 24.2s\n",
            "78:\tlearn: 0.8653893\ttest: 0.8632673\tbest: 0.8634376 (71)\ttotal: 2.08s\tremaining: 24.3s\n",
            "79:\tlearn: 0.8665612\ttest: 0.8629804\tbest: 0.8634376 (71)\ttotal: 2.1s\tremaining: 24.2s\n",
            "80:\tlearn: 0.8665666\ttest: 0.8626561\tbest: 0.8634376 (71)\ttotal: 2.13s\tremaining: 24.1s\n",
            "81:\tlearn: 0.8666883\ttest: 0.8626053\tbest: 0.8634376 (71)\ttotal: 2.15s\tremaining: 24s\n",
            "82:\tlearn: 0.8668613\ttest: 0.8625162\tbest: 0.8634376 (71)\ttotal: 2.17s\tremaining: 24s\n",
            "83:\tlearn: 0.8668073\ttest: 0.8627006\tbest: 0.8634376 (71)\ttotal: 2.2s\tremaining: 24s\n",
            "84:\tlearn: 0.8664720\ttest: 0.8626053\tbest: 0.8634376 (71)\ttotal: 2.23s\tremaining: 24s\n",
            "85:\tlearn: 0.8667046\ttest: 0.8625669\tbest: 0.8634376 (71)\ttotal: 2.25s\tremaining: 23.9s\n",
            "86:\tlearn: 0.8669211\ttest: 0.8622424\tbest: 0.8634376 (71)\ttotal: 2.28s\tremaining: 23.9s\n",
            "87:\tlearn: 0.8671295\ttest: 0.8621977\tbest: 0.8634376 (71)\ttotal: 2.3s\tremaining: 23.9s\n",
            "88:\tlearn: 0.8675384\ttest: 0.8625669\tbest: 0.8634376 (71)\ttotal: 2.33s\tremaining: 23.9s\n",
            "89:\tlearn: 0.8681006\ttest: 0.8620578\tbest: 0.8634376 (71)\ttotal: 2.35s\tremaining: 23.8s\n",
            "90:\tlearn: 0.8692548\ttest: 0.8623764\tbest: 0.8634376 (71)\ttotal: 2.39s\tremaining: 23.8s\n",
            "91:\tlearn: 0.8693853\ttest: 0.8629359\tbest: 0.8634376 (71)\ttotal: 2.41s\tremaining: 23.8s\n",
            "92:\tlearn: 0.8696499\ttest: 0.8629804\tbest: 0.8634376 (71)\ttotal: 2.44s\tremaining: 23.8s\n",
            "93:\tlearn: 0.8693747\ttest: 0.8618229\tbest: 0.8634376 (71)\ttotal: 2.46s\tremaining: 23.7s\n",
            "94:\tlearn: 0.8696605\ttest: 0.8618229\tbest: 0.8634376 (71)\ttotal: 2.48s\tremaining: 23.7s\n",
            "95:\tlearn: 0.8698936\ttest: 0.8621025\tbest: 0.8634376 (71)\ttotal: 2.51s\tremaining: 23.6s\n",
            "96:\tlearn: 0.8699220\ttest: 0.8626115\tbest: 0.8634376 (71)\ttotal: 2.53s\tremaining: 23.6s\n",
            "97:\tlearn: 0.8700175\ttest: 0.8626623\tbest: 0.8634376 (71)\ttotal: 2.56s\tremaining: 23.5s\n",
            "98:\tlearn: 0.8701093\ttest: 0.8624330\tbest: 0.8634376 (71)\ttotal: 2.58s\tremaining: 23.5s\n",
            "99:\tlearn: 0.8703463\ttest: 0.8630827\tbest: 0.8634376 (71)\ttotal: 2.61s\tremaining: 23.5s\n",
            "100:\tlearn: 0.8704170\ttest: 0.8635034\tbest: 0.8635034 (100)\ttotal: 2.64s\tremaining: 23.5s\n",
            "101:\tlearn: 0.8705481\ttest: 0.8637841\tbest: 0.8637841 (101)\ttotal: 2.67s\tremaining: 23.5s\n",
            "102:\tlearn: 0.8702265\ttest: 0.8634146\tbest: 0.8637841 (101)\ttotal: 2.69s\tremaining: 23.4s\n",
            "103:\tlearn: 0.8703222\ttest: 0.8629937\tbest: 0.8637841 (101)\ttotal: 2.72s\tremaining: 23.4s\n",
            "104:\tlearn: 0.8705662\ttest: 0.8627578\tbest: 0.8637841 (101)\ttotal: 2.74s\tremaining: 23.4s\n",
            "105:\tlearn: 0.8706055\ttest: 0.8630382\tbest: 0.8637841 (101)\ttotal: 2.77s\tremaining: 23.3s\n",
            "106:\tlearn: 0.8705174\ttest: 0.8638360\tbest: 0.8638360 (106)\ttotal: 2.79s\tremaining: 23.3s\n",
            "107:\tlearn: 0.8704254\ttest: 0.8636955\tbest: 0.8638360 (106)\ttotal: 2.82s\tremaining: 23.3s\n",
            "108:\tlearn: 0.8709993\ttest: 0.8631408\tbest: 0.8638360 (106)\ttotal: 2.85s\tremaining: 23.3s\n",
            "109:\tlearn: 0.8712791\ttest: 0.8625793\tbest: 0.8638360 (106)\ttotal: 2.87s\tremaining: 23.2s\n",
            "110:\tlearn: 0.8713565\ttest: 0.8631408\tbest: 0.8638360 (106)\ttotal: 2.9s\tremaining: 23.2s\n",
            "111:\tlearn: 0.8713750\ttest: 0.8632367\tbest: 0.8638360 (106)\ttotal: 2.92s\tremaining: 23.2s\n",
            "112:\tlearn: 0.8712871\ttest: 0.8635624\tbest: 0.8638360 (106)\ttotal: 2.95s\tremaining: 23.1s\n",
            "113:\tlearn: 0.8712201\ttest: 0.8637474\tbest: 0.8638360 (106)\ttotal: 2.97s\tremaining: 23.1s\n",
            "114:\tlearn: 0.8710006\ttest: 0.8636068\tbest: 0.8638360 (106)\ttotal: 3s\tremaining: 23.1s\n",
            "115:\tlearn: 0.8712621\ttest: 0.8625855\tbest: 0.8638360 (106)\ttotal: 3.03s\tremaining: 23.1s\n",
            "116:\tlearn: 0.8714041\ttest: 0.8632437\tbest: 0.8638360 (106)\ttotal: 3.06s\tremaining: 23.1s\n",
            "117:\tlearn: 0.8716486\ttest: 0.8633328\tbest: 0.8638360 (106)\ttotal: 3.09s\tremaining: 23.1s\n",
            "118:\tlearn: 0.8719224\ttest: 0.8634734\tbest: 0.8638360 (106)\ttotal: 3.12s\tremaining: 23.1s\n",
            "119:\tlearn: 0.8718242\ttest: 0.8641251\tbest: 0.8641251 (119)\ttotal: 3.14s\tremaining: 23.1s\n",
            "120:\tlearn: 0.8718242\ttest: 0.8644510\tbest: 0.8644510 (120)\ttotal: 3.17s\tremaining: 23s\n",
            "121:\tlearn: 0.8720897\ttest: 0.8639844\tbest: 0.8644510 (120)\ttotal: 3.19s\tremaining: 23s\n",
            "122:\tlearn: 0.8720124\ttest: 0.8645035\tbest: 0.8645035 (122)\ttotal: 3.22s\tremaining: 23s\n",
            "123:\tlearn: 0.8722510\ttest: 0.8645035\tbest: 0.8645035 (122)\ttotal: 3.25s\tremaining: 22.9s\n",
            "124:\tlearn: 0.8721277\ttest: 0.8643183\tbest: 0.8645035 (122)\ttotal: 3.27s\tremaining: 22.9s\n",
            "125:\tlearn: 0.8723769\ttest: 0.8644151\tbest: 0.8645035 (122)\ttotal: 3.3s\tremaining: 22.9s\n",
            "126:\tlearn: 0.8722935\ttest: 0.8642822\tbest: 0.8645035 (122)\ttotal: 3.33s\tremaining: 22.9s\n",
            "127:\tlearn: 0.8724838\ttest: 0.8637624\tbest: 0.8645035 (122)\ttotal: 3.35s\tremaining: 22.9s\n",
            "128:\tlearn: 0.8724569\ttest: 0.8640444\tbest: 0.8645035 (122)\ttotal: 3.38s\tremaining: 22.8s\n",
            "129:\tlearn: 0.8725118\ttest: 0.8644677\tbest: 0.8645035 (122)\ttotal: 3.4s\tremaining: 22.8s\n",
            "130:\tlearn: 0.8724152\ttest: 0.8639034\tbest: 0.8645035 (122)\ttotal: 3.43s\tremaining: 22.8s\n",
            "131:\tlearn: 0.8727020\ttest: 0.8639034\tbest: 0.8645035 (122)\ttotal: 3.46s\tremaining: 22.8s\n",
            "132:\tlearn: 0.8725743\ttest: 0.8640888\tbest: 0.8645035 (122)\ttotal: 3.49s\tremaining: 22.7s\n",
            "133:\tlearn: 0.8726753\ttest: 0.8647943\tbest: 0.8647943 (133)\ttotal: 3.51s\tremaining: 22.7s\n",
            "134:\tlearn: 0.8728090\ttest: 0.8649796\tbest: 0.8649796 (134)\ttotal: 3.54s\tremaining: 22.7s\n",
            "135:\tlearn: 0.8725743\ttest: 0.8643708\tbest: 0.8649796 (134)\ttotal: 3.57s\tremaining: 22.7s\n",
            "136:\tlearn: 0.8728298\ttest: 0.8646972\tbest: 0.8649796 (134)\ttotal: 3.59s\tremaining: 22.6s\n",
            "137:\tlearn: 0.8726544\ttest: 0.8642822\tbest: 0.8649796 (134)\ttotal: 3.62s\tremaining: 22.6s\n",
            "138:\tlearn: 0.8727927\ttest: 0.8634433\tbest: 0.8649796 (134)\ttotal: 3.64s\tremaining: 22.6s\n",
            "139:\tlearn: 0.8728536\ttest: 0.8640523\tbest: 0.8649796 (134)\ttotal: 3.67s\tremaining: 22.5s\n",
            "140:\tlearn: 0.8728581\ttest: 0.8637255\tbest: 0.8649796 (134)\ttotal: 3.69s\tremaining: 22.5s\n",
            "141:\tlearn: 0.8729029\ttest: 0.8634952\tbest: 0.8649796 (134)\ttotal: 3.72s\tremaining: 22.5s\n",
            "142:\tlearn: 0.8730873\ttest: 0.8633540\tbest: 0.8649796 (134)\ttotal: 3.75s\tremaining: 22.4s\n",
            "143:\tlearn: 0.8731230\ttest: 0.8631235\tbest: 0.8649796 (134)\ttotal: 3.78s\tremaining: 22.5s\n",
            "144:\tlearn: 0.8728716\ttest: 0.8625143\tbest: 0.8649796 (134)\ttotal: 3.82s\tremaining: 22.5s\n",
            "145:\tlearn: 0.8728508\ttest: 0.8627964\tbest: 0.8649796 (134)\ttotal: 3.85s\tremaining: 22.5s\n",
            "146:\tlearn: 0.8727943\ttest: 0.8623283\tbest: 0.8649796 (134)\ttotal: 3.88s\tremaining: 22.5s\n",
            "147:\tlearn: 0.8729119\ttest: 0.8633094\tbest: 0.8649796 (134)\ttotal: 3.9s\tremaining: 22.4s\n",
            "148:\tlearn: 0.8729834\ttest: 0.8631682\tbest: 0.8649796 (134)\ttotal: 3.92s\tremaining: 22.4s\n",
            "149:\tlearn: 0.8726587\ttest: 0.8635471\tbest: 0.8649796 (134)\ttotal: 3.95s\tremaining: 22.4s\n",
            "150:\tlearn: 0.8730328\ttest: 0.8636884\tbest: 0.8649796 (134)\ttotal: 3.98s\tremaining: 22.4s\n",
            "151:\tlearn: 0.8728689\ttest: 0.8637776\tbest: 0.8649796 (134)\ttotal: 4s\tremaining: 22.3s\n",
            "152:\tlearn: 0.8727094\ttest: 0.8638298\tbest: 0.8649796 (134)\ttotal: 4.03s\tremaining: 22.3s\n",
            "153:\tlearn: 0.8730802\ttest: 0.8638298\tbest: 0.8649796 (134)\ttotal: 4.05s\tremaining: 22.2s\n",
            "154:\tlearn: 0.8734624\ttest: 0.8643957\tbest: 0.8649796 (134)\ttotal: 4.09s\tremaining: 22.3s\n",
            "155:\tlearn: 0.8730719\ttest: 0.8639790\tbest: 0.8649796 (134)\ttotal: 4.11s\tremaining: 22.2s\n",
            "156:\tlearn: 0.8731227\ttest: 0.8640236\tbest: 0.8649796 (134)\ttotal: 4.13s\tremaining: 22.2s\n",
            "157:\tlearn: 0.8735679\ttest: 0.8641732\tbest: 0.8649796 (134)\ttotal: 4.16s\tremaining: 22.2s\n",
            "158:\tlearn: 0.8733933\ttest: 0.8645013\tbest: 0.8649796 (134)\ttotal: 4.19s\tremaining: 22.1s\n",
            "159:\tlearn: 0.8733822\ttest: 0.8650074\tbest: 0.8650074 (159)\ttotal: 4.21s\tremaining: 22.1s\n",
            "160:\tlearn: 0.8734276\ttest: 0.8652038\tbest: 0.8652038 (160)\ttotal: 4.23s\tremaining: 22.1s\n",
            "161:\tlearn: 0.8735888\ttest: 0.8655241\tbest: 0.8655241 (161)\ttotal: 4.26s\tremaining: 22s\n",
            "162:\tlearn: 0.8737688\ttest: 0.8655684\tbest: 0.8655684 (162)\ttotal: 4.28s\tremaining: 22s\n",
            "163:\tlearn: 0.8740057\ttest: 0.8656126\tbest: 0.8656126 (163)\ttotal: 4.31s\tremaining: 22s\n",
            "164:\tlearn: 0.8733754\ttest: 0.8653021\tbest: 0.8656126 (163)\ttotal: 4.33s\tremaining: 21.9s\n",
            "165:\tlearn: 0.8737632\ttest: 0.8661833\tbest: 0.8661833 (165)\ttotal: 4.36s\tremaining: 21.9s\n",
            "166:\tlearn: 0.8735196\ttest: 0.8652038\tbest: 0.8661833 (165)\ttotal: 4.38s\tremaining: 21.9s\n",
            "167:\tlearn: 0.8736903\ttest: 0.8654354\tbest: 0.8661833 (165)\ttotal: 4.41s\tremaining: 21.8s\n",
            "168:\tlearn: 0.8738906\ttest: 0.8651147\tbest: 0.8661833 (165)\ttotal: 4.43s\tremaining: 21.8s\n",
            "169:\tlearn: 0.8741279\ttest: 0.8657751\tbest: 0.8661833 (165)\ttotal: 4.46s\tremaining: 21.8s\n",
            "170:\tlearn: 0.8738545\ttest: 0.8656322\tbest: 0.8661833 (165)\ttotal: 4.48s\tremaining: 21.7s\n",
            "171:\tlearn: 0.8739586\ttest: 0.8652927\tbest: 0.8661833 (165)\ttotal: 4.51s\tremaining: 21.7s\n",
            "172:\tlearn: 0.8740875\ttest: 0.8666117\tbest: 0.8666117 (172)\ttotal: 4.54s\tremaining: 21.7s\n",
            "173:\tlearn: 0.8736942\ttest: 0.8656864\tbest: 0.8666117 (172)\ttotal: 4.56s\tremaining: 21.7s\n",
            "174:\tlearn: 0.8739676\ttest: 0.8659181\tbest: 0.8666117 (172)\ttotal: 4.59s\tremaining: 21.6s\n",
            "175:\tlearn: 0.8739829\ttest: 0.8659624\tbest: 0.8666117 (172)\ttotal: 4.61s\tremaining: 21.6s\n",
            "176:\tlearn: 0.8741377\ttest: 0.8655434\tbest: 0.8666117 (172)\ttotal: 4.64s\tremaining: 21.6s\n",
            "177:\tlearn: 0.8745511\ttest: 0.8664796\tbest: 0.8666117 (172)\ttotal: 4.67s\tremaining: 21.5s\n",
            "178:\tlearn: 0.8745407\ttest: 0.8678000\tbest: 0.8678000 (178)\ttotal: 4.69s\tremaining: 21.5s\n",
            "179:\tlearn: 0.8747471\ttest: 0.8678000\tbest: 0.8678000 (178)\ttotal: 4.73s\tremaining: 21.6s\n",
            "180:\tlearn: 0.8748451\ttest: 0.8676131\tbest: 0.8678000 (178)\ttotal: 4.76s\tremaining: 21.5s\n",
            "181:\tlearn: 0.8749794\ttest: 0.8663701\tbest: 0.8678000 (178)\ttotal: 4.79s\tremaining: 21.5s\n",
            "182:\tlearn: 0.8748763\ttest: 0.8665568\tbest: 0.8678000 (178)\ttotal: 4.81s\tremaining: 21.5s\n",
            "183:\tlearn: 0.8747832\ttest: 0.8679868\tbest: 0.8679868 (183)\ttotal: 4.83s\tremaining: 21.4s\n",
            "184:\tlearn: 0.8748249\ttest: 0.8660744\tbest: 0.8679868 (183)\ttotal: 4.86s\tremaining: 21.4s\n",
            "185:\tlearn: 0.8744129\ttest: 0.8663594\tbest: 0.8679868 (183)\ttotal: 4.89s\tremaining: 21.4s\n",
            "186:\tlearn: 0.8744439\ttest: 0.8657453\tbest: 0.8679868 (183)\ttotal: 4.91s\tremaining: 21.4s\n",
            "187:\tlearn: 0.8744029\ttest: 0.8657453\tbest: 0.8679868 (183)\ttotal: 4.94s\tremaining: 21.3s\n",
            "188:\tlearn: 0.8745213\ttest: 0.8655587\tbest: 0.8679868 (183)\ttotal: 4.96s\tremaining: 21.3s\n",
            "189:\tlearn: 0.8745883\ttest: 0.8653720\tbest: 0.8679868 (183)\ttotal: 4.99s\tremaining: 21.3s\n",
            "190:\tlearn: 0.8746243\ttest: 0.8658436\tbest: 0.8679868 (183)\ttotal: 5.02s\tremaining: 21.3s\n",
            "191:\tlearn: 0.8751083\ttest: 0.8667985\tbest: 0.8679868 (183)\ttotal: 5.04s\tremaining: 21.2s\n",
            "192:\tlearn: 0.8751084\ttest: 0.8675694\tbest: 0.8679868 (183)\ttotal: 5.07s\tremaining: 21.2s\n",
            "193:\tlearn: 0.8754539\ttest: 0.8672712\tbest: 0.8679868 (183)\ttotal: 5.1s\tremaining: 21.2s\n",
            "194:\tlearn: 0.8754225\ttest: 0.8659420\tbest: 0.8679868 (183)\ttotal: 5.13s\tremaining: 21.2s\n",
            "195:\tlearn: 0.8753458\ttest: 0.8666667\tbest: 0.8679868 (183)\ttotal: 5.15s\tremaining: 21.1s\n",
            "196:\tlearn: 0.8753204\ttest: 0.8670081\tbest: 0.8679868 (183)\ttotal: 5.18s\tremaining: 21.1s\n",
            "197:\tlearn: 0.8755053\ttest: 0.8662819\tbest: 0.8679868 (183)\ttotal: 5.21s\tremaining: 21.1s\n",
            "198:\tlearn: 0.8754493\ttest: 0.8680556\tbest: 0.8680556 (198)\ttotal: 5.23s\tremaining: 21.1s\n",
            "199:\tlearn: 0.8757132\ttest: 0.8675376\tbest: 0.8680556 (198)\ttotal: 5.25s\tremaining: 21s\n",
            "200:\tlearn: 0.8757191\ttest: 0.8674061\tbest: 0.8680556 (198)\ttotal: 5.28s\tremaining: 21s\n",
            "201:\tlearn: 0.8760802\ttest: 0.8676811\tbest: 0.8680556 (198)\ttotal: 5.3s\tremaining: 20.9s\n",
            "202:\tlearn: 0.8756211\ttest: 0.8669428\tbest: 0.8680556 (198)\ttotal: 5.32s\tremaining: 20.9s\n",
            "203:\tlearn: 0.8757245\ttest: 0.8668433\tbest: 0.8680556 (198)\ttotal: 5.35s\tremaining: 20.9s\n",
            "204:\tlearn: 0.8756157\ttest: 0.8664128\tbest: 0.8680556 (198)\ttotal: 5.37s\tremaining: 20.8s\n",
            "205:\tlearn: 0.8757970\ttest: 0.8667880\tbest: 0.8680556 (198)\ttotal: 5.4s\tremaining: 20.8s\n",
            "206:\tlearn: 0.8756882\ttest: 0.8664128\tbest: 0.8680556 (198)\ttotal: 5.42s\tremaining: 20.8s\n",
            "207:\tlearn: 0.8757607\ttest: 0.8666005\tbest: 0.8680556 (198)\ttotal: 5.45s\tremaining: 20.7s\n",
            "208:\tlearn: 0.8758538\ttest: 0.8665121\tbest: 0.8680556 (198)\ttotal: 5.47s\tremaining: 20.7s\n",
            "209:\tlearn: 0.8761645\ttest: 0.8666114\tbest: 0.8680556 (198)\ttotal: 5.5s\tremaining: 20.7s\n",
            "210:\tlearn: 0.8762110\ttest: 0.8661913\tbest: 0.8680556 (198)\ttotal: 5.53s\tremaining: 20.7s\n",
            "211:\tlearn: 0.8764650\ttest: 0.8662800\tbest: 0.8680556 (198)\ttotal: 5.55s\tremaining: 20.6s\n",
            "212:\tlearn: 0.8763971\ttest: 0.8668433\tbest: 0.8680556 (198)\ttotal: 5.58s\tremaining: 20.6s\n",
            "213:\tlearn: 0.8765626\ttest: 0.8673182\tbest: 0.8680556 (198)\ttotal: 5.61s\tremaining: 20.6s\n",
            "214:\tlearn: 0.8766306\ttest: 0.8675058\tbest: 0.8680556 (198)\ttotal: 5.63s\tremaining: 20.6s\n",
            "215:\tlearn: 0.8768518\ttest: 0.8672185\tbest: 0.8680556 (198)\ttotal: 5.65s\tremaining: 20.5s\n",
            "216:\tlearn: 0.8763561\ttest: 0.8671746\tbest: 0.8680556 (198)\ttotal: 5.68s\tremaining: 20.5s\n",
            "217:\tlearn: 0.8765115\ttest: 0.8671746\tbest: 0.8680556 (198)\ttotal: 5.7s\tremaining: 20.5s\n",
            "218:\tlearn: 0.8763309\ttest: 0.8673182\tbest: 0.8680556 (198)\ttotal: 5.73s\tremaining: 20.4s\n",
            "219:\tlearn: 0.8767089\ttest: 0.8664679\tbest: 0.8680556 (198)\ttotal: 5.75s\tremaining: 20.4s\n",
            "220:\tlearn: 0.8765023\ttest: 0.8667551\tbest: 0.8680556 (198)\ttotal: 5.78s\tremaining: 20.4s\n",
            "221:\tlearn: 0.8768702\ttest: 0.8665672\tbest: 0.8680556 (198)\ttotal: 5.81s\tremaining: 20.4s\n",
            "222:\tlearn: 0.8769314\ttest: 0.8676495\tbest: 0.8680556 (198)\ttotal: 5.83s\tremaining: 20.3s\n",
            "223:\tlearn: 0.8773136\ttest: 0.8677371\tbest: 0.8680556 (198)\ttotal: 5.86s\tremaining: 20.3s\n",
            "224:\tlearn: 0.8770665\ttest: 0.8678808\tbest: 0.8680556 (198)\ttotal: 5.89s\tremaining: 20.3s\n",
            "225:\tlearn: 0.8768861\ttest: 0.8683557\tbest: 0.8683557 (225)\ttotal: 5.91s\tremaining: 20.2s\n",
            "226:\tlearn: 0.8770781\ttest: 0.8682119\tbest: 0.8683557 (225)\ttotal: 5.94s\tremaining: 20.2s\n",
            "227:\tlearn: 0.8773370\ttest: 0.8686869\tbest: 0.8686869 (227)\ttotal: 5.96s\tremaining: 20.2s\n",
            "228:\tlearn: 0.8772744\ttest: 0.8688742\tbest: 0.8688742 (228)\ttotal: 5.98s\tremaining: 20.1s\n",
            "229:\tlearn: 0.8776990\ttest: 0.8685430\tbest: 0.8688742 (228)\ttotal: 6.01s\tremaining: 20.1s\n",
            "230:\tlearn: 0.8776287\ttest: 0.8675376\tbest: 0.8688742 (228)\ttotal: 6.04s\tremaining: 20.1s\n",
            "231:\tlearn: 0.8776651\ttest: 0.8672069\tbest: 0.8688742 (228)\ttotal: 6.07s\tremaining: 20.1s\n",
            "232:\tlearn: 0.8774370\ttest: 0.8672508\tbest: 0.8688742 (228)\ttotal: 6.11s\tremaining: 20.1s\n",
            "233:\tlearn: 0.8777276\ttest: 0.8671629\tbest: 0.8688742 (228)\ttotal: 6.13s\tremaining: 20.1s\n",
            "234:\tlearn: 0.8777681\ttest: 0.8677249\tbest: 0.8688742 (228)\ttotal: 6.16s\tremaining: 20s\n",
            "235:\tlearn: 0.8780528\ttest: 0.8678684\tbest: 0.8688742 (228)\ttotal: 6.18s\tremaining: 20s\n",
            "236:\tlearn: 0.8777884\ttest: 0.8672069\tbest: 0.8688742 (228)\ttotal: 6.21s\tremaining: 20s\n",
            "237:\tlearn: 0.8778509\ttest: 0.8680119\tbest: 0.8688742 (228)\ttotal: 6.24s\tremaining: 20s\n",
            "238:\tlearn: 0.8778831\ttest: 0.8679682\tbest: 0.8688742 (228)\ttotal: 6.26s\tremaining: 19.9s\n",
            "239:\tlearn: 0.8780528\ttest: 0.8674499\tbest: 0.8688742 (228)\ttotal: 6.29s\tremaining: 19.9s\n",
            "240:\tlearn: 0.8781680\ttest: 0.8671190\tbest: 0.8688742 (228)\ttotal: 6.31s\tremaining: 19.9s\n",
            "241:\tlearn: 0.8778408\ttest: 0.8669315\tbest: 0.8688742 (228)\ttotal: 6.34s\tremaining: 19.8s\n",
            "242:\tlearn: 0.8780427\ttest: 0.8666446\tbest: 0.8688742 (228)\ttotal: 6.36s\tremaining: 19.8s\n",
            "243:\tlearn: 0.8778206\ttest: 0.8669315\tbest: 0.8688742 (228)\ttotal: 6.39s\tremaining: 19.8s\n",
            "244:\tlearn: 0.8781396\ttest: 0.8657407\tbest: 0.8688742 (228)\ttotal: 6.4s\tremaining: 19.7s\n",
            "245:\tlearn: 0.8781537\ttest: 0.8660714\tbest: 0.8688742 (228)\ttotal: 6.43s\tremaining: 19.7s\n",
            "246:\tlearn: 0.8781073\ttest: 0.8655976\tbest: 0.8688742 (228)\ttotal: 6.46s\tremaining: 19.7s\n",
            "247:\tlearn: 0.8781921\ttest: 0.8654101\tbest: 0.8688742 (228)\ttotal: 6.48s\tremaining: 19.7s\n",
            "248:\tlearn: 0.8783353\ttest: 0.8659283\tbest: 0.8688742 (228)\ttotal: 6.5s\tremaining: 19.6s\n",
            "249:\tlearn: 0.8781316\ttest: 0.8663243\tbest: 0.8688742 (228)\ttotal: 6.53s\tremaining: 19.6s\n",
            "250:\tlearn: 0.8780387\ttest: 0.8661365\tbest: 0.8688742 (228)\ttotal: 6.56s\tremaining: 19.6s\n",
            "251:\tlearn: 0.8782104\ttest: 0.8676178\tbest: 0.8688742 (228)\ttotal: 6.58s\tremaining: 19.5s\n",
            "252:\tlearn: 0.8781438\ttest: 0.8671421\tbest: 0.8688742 (228)\ttotal: 6.61s\tremaining: 19.5s\n",
            "253:\tlearn: 0.8783560\ttest: 0.8668546\tbest: 0.8688742 (228)\ttotal: 6.63s\tremaining: 19.5s\n",
            "254:\tlearn: 0.8785178\ttest: 0.8669542\tbest: 0.8688742 (228)\ttotal: 6.67s\tremaining: 19.5s\n",
            "255:\tlearn: 0.8783358\ttest: 0.8668104\tbest: 0.8688742 (228)\ttotal: 6.69s\tremaining: 19.5s\n",
            "256:\tlearn: 0.8784249\ttest: 0.8669542\tbest: 0.8688742 (228)\ttotal: 6.72s\tremaining: 19.4s\n",
            "257:\tlearn: 0.8783420\ttest: 0.8667662\tbest: 0.8688742 (228)\ttotal: 6.74s\tremaining: 19.4s\n",
            "258:\tlearn: 0.8783420\ttest: 0.8670539\tbest: 0.8688742 (228)\ttotal: 6.77s\tremaining: 19.4s\n",
            "259:\tlearn: 0.8781095\ttest: 0.8665339\tbest: 0.8688742 (228)\ttotal: 6.79s\tremaining: 19.3s\n",
            "260:\tlearn: 0.8782915\ttest: 0.8671538\tbest: 0.8688742 (228)\ttotal: 6.81s\tremaining: 19.3s\n",
            "261:\tlearn: 0.8784636\ttest: 0.8678180\tbest: 0.8688742 (228)\ttotal: 6.84s\tremaining: 19.3s\n",
            "262:\tlearn: 0.8787351\ttest: 0.8675860\tbest: 0.8688742 (228)\ttotal: 6.86s\tremaining: 19.2s\n",
            "263:\tlearn: 0.8785892\ttest: 0.8675420\tbest: 0.8688742 (228)\ttotal: 6.89s\tremaining: 19.2s\n",
            "264:\tlearn: 0.8786583\ttest: 0.8674097\tbest: 0.8688742 (228)\ttotal: 6.92s\tremaining: 19.2s\n",
            "265:\tlearn: 0.8783385\ttest: 0.8680313\tbest: 0.8688742 (228)\ttotal: 6.94s\tremaining: 19.2s\n",
            "266:\tlearn: 0.8784317\ttest: 0.8682764\tbest: 0.8688742 (228)\ttotal: 6.96s\tremaining: 19.1s\n",
            "267:\tlearn: 0.8787275\ttest: 0.8681319\tbest: 0.8688742 (228)\ttotal: 6.99s\tremaining: 19.1s\n",
            "268:\tlearn: 0.8785109\ttest: 0.8677548\tbest: 0.8688742 (228)\ttotal: 7.01s\tremaining: 19.1s\n",
            "269:\tlearn: 0.8786267\ttest: 0.8675221\tbest: 0.8688742 (228)\ttotal: 7.04s\tremaining: 19s\n",
            "270:\tlearn: 0.8787564\ttest: 0.8675221\tbest: 0.8688742 (228)\ttotal: 7.06s\tremaining: 19s\n",
            "271:\tlearn: 0.8785598\ttest: 0.8680000\tbest: 0.8688742 (228)\ttotal: 7.09s\tremaining: 19s\n",
            "272:\tlearn: 0.8787060\ttest: 0.8672891\tbest: 0.8688742 (228)\ttotal: 7.13s\tremaining: 19s\n",
            "273:\tlearn: 0.8786858\ttest: 0.8676667\tbest: 0.8688742 (228)\ttotal: 7.15s\tremaining: 18.9s\n",
            "274:\tlearn: 0.8788522\ttest: 0.8674779\tbest: 0.8688742 (228)\ttotal: 7.18s\tremaining: 18.9s\n",
            "275:\tlearn: 0.8788850\ttest: 0.8678113\tbest: 0.8688742 (228)\ttotal: 7.2s\tremaining: 18.9s\n",
            "276:\tlearn: 0.8786593\ttest: 0.8671888\tbest: 0.8688742 (228)\ttotal: 7.23s\tremaining: 18.9s\n",
            "277:\tlearn: 0.8789883\ttest: 0.8673775\tbest: 0.8688742 (228)\ttotal: 7.26s\tremaining: 18.8s\n",
            "278:\tlearn: 0.8790413\ttest: 0.8676667\tbest: 0.8688742 (228)\ttotal: 7.28s\tremaining: 18.8s\n",
            "279:\tlearn: 0.8789947\ttest: 0.8672891\tbest: 0.8688742 (228)\ttotal: 7.31s\tremaining: 18.8s\n",
            "280:\tlearn: 0.8790514\ttest: 0.8671445\tbest: 0.8688742 (228)\ttotal: 7.33s\tremaining: 18.7s\n",
            "281:\tlearn: 0.8791876\ttest: 0.8677672\tbest: 0.8688742 (228)\ttotal: 7.36s\tremaining: 18.7s\n",
            "282:\tlearn: 0.8791977\ttest: 0.8671445\tbest: 0.8688742 (228)\ttotal: 7.38s\tremaining: 18.7s\n",
            "283:\tlearn: 0.8791309\ttest: 0.8671888\tbest: 0.8688742 (228)\ttotal: 7.41s\tremaining: 18.7s\n",
            "284:\tlearn: 0.8790413\ttest: 0.8672773\tbest: 0.8688742 (228)\ttotal: 7.43s\tremaining: 18.6s\n",
            "285:\tlearn: 0.8788421\ttest: 0.8677548\tbest: 0.8688742 (228)\ttotal: 7.45s\tremaining: 18.6s\n",
            "286:\tlearn: 0.8786026\ttest: 0.8676103\tbest: 0.8688742 (228)\ttotal: 7.47s\tremaining: 18.6s\n",
            "287:\tlearn: 0.8786089\ttest: 0.8674217\tbest: 0.8688742 (228)\ttotal: 7.5s\tremaining: 18.5s\n",
            "288:\tlearn: 0.8789745\ttest: 0.8678994\tbest: 0.8688742 (228)\ttotal: 7.52s\tremaining: 18.5s\n",
            "289:\tlearn: 0.8787677\ttest: 0.8679119\tbest: 0.8688742 (228)\ttotal: 7.55s\tremaining: 18.5s\n",
            "290:\tlearn: 0.8785646\ttest: 0.8681007\tbest: 0.8688742 (228)\ttotal: 7.58s\tremaining: 18.5s\n",
            "291:\tlearn: 0.8786580\ttest: 0.8683903\tbest: 0.8688742 (228)\ttotal: 7.6s\tremaining: 18.4s\n",
            "292:\tlearn: 0.8791273\ttest: 0.8683464\tbest: 0.8688742 (228)\ttotal: 7.63s\tremaining: 18.4s\n",
            "293:\tlearn: 0.8791969\ttest: 0.8681135\tbest: 0.8688742 (228)\ttotal: 7.65s\tremaining: 18.4s\n",
            "294:\tlearn: 0.8791099\ttest: 0.8685485\tbest: 0.8688742 (228)\ttotal: 7.68s\tremaining: 18.3s\n",
            "295:\tlearn: 0.8793398\ttest: 0.8682585\tbest: 0.8688742 (228)\ttotal: 7.7s\tremaining: 18.3s\n",
            "296:\tlearn: 0.8793563\ttest: 0.8681135\tbest: 0.8688742 (228)\ttotal: 7.73s\tremaining: 18.3s\n",
            "297:\tlearn: 0.8796065\ttest: 0.8680254\tbest: 0.8688742 (228)\ttotal: 7.75s\tremaining: 18.3s\n",
            "298:\tlearn: 0.8796065\ttest: 0.8684035\tbest: 0.8688742 (228)\ttotal: 7.78s\tremaining: 18.2s\n",
            "299:\tlearn: 0.8793829\ttest: 0.8683595\tbest: 0.8688742 (228)\ttotal: 7.81s\tremaining: 18.2s\n",
            "300:\tlearn: 0.8793729\ttest: 0.8685046\tbest: 0.8688742 (228)\ttotal: 7.83s\tremaining: 18.2s\n",
            "301:\tlearn: 0.8792061\ttest: 0.8684606\tbest: 0.8688742 (228)\ttotal: 7.86s\tremaining: 18.2s\n",
            "302:\tlearn: 0.8792198\ttest: 0.8686058\tbest: 0.8688742 (228)\ttotal: 7.88s\tremaining: 18.1s\n",
            "303:\tlearn: 0.8793664\ttest: 0.8684606\tbest: 0.8688742 (228)\ttotal: 7.91s\tremaining: 18.1s\n",
            "304:\tlearn: 0.8791365\ttest: 0.8684035\tbest: 0.8688742 (228)\ttotal: 7.93s\tremaining: 18.1s\n",
            "305:\tlearn: 0.8790568\ttest: 0.8684035\tbest: 0.8688742 (228)\ttotal: 7.96s\tremaining: 18s\n",
            "306:\tlearn: 0.8790000\ttest: 0.8684035\tbest: 0.8688742 (228)\ttotal: 7.98s\tremaining: 18s\n",
            "307:\tlearn: 0.8791099\ttest: 0.8682145\tbest: 0.8688742 (228)\ttotal: 8.01s\tremaining: 18s\n",
            "308:\tlearn: 0.8793161\ttest: 0.8682145\tbest: 0.8688742 (228)\ttotal: 8.04s\tremaining: 18s\n",
            "309:\tlearn: 0.8793628\ttest: 0.8683155\tbest: 0.8688742 (228)\ttotal: 8.06s\tremaining: 17.9s\n",
            "310:\tlearn: 0.8793326\ttest: 0.8681704\tbest: 0.8688742 (228)\ttotal: 8.08s\tremaining: 17.9s\n",
            "311:\tlearn: 0.8791291\ttest: 0.8683155\tbest: 0.8688742 (228)\ttotal: 8.11s\tremaining: 17.9s\n",
            "312:\tlearn: 0.8795060\ttest: 0.8688525\tbest: 0.8688742 (228)\ttotal: 8.14s\tremaining: 17.9s\n",
            "313:\tlearn: 0.8794024\ttest: 0.8685179\tbest: 0.8688742 (228)\ttotal: 8.17s\tremaining: 17.8s\n",
            "314:\tlearn: 0.8794391\ttest: 0.8688525\tbest: 0.8688742 (228)\ttotal: 8.19s\tremaining: 17.8s\n",
            "315:\tlearn: 0.8796262\ttest: 0.8689978\tbest: 0.8689978 (315)\ttotal: 8.22s\tremaining: 17.8s\n",
            "316:\tlearn: 0.8798097\ttest: 0.8685179\tbest: 0.8689978 (315)\ttotal: 8.24s\tremaining: 17.8s\n",
            "317:\tlearn: 0.8796528\ttest: 0.8684167\tbest: 0.8689978 (315)\ttotal: 8.27s\tremaining: 17.7s\n",
            "318:\tlearn: 0.8795226\ttest: 0.8687510\tbest: 0.8689978 (315)\ttotal: 8.29s\tremaining: 17.7s\n",
            "319:\tlearn: 0.8795694\ttest: 0.8690416\tbest: 0.8690416 (319)\ttotal: 8.31s\tremaining: 17.7s\n",
            "320:\tlearn: 0.8797830\ttest: 0.8688525\tbest: 0.8690416 (319)\ttotal: 8.34s\tremaining: 17.6s\n",
            "321:\tlearn: 0.8797262\ttest: 0.8686192\tbest: 0.8690416 (319)\ttotal: 8.36s\tremaining: 17.6s\n",
            "322:\tlearn: 0.8798197\ttest: 0.8691432\tbest: 0.8691432 (322)\ttotal: 8.39s\tremaining: 17.6s\n",
            "323:\tlearn: 0.8798831\ttest: 0.8697107\tbest: 0.8697107 (323)\ttotal: 8.42s\tremaining: 17.6s\n",
            "324:\tlearn: 0.8798097\ttest: 0.8695216\tbest: 0.8697107 (323)\ttotal: 8.45s\tremaining: 17.5s\n",
            "325:\tlearn: 0.8799265\ttest: 0.8693324\tbest: 0.8697107 (323)\ttotal: 8.47s\tremaining: 17.5s\n",
            "326:\tlearn: 0.8800267\ttest: 0.8695216\tbest: 0.8697107 (323)\ttotal: 8.5s\tremaining: 17.5s\n",
            "327:\tlearn: 0.8800902\ttest: 0.8694342\tbest: 0.8697107 (323)\ttotal: 8.52s\tremaining: 17.5s\n",
            "328:\tlearn: 0.8801403\ttest: 0.8694779\tbest: 0.8697107 (323)\ttotal: 8.55s\tremaining: 17.4s\n",
            "329:\tlearn: 0.8800935\ttest: 0.8696671\tbest: 0.8697107 (323)\ttotal: 8.57s\tremaining: 17.4s\n",
            "330:\tlearn: 0.8800568\ttest: 0.8694779\tbest: 0.8697107 (323)\ttotal: 8.6s\tremaining: 17.4s\n",
            "331:\tlearn: 0.8801903\ttest: 0.8692887\tbest: 0.8697107 (323)\ttotal: 8.63s\tremaining: 17.4s\n",
            "332:\tlearn: 0.8800501\ttest: 0.8692887\tbest: 0.8697107 (323)\ttotal: 8.65s\tremaining: 17.3s\n",
            "333:\tlearn: 0.8803073\ttest: 0.8691432\tbest: 0.8697107 (323)\ttotal: 8.68s\tremaining: 17.3s\n",
            "334:\tlearn: 0.8801235\ttest: 0.8696671\tbest: 0.8697107 (323)\ttotal: 8.7s\tremaining: 17.3s\n",
            "335:\tlearn: 0.8802438\ttest: 0.8699582\tbest: 0.8699582 (335)\ttotal: 8.73s\tremaining: 17.3s\n",
            "336:\tlearn: 0.8803005\ttest: 0.8698561\tbest: 0.8699582 (335)\ttotal: 8.75s\tremaining: 17.2s\n",
            "337:\tlearn: 0.8802937\ttest: 0.8700017\tbest: 0.8700017 (337)\ttotal: 8.78s\tremaining: 17.2s\n",
            "338:\tlearn: 0.8803604\ttest: 0.8701907\tbest: 0.8701907 (338)\ttotal: 8.81s\tremaining: 17.2s\n",
            "339:\tlearn: 0.8805945\ttest: 0.8702929\tbest: 0.8702929 (339)\ttotal: 8.84s\tremaining: 17.2s\n",
            "340:\tlearn: 0.8802438\ttest: 0.8700017\tbest: 0.8702929 (339)\ttotal: 8.86s\tremaining: 17.1s\n",
            "341:\tlearn: 0.8804039\ttest: 0.8701473\tbest: 0.8702929 (339)\ttotal: 8.89s\tremaining: 17.1s\n",
            "342:\tlearn: 0.8806979\ttest: 0.8701038\tbest: 0.8702929 (339)\ttotal: 8.91s\tremaining: 17.1s\n",
            "343:\tlearn: 0.8806979\ttest: 0.8698126\tbest: 0.8702929 (339)\ttotal: 8.94s\tremaining: 17s\n",
            "344:\tlearn: 0.8806244\ttest: 0.8701038\tbest: 0.8702929 (339)\ttotal: 8.96s\tremaining: 17s\n",
            "345:\tlearn: 0.8807079\ttest: 0.8699582\tbest: 0.8702929 (339)\ttotal: 8.99s\tremaining: 17s\n",
            "346:\tlearn: 0.8809017\ttest: 0.8702495\tbest: 0.8702929 (339)\ttotal: 9.02s\tremaining: 17s\n",
            "347:\tlearn: 0.8809285\ttest: 0.8703952\tbest: 0.8703952 (347)\ttotal: 9.04s\tremaining: 16.9s\n",
            "348:\tlearn: 0.8813899\ttest: 0.8699146\tbest: 0.8703952 (347)\ttotal: 9.07s\tremaining: 16.9s\n",
            "349:\tlearn: 0.8811025\ttest: 0.8702495\tbest: 0.8703952 (347)\ttotal: 9.1s\tremaining: 16.9s\n",
            "350:\tlearn: 0.8812625\ttest: 0.8698710\tbest: 0.8703952 (347)\ttotal: 9.13s\tremaining: 16.9s\n",
            "351:\tlearn: 0.8810389\ttest: 0.8697254\tbest: 0.8703952 (347)\ttotal: 9.16s\tremaining: 16.9s\n",
            "352:\tlearn: 0.8809454\ttest: 0.8697254\tbest: 0.8703952 (347)\ttotal: 9.19s\tremaining: 16.8s\n",
            "353:\tlearn: 0.8810926\ttest: 0.8698710\tbest: 0.8703952 (347)\ttotal: 9.21s\tremaining: 16.8s\n",
            "354:\tlearn: 0.8810190\ttest: 0.8703083\tbest: 0.8703952 (347)\ttotal: 9.24s\tremaining: 16.8s\n",
            "355:\tlearn: 0.8809623\ttest: 0.8701625\tbest: 0.8703952 (347)\ttotal: 9.26s\tremaining: 16.8s\n",
            "356:\tlearn: 0.8812299\ttest: 0.8703083\tbest: 0.8703952 (347)\ttotal: 9.29s\tremaining: 16.7s\n",
            "357:\tlearn: 0.8812539\ttest: 0.8703083\tbest: 0.8703952 (347)\ttotal: 9.31s\tremaining: 16.7s\n",
            "358:\tlearn: 0.8813644\ttest: 0.8698274\tbest: 0.8703952 (347)\ttotal: 9.34s\tremaining: 16.7s\n",
            "359:\tlearn: 0.8814013\ttest: 0.8702648\tbest: 0.8703952 (347)\ttotal: 9.36s\tremaining: 16.6s\n",
            "360:\tlearn: 0.8814112\ttest: 0.8698274\tbest: 0.8703952 (347)\ttotal: 9.39s\tremaining: 16.6s\n",
            "361:\tlearn: 0.8818094\ttest: 0.8696381\tbest: 0.8703952 (347)\ttotal: 9.42s\tremaining: 16.6s\n",
            "362:\tlearn: 0.8819398\ttest: 0.8696381\tbest: 0.8703952 (347)\ttotal: 9.44s\tremaining: 16.6s\n",
            "363:\tlearn: 0.8817798\ttest: 0.8699732\tbest: 0.8703952 (347)\ttotal: 9.47s\tremaining: 16.6s\n",
            "364:\tlearn: 0.8818265\ttest: 0.8698274\tbest: 0.8703952 (347)\ttotal: 9.5s\tremaining: 16.5s\n",
            "365:\tlearn: 0.8821216\ttest: 0.8693467\tbest: 0.8703952 (347)\ttotal: 9.52s\tremaining: 16.5s\n",
            "366:\tlearn: 0.8821118\ttest: 0.8694924\tbest: 0.8703952 (347)\ttotal: 9.55s\tremaining: 16.5s\n",
            "367:\tlearn: 0.8819543\ttest: 0.8694924\tbest: 0.8703952 (347)\ttotal: 9.58s\tremaining: 16.4s\n",
            "368:\tlearn: 0.8821216\ttest: 0.8694486\tbest: 0.8703952 (347)\ttotal: 9.6s\tremaining: 16.4s\n",
            "369:\tlearn: 0.8821585\ttest: 0.8699296\tbest: 0.8703952 (347)\ttotal: 9.63s\tremaining: 16.4s\n",
            "370:\tlearn: 0.8822521\ttest: 0.8703083\tbest: 0.8703952 (347)\ttotal: 9.66s\tremaining: 16.4s\n",
            "371:\tlearn: 0.8822619\ttest: 0.8701625\tbest: 0.8703952 (347)\ttotal: 9.68s\tremaining: 16.3s\n",
            "372:\tlearn: 0.8823628\ttest: 0.8701190\tbest: 0.8703952 (347)\ttotal: 9.71s\tremaining: 16.3s\n",
            "373:\tlearn: 0.8823628\ttest: 0.8704107\tbest: 0.8704107 (373)\ttotal: 9.74s\tremaining: 16.3s\n",
            "374:\tlearn: 0.8824194\ttest: 0.8700754\tbest: 0.8704107 (373)\ttotal: 9.76s\tremaining: 16.3s\n",
            "375:\tlearn: 0.8824563\ttest: 0.8702648\tbest: 0.8704107 (373)\ttotal: 9.79s\tremaining: 16.2s\n",
            "376:\tlearn: 0.8824194\ttest: 0.8697402\tbest: 0.8704107 (373)\ttotal: 9.81s\tremaining: 16.2s\n",
            "377:\tlearn: 0.8823899\ttest: 0.8700319\tbest: 0.8704107 (373)\ttotal: 9.84s\tremaining: 16.2s\n",
            "378:\tlearn: 0.8823529\ttest: 0.8698860\tbest: 0.8704107 (373)\ttotal: 9.87s\tremaining: 16.2s\n",
            "379:\tlearn: 0.8826507\ttest: 0.8698860\tbest: 0.8704107 (373)\ttotal: 9.89s\tremaining: 16.1s\n",
            "380:\tlearn: 0.8826138\ttest: 0.8697402\tbest: 0.8704107 (373)\ttotal: 9.92s\tremaining: 16.1s\n",
            "381:\tlearn: 0.8828007\ttest: 0.8697402\tbest: 0.8704107 (373)\ttotal: 9.95s\tremaining: 16.1s\n",
            "382:\tlearn: 0.8828648\ttest: 0.8701190\tbest: 0.8704107 (373)\ttotal: 9.97s\tremaining: 16.1s\n",
            "383:\tlearn: 0.8826876\ttest: 0.8696527\tbest: 0.8704107 (373)\ttotal: 9.99s\tremaining: 16s\n",
            "384:\tlearn: 0.8827811\ttest: 0.8703238\tbest: 0.8704107 (373)\ttotal: 10s\tremaining: 16s\n",
            "385:\tlearn: 0.8829017\ttest: 0.8701778\tbest: 0.8704107 (373)\ttotal: 10s\tremaining: 16s\n",
            "386:\tlearn: 0.8827984\ttest: 0.8702802\tbest: 0.8704107 (373)\ttotal: 10.1s\tremaining: 15.9s\n",
            "387:\tlearn: 0.8828919\ttest: 0.8703238\tbest: 0.8704107 (373)\ttotal: 10.1s\tremaining: 15.9s\n",
            "388:\tlearn: 0.8829289\ttest: 0.8697987\tbest: 0.8704107 (373)\ttotal: 10.1s\tremaining: 15.9s\n",
            "389:\tlearn: 0.8827246\ttest: 0.8697987\tbest: 0.8704107 (373)\ttotal: 10.2s\tremaining: 15.9s\n",
            "390:\tlearn: 0.8827246\ttest: 0.8699446\tbest: 0.8704107 (373)\ttotal: 10.2s\tremaining: 15.9s\n",
            "391:\tlearn: 0.8827419\ttest: 0.8699446\tbest: 0.8704107 (373)\ttotal: 10.2s\tremaining: 15.8s\n",
            "392:\tlearn: 0.8827886\ttest: 0.8699446\tbest: 0.8704107 (373)\ttotal: 10.2s\tremaining: 15.8s\n",
            "393:\tlearn: 0.8826484\ttest: 0.8700906\tbest: 0.8704107 (373)\ttotal: 10.3s\tremaining: 15.8s\n",
            "394:\tlearn: 0.8829093\ttest: 0.8700906\tbest: 0.8704107 (373)\ttotal: 10.3s\tremaining: 15.7s\n",
            "395:\tlearn: 0.8829907\ttest: 0.8702802\tbest: 0.8704107 (373)\ttotal: 10.3s\tremaining: 15.7s\n",
            "396:\tlearn: 0.8830103\ttest: 0.8702802\tbest: 0.8704107 (373)\ttotal: 10.3s\tremaining: 15.7s\n",
            "397:\tlearn: 0.8832224\ttest: 0.8699010\tbest: 0.8704107 (373)\ttotal: 10.4s\tremaining: 15.7s\n",
            "398:\tlearn: 0.8832224\ttest: 0.8699010\tbest: 0.8704107 (373)\ttotal: 10.4s\tremaining: 15.6s\n",
            "399:\tlearn: 0.8832866\ttest: 0.8698135\tbest: 0.8704107 (373)\ttotal: 10.4s\tremaining: 15.6s\n",
            "400:\tlearn: 0.8830821\ttest: 0.8699597\tbest: 0.8704107 (373)\ttotal: 10.4s\tremaining: 15.6s\n",
            "401:\tlearn: 0.8830331\ttest: 0.8695652\tbest: 0.8704107 (373)\ttotal: 10.5s\tremaining: 15.6s\n",
            "402:\tlearn: 0.8828557\ttest: 0.8699597\tbest: 0.8704107 (373)\ttotal: 10.5s\tremaining: 15.5s\n",
            "403:\tlearn: 0.8828829\ttest: 0.8698135\tbest: 0.8704107 (373)\ttotal: 10.5s\tremaining: 15.5s\n",
            "404:\tlearn: 0.8829319\ttest: 0.8699597\tbest: 0.8704107 (373)\ttotal: 10.5s\tremaining: 15.5s\n",
            "405:\tlearn: 0.8830995\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 10.6s\tremaining: 15.5s\n",
            "406:\tlearn: 0.8829787\ttest: 0.8694337\tbest: 0.8704107 (373)\ttotal: 10.6s\tremaining: 15.4s\n",
            "407:\tlearn: 0.8828950\ttest: 0.8692437\tbest: 0.8704107 (373)\ttotal: 10.6s\tremaining: 15.4s\n",
            "408:\tlearn: 0.8830995\ttest: 0.8692437\tbest: 0.8704107 (373)\ttotal: 10.6s\tremaining: 15.4s\n",
            "409:\tlearn: 0.8830897\ttest: 0.8691997\tbest: 0.8704107 (373)\ttotal: 10.7s\tremaining: 15.3s\n",
            "410:\tlearn: 0.8832202\ttest: 0.8690536\tbest: 0.8704107 (373)\ttotal: 10.7s\tremaining: 15.3s\n",
            "411:\tlearn: 0.8833508\ttest: 0.8692437\tbest: 0.8704107 (373)\ttotal: 10.7s\tremaining: 15.3s\n",
            "412:\tlearn: 0.8833138\ttest: 0.8692437\tbest: 0.8704107 (373)\ttotal: 10.7s\tremaining: 15.3s\n",
            "413:\tlearn: 0.8832028\ttest: 0.8693315\tbest: 0.8704107 (373)\ttotal: 10.8s\tremaining: 15.2s\n",
            "414:\tlearn: 0.8833878\ttest: 0.8693754\tbest: 0.8704107 (373)\ttotal: 10.8s\tremaining: 15.2s\n",
            "415:\tlearn: 0.8834443\ttest: 0.8690836\tbest: 0.8704107 (373)\ttotal: 10.8s\tremaining: 15.2s\n",
            "416:\tlearn: 0.8837424\ttest: 0.8693754\tbest: 0.8704107 (373)\ttotal: 10.8s\tremaining: 15.1s\n",
            "417:\tlearn: 0.8836956\ttest: 0.8693754\tbest: 0.8704107 (373)\ttotal: 10.9s\tremaining: 15.1s\n",
            "418:\tlearn: 0.8835651\ttest: 0.8693754\tbest: 0.8704107 (373)\ttotal: 10.9s\tremaining: 15.1s\n",
            "419:\tlearn: 0.8837151\ttest: 0.8692295\tbest: 0.8704107 (373)\ttotal: 10.9s\tremaining: 15.1s\n",
            "420:\tlearn: 0.8837716\ttest: 0.8695214\tbest: 0.8704107 (373)\ttotal: 10.9s\tremaining: 15s\n",
            "421:\tlearn: 0.8837988\ttest: 0.8694776\tbest: 0.8704107 (373)\ttotal: 11s\tremaining: 15s\n",
            "422:\tlearn: 0.8838923\ttest: 0.8691416\tbest: 0.8704107 (373)\ttotal: 11s\tremaining: 15s\n",
            "423:\tlearn: 0.8839196\ttest: 0.8692876\tbest: 0.8704107 (373)\ttotal: 11s\tremaining: 15s\n",
            "424:\tlearn: 0.8839196\ttest: 0.8692876\tbest: 0.8704107 (373)\ttotal: 11s\tremaining: 14.9s\n",
            "425:\tlearn: 0.8840307\ttest: 0.8692876\tbest: 0.8704107 (373)\ttotal: 11.1s\tremaining: 14.9s\n",
            "426:\tlearn: 0.8839196\ttest: 0.8689956\tbest: 0.8704107 (373)\ttotal: 11.1s\tremaining: 14.9s\n",
            "427:\tlearn: 0.8837794\ttest: 0.8689516\tbest: 0.8704107 (373)\ttotal: 11.1s\tremaining: 14.8s\n",
            "428:\tlearn: 0.8836956\ttest: 0.8690976\tbest: 0.8704107 (373)\ttotal: 11.1s\tremaining: 14.8s\n",
            "429:\tlearn: 0.8837229\ttest: 0.8693898\tbest: 0.8704107 (373)\ttotal: 11.2s\tremaining: 14.8s\n",
            "430:\tlearn: 0.8837599\ttest: 0.8692437\tbest: 0.8704107 (373)\ttotal: 11.2s\tremaining: 14.8s\n",
            "431:\tlearn: 0.8837131\ttest: 0.8694337\tbest: 0.8704107 (373)\ttotal: 11.2s\tremaining: 14.8s\n",
            "432:\tlearn: 0.8838534\ttest: 0.8694337\tbest: 0.8704107 (373)\ttotal: 11.2s\tremaining: 14.7s\n",
            "433:\tlearn: 0.8837696\ttest: 0.8697698\tbest: 0.8704107 (373)\ttotal: 11.3s\tremaining: 14.7s\n",
            "434:\tlearn: 0.8839839\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.3s\tremaining: 14.7s\n",
            "435:\tlearn: 0.8837131\ttest: 0.8697698\tbest: 0.8704107 (373)\ttotal: 11.3s\tremaining: 14.7s\n",
            "436:\tlearn: 0.8839936\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.4s\tremaining: 14.6s\n",
            "437:\tlearn: 0.8840598\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.4s\tremaining: 14.6s\n",
            "438:\tlearn: 0.8841532\ttest: 0.8697698\tbest: 0.8704107 (373)\ttotal: 11.4s\tremaining: 14.6s\n",
            "439:\tlearn: 0.8841903\ttest: 0.8697698\tbest: 0.8704107 (373)\ttotal: 11.4s\tremaining: 14.5s\n",
            "440:\tlearn: 0.8841162\ttest: 0.8697698\tbest: 0.8704107 (373)\ttotal: 11.5s\tremaining: 14.5s\n",
            "441:\tlearn: 0.8841259\ttest: 0.8694337\tbest: 0.8704107 (373)\ttotal: 11.5s\tremaining: 14.5s\n",
            "442:\tlearn: 0.8840889\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.5s\tremaining: 14.5s\n",
            "443:\tlearn: 0.8841259\ttest: 0.8695360\tbest: 0.8704107 (373)\ttotal: 11.5s\tremaining: 14.4s\n",
            "444:\tlearn: 0.8842096\ttest: 0.8698135\tbest: 0.8704107 (373)\ttotal: 11.6s\tremaining: 14.4s\n",
            "445:\tlearn: 0.8841162\ttest: 0.8698135\tbest: 0.8704107 (373)\ttotal: 11.6s\tremaining: 14.4s\n",
            "446:\tlearn: 0.8843127\ttest: 0.8699597\tbest: 0.8704107 (373)\ttotal: 11.6s\tremaining: 14.4s\n",
            "447:\tlearn: 0.8843031\ttest: 0.8696237\tbest: 0.8704107 (373)\ttotal: 11.6s\tremaining: 14.3s\n",
            "448:\tlearn: 0.8843868\ttest: 0.8696237\tbest: 0.8704107 (373)\ttotal: 11.7s\tremaining: 14.3s\n",
            "449:\tlearn: 0.8844238\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.7s\tremaining: 14.3s\n",
            "450:\tlearn: 0.8845735\ttest: 0.8695798\tbest: 0.8704107 (373)\ttotal: 11.7s\tremaining: 14.3s\n",
            "451:\tlearn: 0.8846669\ttest: 0.8700622\tbest: 0.8704107 (373)\ttotal: 11.7s\tremaining: 14.2s\n",
            "452:\tlearn: 0.8848809\ttest: 0.8704419\tbest: 0.8704419 (452)\ttotal: 11.8s\tremaining: 14.2s\n",
            "453:\tlearn: 0.8850483\ttest: 0.8702957\tbest: 0.8704419 (452)\ttotal: 11.8s\tremaining: 14.2s\n",
            "454:\tlearn: 0.8849743\ttest: 0.8701495\tbest: 0.8704419 (452)\ttotal: 11.8s\tremaining: 14.2s\n",
            "455:\tlearn: 0.8850387\ttest: 0.8702521\tbest: 0.8704419 (452)\ttotal: 11.9s\tremaining: 14.1s\n",
            "456:\tlearn: 0.8851320\ttest: 0.8701059\tbest: 0.8704419 (452)\ttotal: 11.9s\tremaining: 14.1s\n",
            "457:\tlearn: 0.8854215\ttest: 0.8704855\tbest: 0.8704855 (457)\ttotal: 11.9s\tremaining: 14.1s\n",
            "458:\tlearn: 0.8853831\ttest: 0.8706317\tbest: 0.8706317 (458)\ttotal: 11.9s\tremaining: 14.1s\n",
            "459:\tlearn: 0.8854393\ttest: 0.8704419\tbest: 0.8706317 (458)\ttotal: 11.9s\tremaining: 14s\n",
            "460:\tlearn: 0.8856342\ttest: 0.8702957\tbest: 0.8706317 (458)\ttotal: 12s\tremaining: 14s\n",
            "461:\tlearn: 0.8857083\ttest: 0.8702957\tbest: 0.8706317 (458)\ttotal: 12s\tremaining: 14s\n",
            "462:\tlearn: 0.8857549\ttest: 0.8704419\tbest: 0.8706317 (458)\ttotal: 12s\tremaining: 13.9s\n",
            "463:\tlearn: 0.8860156\ttest: 0.8704419\tbest: 0.8706317 (458)\ttotal: 12.1s\tremaining: 13.9s\n",
            "464:\tlearn: 0.8860156\ttest: 0.8706317\tbest: 0.8706317 (458)\ttotal: 12.1s\tremaining: 13.9s\n",
            "465:\tlearn: 0.8860251\ttest: 0.8706317\tbest: 0.8706317 (458)\ttotal: 12.1s\tremaining: 13.9s\n",
            "466:\tlearn: 0.8858948\ttest: 0.8706317\tbest: 0.8706317 (458)\ttotal: 12.1s\tremaining: 13.8s\n",
            "467:\tlearn: 0.8858853\ttest: 0.8710111\tbest: 0.8710111 (467)\ttotal: 12.2s\tremaining: 13.8s\n",
            "468:\tlearn: 0.8860622\ttest: 0.8708648\tbest: 0.8710111 (467)\ttotal: 12.2s\tremaining: 13.8s\n",
            "469:\tlearn: 0.8863418\ttest: 0.8712007\tbest: 0.8712007 (469)\ttotal: 12.2s\tremaining: 13.8s\n",
            "470:\tlearn: 0.8863227\ttest: 0.8714334\tbest: 0.8714334 (470)\ttotal: 12.2s\tremaining: 13.8s\n",
            "471:\tlearn: 0.8863323\ttest: 0.8712439\tbest: 0.8714334 (470)\ttotal: 12.3s\tremaining: 13.7s\n",
            "472:\tlearn: 0.8862295\ttest: 0.8710544\tbest: 0.8714334 (470)\ttotal: 12.3s\tremaining: 13.7s\n",
            "473:\tlearn: 0.8861925\ttest: 0.8706752\tbest: 0.8714334 (470)\ttotal: 12.3s\tremaining: 13.7s\n",
            "474:\tlearn: 0.8862020\ttest: 0.8708648\tbest: 0.8714334 (470)\ttotal: 12.4s\tremaining: 13.7s\n",
            "475:\tlearn: 0.8861459\ttest: 0.8710544\tbest: 0.8714334 (470)\ttotal: 12.4s\tremaining: 13.6s\n",
            "476:\tlearn: 0.8860060\ttest: 0.8713470\tbest: 0.8714334 (470)\ttotal: 12.4s\tremaining: 13.6s\n",
            "477:\tlearn: 0.8863227\ttest: 0.8715365\tbest: 0.8715365 (477)\ttotal: 12.4s\tremaining: 13.6s\n",
            "478:\tlearn: 0.8866204\ttest: 0.8715365\tbest: 0.8715365 (477)\ttotal: 12.5s\tremaining: 13.5s\n",
            "479:\tlearn: 0.8863874\ttest: 0.8713902\tbest: 0.8715365 (477)\ttotal: 12.5s\tremaining: 13.5s\n",
            "480:\tlearn: 0.8865367\ttest: 0.8714334\tbest: 0.8715365 (477)\ttotal: 12.5s\tremaining: 13.5s\n",
            "481:\tlearn: 0.8864530\ttest: 0.8716228\tbest: 0.8716228 (481)\ttotal: 12.5s\tremaining: 13.5s\n",
            "482:\tlearn: 0.8865833\ttest: 0.8716228\tbest: 0.8716228 (481)\ttotal: 12.6s\tremaining: 13.4s\n",
            "483:\tlearn: 0.8866393\ttest: 0.8719154\tbest: 0.8719154 (483)\ttotal: 12.6s\tremaining: 13.4s\n",
            "484:\tlearn: 0.8865186\ttest: 0.8715797\tbest: 0.8719154 (483)\ttotal: 12.6s\tremaining: 13.4s\n",
            "485:\tlearn: 0.8865281\ttest: 0.8714334\tbest: 0.8719154 (483)\ttotal: 12.6s\tremaining: 13.4s\n",
            "486:\tlearn: 0.8868714\ttest: 0.8715797\tbest: 0.8719154 (483)\ttotal: 12.7s\tremaining: 13.3s\n",
            "487:\tlearn: 0.8868809\ttest: 0.8715797\tbest: 0.8719154 (483)\ttotal: 12.7s\tremaining: 13.3s\n",
            "488:\tlearn: 0.8870576\ttest: 0.8715797\tbest: 0.8719154 (483)\ttotal: 12.7s\tremaining: 13.3s\n",
            "489:\tlearn: 0.8868801\ttest: 0.8713902\tbest: 0.8719154 (483)\ttotal: 12.7s\tremaining: 13.3s\n",
            "490:\tlearn: 0.8868335\ttest: 0.8712439\tbest: 0.8719154 (483)\ttotal: 12.8s\tremaining: 13.2s\n",
            "491:\tlearn: 0.8868801\ttest: 0.8715797\tbest: 0.8719154 (483)\ttotal: 12.8s\tremaining: 13.2s\n",
            "492:\tlearn: 0.8868240\ttest: 0.8717260\tbest: 0.8719154 (483)\ttotal: 12.8s\tremaining: 13.2s\n",
            "493:\tlearn: 0.8867498\ttest: 0.8718724\tbest: 0.8719154 (483)\ttotal: 12.8s\tremaining: 13.2s\n",
            "494:\tlearn: 0.8872061\ttest: 0.8722082\tbest: 0.8722082 (494)\ttotal: 12.9s\tremaining: 13.1s\n",
            "495:\tlearn: 0.8872803\ttest: 0.8719154\tbest: 0.8722082 (494)\ttotal: 12.9s\tremaining: 13.1s\n",
            "496:\tlearn: 0.8871319\ttest: 0.8720618\tbest: 0.8722082 (494)\ttotal: 12.9s\tremaining: 13.1s\n",
            "497:\tlearn: 0.8872621\ttest: 0.8720618\tbest: 0.8722082 (494)\ttotal: 12.9s\tremaining: 13s\n",
            "498:\tlearn: 0.8873086\ttest: 0.8720618\tbest: 0.8722082 (494)\ttotal: 13s\tremaining: 13s\n",
            "499:\tlearn: 0.8872803\ttest: 0.8720618\tbest: 0.8722082 (494)\ttotal: 13s\tremaining: 13s\n",
            "500:\tlearn: 0.8873640\ttest: 0.8719154\tbest: 0.8722082 (494)\ttotal: 13s\tremaining: 13s\n",
            "501:\tlearn: 0.8874106\ttest: 0.8720618\tbest: 0.8722082 (494)\ttotal: 13s\tremaining: 12.9s\n",
            "502:\tlearn: 0.8874942\ttest: 0.8717260\tbest: 0.8722082 (494)\ttotal: 13.1s\tremaining: 12.9s\n",
            "503:\tlearn: 0.8876245\ttest: 0.8717260\tbest: 0.8722082 (494)\ttotal: 13.1s\tremaining: 12.9s\n",
            "504:\tlearn: 0.8876987\ttest: 0.8715797\tbest: 0.8722082 (494)\ttotal: 13.1s\tremaining: 12.9s\n",
            "505:\tlearn: 0.8877265\ttest: 0.8715797\tbest: 0.8722082 (494)\ttotal: 13.1s\tremaining: 12.8s\n",
            "506:\tlearn: 0.8876893\ttest: 0.8714334\tbest: 0.8722082 (494)\ttotal: 13.2s\tremaining: 12.8s\n",
            "507:\tlearn: 0.8877359\ttest: 0.8715797\tbest: 0.8722082 (494)\ttotal: 13.2s\tremaining: 12.8s\n",
            "508:\tlearn: 0.8876705\ttest: 0.8717260\tbest: 0.8722082 (494)\ttotal: 13.2s\tremaining: 12.8s\n",
            "509:\tlearn: 0.8878657\ttest: 0.8717260\tbest: 0.8722082 (494)\ttotal: 13.3s\tremaining: 12.7s\n",
            "510:\tlearn: 0.8880425\ttest: 0.8715797\tbest: 0.8722082 (494)\ttotal: 13.3s\tremaining: 12.7s\n",
            "511:\tlearn: 0.8880241\ttest: 0.8712871\tbest: 0.8722082 (494)\ttotal: 13.3s\tremaining: 12.7s\n",
            "512:\tlearn: 0.8881356\ttest: 0.8715797\tbest: 0.8722082 (494)\ttotal: 13.3s\tremaining: 12.7s\n",
            "513:\tlearn: 0.8880238\ttest: 0.8722511\tbest: 0.8722511 (513)\ttotal: 13.4s\tremaining: 12.6s\n",
            "514:\tlearn: 0.8880144\ttest: 0.8722511\tbest: 0.8722511 (513)\ttotal: 13.4s\tremaining: 12.6s\n",
            "515:\tlearn: 0.8881912\ttest: 0.8720618\tbest: 0.8722511 (513)\ttotal: 13.4s\tremaining: 12.6s\n",
            "516:\tlearn: 0.8881353\ttest: 0.8722511\tbest: 0.8722511 (513)\ttotal: 13.4s\tremaining: 12.5s\n",
            "517:\tlearn: 0.8882190\ttest: 0.8721047\tbest: 0.8722511 (513)\ttotal: 13.5s\tremaining: 12.5s\n",
            "518:\tlearn: 0.8882284\ttest: 0.8722511\tbest: 0.8722511 (513)\ttotal: 13.5s\tremaining: 12.5s\n",
            "519:\tlearn: 0.8881912\ttest: 0.8724832\tbest: 0.8724832 (519)\ttotal: 13.5s\tremaining: 12.5s\n",
            "520:\tlearn: 0.8880703\ttest: 0.8724832\tbest: 0.8724832 (519)\ttotal: 13.5s\tremaining: 12.4s\n",
            "521:\tlearn: 0.8880144\ttest: 0.8726724\tbest: 0.8726724 (521)\ttotal: 13.6s\tremaining: 12.4s\n",
            "522:\tlearn: 0.8883306\ttest: 0.8726724\tbest: 0.8726724 (521)\ttotal: 13.6s\tremaining: 12.4s\n",
            "523:\tlearn: 0.8884144\ttest: 0.8726296\tbest: 0.8726724 (521)\ttotal: 13.6s\tremaining: 12.4s\n",
            "524:\tlearn: 0.8882841\ttest: 0.8725869\tbest: 0.8726724 (521)\ttotal: 13.6s\tremaining: 12.3s\n",
            "525:\tlearn: 0.8883772\ttest: 0.8727334\tbest: 0.8727334 (525)\ttotal: 13.7s\tremaining: 12.3s\n",
            "526:\tlearn: 0.8881725\ttest: 0.8728799\tbest: 0.8728799 (526)\ttotal: 13.7s\tremaining: 12.3s\n",
            "527:\tlearn: 0.8881725\ttest: 0.8725013\tbest: 0.8728799 (526)\ttotal: 13.7s\tremaining: 12.3s\n",
            "528:\tlearn: 0.8882469\ttest: 0.8727334\tbest: 0.8728799 (526)\ttotal: 13.7s\tremaining: 12.2s\n",
            "529:\tlearn: 0.8880794\ttest: 0.8722082\tbest: 0.8728799 (526)\ttotal: 13.8s\tremaining: 12.2s\n",
            "530:\tlearn: 0.8882097\ttest: 0.8728799\tbest: 0.8728799 (526)\ttotal: 13.8s\tremaining: 12.2s\n",
            "531:\tlearn: 0.8881538\ttest: 0.8727334\tbest: 0.8728799 (526)\ttotal: 13.8s\tremaining: 12.1s\n",
            "532:\tlearn: 0.8881631\ttest: 0.8725869\tbest: 0.8728799 (526)\ttotal: 13.8s\tremaining: 12.1s\n",
            "533:\tlearn: 0.8883678\ttest: 0.8723976\tbest: 0.8728799 (526)\ttotal: 13.9s\tremaining: 12.1s\n",
            "534:\tlearn: 0.8882560\ttest: 0.8732584\tbest: 0.8732584 (534)\ttotal: 13.9s\tremaining: 12.1s\n",
            "535:\tlearn: 0.8884050\ttest: 0.8734050\tbest: 0.8734050 (535)\ttotal: 13.9s\tremaining: 12s\n",
            "536:\tlearn: 0.8885166\ttest: 0.8735516\tbest: 0.8735516 (536)\ttotal: 13.9s\tremaining: 12s\n",
            "537:\tlearn: 0.8884794\ttest: 0.8730265\tbest: 0.8735516 (536)\ttotal: 14s\tremaining: 12s\n",
            "538:\tlearn: 0.8884794\ttest: 0.8728372\tbest: 0.8735516 (536)\ttotal: 14s\tremaining: 12s\n",
            "539:\tlearn: 0.8885071\ttest: 0.8729839\tbest: 0.8735516 (536)\ttotal: 14s\tremaining: 11.9s\n",
            "540:\tlearn: 0.8886468\ttest: 0.8726906\tbest: 0.8735516 (536)\ttotal: 14s\tremaining: 11.9s\n",
            "541:\tlearn: 0.8886934\ttest: 0.8728372\tbest: 0.8735516 (536)\ttotal: 14.1s\tremaining: 11.9s\n",
            "542:\tlearn: 0.8885816\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.1s\tremaining: 11.8s\n",
            "543:\tlearn: 0.8886188\ttest: 0.8720188\tbest: 0.8735516 (536)\ttotal: 14.1s\tremaining: 11.8s\n",
            "544:\tlearn: 0.8886841\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 14.1s\tremaining: 11.8s\n",
            "545:\tlearn: 0.8884235\ttest: 0.8720618\tbest: 0.8735516 (536)\ttotal: 14.2s\tremaining: 11.8s\n",
            "546:\tlearn: 0.8886655\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.2s\tremaining: 11.8s\n",
            "547:\tlearn: 0.8888330\ttest: 0.8720618\tbest: 0.8735516 (536)\ttotal: 14.2s\tremaining: 11.7s\n",
            "548:\tlearn: 0.8886096\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.2s\tremaining: 11.7s\n",
            "549:\tlearn: 0.8886562\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.3s\tremaining: 11.7s\n",
            "550:\tlearn: 0.8887493\ttest: 0.8725013\tbest: 0.8735516 (536)\ttotal: 14.3s\tremaining: 11.7s\n",
            "551:\tlearn: 0.8887958\ttest: 0.8725013\tbest: 0.8735516 (536)\ttotal: 14.3s\tremaining: 11.6s\n",
            "552:\tlearn: 0.8886283\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.4s\tremaining: 11.6s\n",
            "553:\tlearn: 0.8886376\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.4s\tremaining: 11.6s\n",
            "554:\tlearn: 0.8886748\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.4s\tremaining: 11.5s\n",
            "555:\tlearn: 0.8886934\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.4s\tremaining: 11.5s\n",
            "556:\tlearn: 0.8887027\ttest: 0.8722511\tbest: 0.8735516 (536)\ttotal: 14.4s\tremaining: 11.5s\n",
            "557:\tlearn: 0.8890192\ttest: 0.8723976\tbest: 0.8735516 (536)\ttotal: 14.5s\tremaining: 11.5s\n",
            "558:\tlearn: 0.8891403\ttest: 0.8720618\tbest: 0.8735516 (536)\ttotal: 14.5s\tremaining: 11.4s\n",
            "559:\tlearn: 0.8892893\ttest: 0.8720618\tbest: 0.8735516 (536)\ttotal: 14.5s\tremaining: 11.4s\n",
            "560:\tlearn: 0.8892335\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.6s\tremaining: 11.4s\n",
            "561:\tlearn: 0.8890565\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.6s\tremaining: 11.4s\n",
            "562:\tlearn: 0.8888610\ttest: 0.8725013\tbest: 0.8735516 (536)\ttotal: 14.6s\tremaining: 11.3s\n",
            "563:\tlearn: 0.8888889\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.6s\tremaining: 11.3s\n",
            "564:\tlearn: 0.8889820\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.7s\tremaining: 11.3s\n",
            "565:\tlearn: 0.8888982\ttest: 0.8725441\tbest: 0.8735516 (536)\ttotal: 14.7s\tremaining: 11.3s\n",
            "566:\tlearn: 0.8888703\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.7s\tremaining: 11.2s\n",
            "567:\tlearn: 0.8888330\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.8s\tremaining: 11.2s\n",
            "568:\tlearn: 0.8888703\ttest: 0.8723547\tbest: 0.8735516 (536)\ttotal: 14.8s\tremaining: 11.2s\n",
            "569:\tlearn: 0.8888330\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 14.8s\tremaining: 11.2s\n",
            "570:\tlearn: 0.8889914\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 14.8s\tremaining: 11.1s\n",
            "571:\tlearn: 0.8892429\ttest: 0.8721223\tbest: 0.8735516 (536)\ttotal: 14.9s\tremaining: 11.1s\n",
            "572:\tlearn: 0.8890566\ttest: 0.8721223\tbest: 0.8735516 (536)\ttotal: 14.9s\tremaining: 11.1s\n",
            "573:\tlearn: 0.8889448\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 14.9s\tremaining: 11.1s\n",
            "574:\tlearn: 0.8890566\ttest: 0.8718293\tbest: 0.8735516 (536)\ttotal: 14.9s\tremaining: 11s\n",
            "575:\tlearn: 0.8889727\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 15s\tremaining: 11s\n",
            "576:\tlearn: 0.8889355\ttest: 0.8721653\tbest: 0.8735516 (536)\ttotal: 15s\tremaining: 11s\n",
            "577:\tlearn: 0.8890566\ttest: 0.8717863\tbest: 0.8735516 (536)\ttotal: 15s\tremaining: 11s\n",
            "578:\tlearn: 0.8892709\ttest: 0.8717863\tbest: 0.8735516 (536)\ttotal: 15s\tremaining: 10.9s\n",
            "579:\tlearn: 0.8894666\ttest: 0.8719758\tbest: 0.8735516 (536)\ttotal: 15.1s\tremaining: 10.9s\n",
            "580:\tlearn: 0.8893828\ttest: 0.8718293\tbest: 0.8735516 (536)\ttotal: 15.1s\tremaining: 10.9s\n",
            "581:\tlearn: 0.8893455\ttest: 0.8716398\tbest: 0.8735516 (536)\ttotal: 15.1s\tremaining: 10.9s\n",
            "582:\tlearn: 0.8894944\ttest: 0.8716398\tbest: 0.8735516 (536)\ttotal: 15.2s\tremaining: 10.8s\n",
            "583:\tlearn: 0.8893082\ttest: 0.8717863\tbest: 0.8735516 (536)\ttotal: 15.2s\tremaining: 10.8s\n",
            "584:\tlearn: 0.8895225\ttest: 0.8719328\tbest: 0.8735516 (536)\ttotal: 15.2s\tremaining: 10.8s\n",
            "585:\tlearn: 0.8895317\ttest: 0.8717863\tbest: 0.8735516 (536)\ttotal: 15.2s\tremaining: 10.8s\n",
            "586:\tlearn: 0.8895132\ttest: 0.8717863\tbest: 0.8735516 (536)\ttotal: 15.3s\tremaining: 10.7s\n",
            "587:\tlearn: 0.8896344\ttest: 0.8719328\tbest: 0.8735516 (536)\ttotal: 15.3s\tremaining: 10.7s\n",
            "588:\tlearn: 0.8895505\ttest: 0.8719328\tbest: 0.8735516 (536)\ttotal: 15.3s\tremaining: 10.7s\n",
            "589:\tlearn: 0.8896251\ttest: 0.8715966\tbest: 0.8735516 (536)\ttotal: 15.4s\tremaining: 10.7s\n",
            "590:\tlearn: 0.8897463\ttest: 0.8715966\tbest: 0.8735516 (536)\ttotal: 15.4s\tremaining: 10.6s\n",
            "591:\tlearn: 0.8897463\ttest: 0.8715966\tbest: 0.8735516 (536)\ttotal: 15.4s\tremaining: 10.6s\n",
            "592:\tlearn: 0.8897370\ttest: 0.8715966\tbest: 0.8735516 (536)\ttotal: 15.4s\tremaining: 10.6s\n",
            "593:\tlearn: 0.8898302\ttest: 0.8715966\tbest: 0.8735516 (536)\ttotal: 15.5s\tremaining: 10.6s\n",
            "594:\tlearn: 0.8898302\ttest: 0.8714502\tbest: 0.8735516 (536)\ttotal: 15.5s\tremaining: 10.5s\n",
            "595:\tlearn: 0.8897743\ttest: 0.8714070\tbest: 0.8735516 (536)\ttotal: 15.5s\tremaining: 10.5s\n",
            "596:\tlearn: 0.8898767\ttest: 0.8715535\tbest: 0.8735516 (536)\ttotal: 15.5s\tremaining: 10.5s\n",
            "597:\tlearn: 0.8899048\ttest: 0.8717432\tbest: 0.8735516 (536)\ttotal: 15.6s\tremaining: 10.5s\n",
            "598:\tlearn: 0.8899421\ttest: 0.8715535\tbest: 0.8735516 (536)\ttotal: 15.6s\tremaining: 10.4s\n",
            "599:\tlearn: 0.8899887\ttest: 0.8720793\tbest: 0.8735516 (536)\ttotal: 15.6s\tremaining: 10.4s\n",
            "600:\tlearn: 0.8899606\ttest: 0.8718897\tbest: 0.8735516 (536)\ttotal: 15.6s\tremaining: 10.4s\n",
            "601:\tlearn: 0.8899421\ttest: 0.8717000\tbest: 0.8735516 (536)\ttotal: 15.7s\tremaining: 10.4s\n",
            "602:\tlearn: 0.8901288\ttest: 0.8718466\tbest: 0.8735516 (536)\ttotal: 15.7s\tremaining: 10.3s\n",
            "603:\tlearn: 0.8901007\ttest: 0.8721400\tbest: 0.8735516 (536)\ttotal: 15.7s\tremaining: 10.3s\n",
            "604:\tlearn: 0.8901099\ttest: 0.8721400\tbest: 0.8735516 (536)\ttotal: 15.7s\tremaining: 10.3s\n",
            "605:\tlearn: 0.8902403\ttest: 0.8721400\tbest: 0.8735516 (536)\ttotal: 15.8s\tremaining: 10.2s\n",
            "606:\tlearn: 0.8903523\ttest: 0.8721400\tbest: 0.8735516 (536)\ttotal: 15.8s\tremaining: 10.2s\n",
            "607:\tlearn: 0.8903615\ttest: 0.8719502\tbest: 0.8735516 (536)\ttotal: 15.8s\tremaining: 10.2s\n",
            "608:\tlearn: 0.8903058\ttest: 0.8719502\tbest: 0.8735516 (536)\ttotal: 15.8s\tremaining: 10.2s\n",
            "609:\tlearn: 0.8902777\ttest: 0.8717604\tbest: 0.8735516 (536)\ttotal: 15.9s\tremaining: 10.1s\n",
            "610:\tlearn: 0.8902592\ttest: 0.8719933\tbest: 0.8735516 (536)\ttotal: 15.9s\tremaining: 10.1s\n",
            "611:\tlearn: 0.8903431\ttest: 0.8719933\tbest: 0.8735516 (536)\ttotal: 15.9s\tremaining: 10.1s\n",
            "612:\tlearn: 0.8903058\ttest: 0.8719933\tbest: 0.8735516 (536)\ttotal: 15.9s\tremaining: 10.1s\n",
            "613:\tlearn: 0.8901754\ttest: 0.8719933\tbest: 0.8735516 (536)\ttotal: 16s\tremaining: 10s\n",
            "614:\tlearn: 0.8901846\ttest: 0.8723726\tbest: 0.8735516 (536)\ttotal: 16s\tremaining: 10s\n",
            "615:\tlearn: 0.8901938\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16s\tremaining: 9.99s\n",
            "616:\tlearn: 0.8903242\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.1s\tremaining: 9.96s\n",
            "617:\tlearn: 0.8903707\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.1s\tremaining: 9.94s\n",
            "618:\tlearn: 0.8904173\ttest: 0.8722260\tbest: 0.8735516 (536)\ttotal: 16.1s\tremaining: 9.91s\n",
            "619:\tlearn: 0.8903707\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.1s\tremaining: 9.89s\n",
            "620:\tlearn: 0.8904546\ttest: 0.8724764\tbest: 0.8735516 (536)\ttotal: 16.2s\tremaining: 9.86s\n",
            "621:\tlearn: 0.8905759\ttest: 0.8726233\tbest: 0.8735516 (536)\ttotal: 16.2s\tremaining: 9.84s\n",
            "622:\tlearn: 0.8905477\ttest: 0.8722867\tbest: 0.8735516 (536)\ttotal: 16.2s\tremaining: 9.81s\n",
            "623:\tlearn: 0.8906407\ttest: 0.8723297\tbest: 0.8735516 (536)\ttotal: 16.3s\tremaining: 9.79s\n",
            "624:\tlearn: 0.8905942\ttest: 0.8724764\tbest: 0.8735516 (536)\ttotal: 16.3s\tremaining: 9.77s\n",
            "625:\tlearn: 0.8905477\ttest: 0.8722867\tbest: 0.8735516 (536)\ttotal: 16.3s\tremaining: 9.74s\n",
            "626:\tlearn: 0.8904546\ttest: 0.8722437\tbest: 0.8735516 (536)\ttotal: 16.3s\tremaining: 9.71s\n",
            "627:\tlearn: 0.8904920\ttest: 0.8722437\tbest: 0.8735516 (536)\ttotal: 16.4s\tremaining: 9.69s\n",
            "628:\tlearn: 0.8905293\ttest: 0.8723906\tbest: 0.8735516 (536)\ttotal: 16.4s\tremaining: 9.66s\n",
            "629:\tlearn: 0.8906132\ttest: 0.8726844\tbest: 0.8735516 (536)\ttotal: 16.4s\tremaining: 9.63s\n",
            "630:\tlearn: 0.8905018\ttest: 0.8727273\tbest: 0.8735516 (536)\ttotal: 16.4s\tremaining: 9.61s\n",
            "631:\tlearn: 0.8904362\ttest: 0.8730212\tbest: 0.8735516 (536)\ttotal: 16.5s\tremaining: 9.58s\n",
            "632:\tlearn: 0.8904362\ttest: 0.8730212\tbest: 0.8735516 (536)\ttotal: 16.5s\tremaining: 9.56s\n",
            "633:\tlearn: 0.8905018\ttest: 0.8730212\tbest: 0.8735516 (536)\ttotal: 16.5s\tremaining: 9.53s\n",
            "634:\tlearn: 0.8905850\ttest: 0.8730212\tbest: 0.8735516 (536)\ttotal: 16.5s\tremaining: 9.5s\n",
            "635:\tlearn: 0.8905477\ttest: 0.8730640\tbest: 0.8735516 (536)\ttotal: 16.6s\tremaining: 9.48s\n",
            "636:\tlearn: 0.8903431\ttest: 0.8732110\tbest: 0.8735516 (536)\ttotal: 16.6s\tremaining: 9.45s\n",
            "637:\tlearn: 0.8904828\ttest: 0.8732110\tbest: 0.8735516 (536)\ttotal: 16.6s\tremaining: 9.42s\n",
            "638:\tlearn: 0.8903989\ttest: 0.8732110\tbest: 0.8735516 (536)\ttotal: 16.6s\tremaining: 9.4s\n",
            "639:\tlearn: 0.8903242\ttest: 0.8732110\tbest: 0.8735516 (536)\ttotal: 16.7s\tremaining: 9.37s\n",
            "640:\tlearn: 0.8903334\ttest: 0.8734007\tbest: 0.8735516 (536)\ttotal: 16.7s\tremaining: 9.35s\n",
            "641:\tlearn: 0.8907154\ttest: 0.8732537\tbest: 0.8735516 (536)\ttotal: 16.7s\tremaining: 9.32s\n",
            "642:\tlearn: 0.8905012\ttest: 0.8729170\tbest: 0.8735516 (536)\ttotal: 16.7s\tremaining: 9.3s\n",
            "643:\tlearn: 0.8906316\ttest: 0.8729170\tbest: 0.8735516 (536)\ttotal: 16.8s\tremaining: 9.27s\n",
            "644:\tlearn: 0.8906781\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.8s\tremaining: 9.24s\n",
            "645:\tlearn: 0.8908367\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.8s\tremaining: 9.22s\n",
            "646:\tlearn: 0.8909388\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 16.8s\tremaining: 9.19s\n",
            "647:\tlearn: 0.8910227\ttest: 0.8723726\tbest: 0.8735516 (536)\ttotal: 16.9s\tremaining: 9.17s\n",
            "648:\tlearn: 0.8910135\ttest: 0.8723726\tbest: 0.8735516 (536)\ttotal: 16.9s\tremaining: 9.14s\n",
            "649:\tlearn: 0.8909670\ttest: 0.8723726\tbest: 0.8735516 (536)\ttotal: 16.9s\tremaining: 9.11s\n",
            "650:\tlearn: 0.8910600\ttest: 0.8721830\tbest: 0.8735516 (536)\ttotal: 16.9s\tremaining: 9.08s\n",
            "651:\tlearn: 0.8910600\ttest: 0.8721830\tbest: 0.8735516 (536)\ttotal: 17s\tremaining: 9.06s\n",
            "652:\tlearn: 0.8907619\ttest: 0.8723297\tbest: 0.8735516 (536)\ttotal: 17s\tremaining: 9.03s\n",
            "653:\tlearn: 0.8910135\ttest: 0.8724764\tbest: 0.8735516 (536)\ttotal: 17s\tremaining: 9.01s\n",
            "654:\tlearn: 0.8909670\ttest: 0.8723297\tbest: 0.8735516 (536)\ttotal: 17s\tremaining: 8.98s\n",
            "655:\tlearn: 0.8910600\ttest: 0.8723297\tbest: 0.8735516 (536)\ttotal: 17.1s\tremaining: 8.95s\n",
            "656:\tlearn: 0.8911813\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 17.1s\tremaining: 8.93s\n",
            "657:\tlearn: 0.8911722\ttest: 0.8724764\tbest: 0.8735516 (536)\ttotal: 17.1s\tremaining: 8.9s\n",
            "658:\tlearn: 0.8911539\ttest: 0.8725193\tbest: 0.8735516 (536)\ttotal: 17.2s\tremaining: 8.88s\n",
            "659:\tlearn: 0.8911722\ttest: 0.8726661\tbest: 0.8735516 (536)\ttotal: 17.2s\tremaining: 8.85s\n",
            "660:\tlearn: 0.8914885\ttest: 0.8731067\tbest: 0.8735516 (536)\ttotal: 17.2s\tremaining: 8.82s\n",
            "661:\tlearn: 0.8915632\ttest: 0.8728129\tbest: 0.8735516 (536)\ttotal: 17.2s\tremaining: 8.8s\n",
            "662:\tlearn: 0.8914986\ttest: 0.8728129\tbest: 0.8735516 (536)\ttotal: 17.3s\tremaining: 8.77s\n",
            "663:\tlearn: 0.8912752\ttest: 0.8732537\tbest: 0.8735516 (536)\ttotal: 17.3s\tremaining: 8.75s\n",
            "664:\tlearn: 0.8913408\ttest: 0.8729598\tbest: 0.8735516 (536)\ttotal: 17.3s\tremaining: 8.72s\n",
            "665:\tlearn: 0.8913682\ttest: 0.8729598\tbest: 0.8735516 (536)\ttotal: 17.3s\tremaining: 8.7s\n",
            "666:\tlearn: 0.8914986\ttest: 0.8731067\tbest: 0.8735516 (536)\ttotal: 17.4s\tremaining: 8.67s\n",
            "667:\tlearn: 0.8911174\ttest: 0.8734433\tbest: 0.8735516 (536)\ttotal: 17.4s\tremaining: 8.64s\n",
            "668:\tlearn: 0.8913965\ttest: 0.8738845\tbest: 0.8738845 (668)\ttotal: 17.4s\tremaining: 8.62s\n",
            "669:\tlearn: 0.8914430\ttest: 0.8736948\tbest: 0.8738845 (668)\ttotal: 17.4s\tremaining: 8.59s\n",
            "670:\tlearn: 0.8916572\ttest: 0.8735477\tbest: 0.8738845 (668)\ttotal: 17.5s\tremaining: 8.57s\n",
            "671:\tlearn: 0.8916481\ttest: 0.8733154\tbest: 0.8738845 (668)\ttotal: 17.5s\tremaining: 8.54s\n",
            "672:\tlearn: 0.8917785\ttest: 0.8735051\tbest: 0.8738845 (668)\ttotal: 17.5s\tremaining: 8.52s\n",
            "673:\tlearn: 0.8920109\ttest: 0.8732110\tbest: 0.8738845 (668)\ttotal: 17.6s\tremaining: 8.49s\n",
            "674:\tlearn: 0.8919554\ttest: 0.8734007\tbest: 0.8738845 (668)\ttotal: 17.6s\tremaining: 8.46s\n",
            "675:\tlearn: 0.8921141\ttest: 0.8736948\tbest: 0.8738845 (668)\ttotal: 17.6s\tremaining: 8.44s\n",
            "676:\tlearn: 0.8920767\ttest: 0.8735477\tbest: 0.8738845 (668)\ttotal: 17.6s\tremaining: 8.41s\n",
            "677:\tlearn: 0.8920574\ttest: 0.8736948\tbest: 0.8738845 (668)\ttotal: 17.7s\tremaining: 8.39s\n",
            "678:\tlearn: 0.8920483\ttest: 0.8735477\tbest: 0.8738845 (668)\ttotal: 17.7s\tremaining: 8.36s\n",
            "679:\tlearn: 0.8920483\ttest: 0.8737374\tbest: 0.8738845 (668)\ttotal: 17.7s\tremaining: 8.34s\n",
            "680:\tlearn: 0.8920948\ttest: 0.8737374\tbest: 0.8738845 (668)\ttotal: 17.7s\tremaining: 8.31s\n",
            "681:\tlearn: 0.8920109\ttest: 0.8737374\tbest: 0.8738845 (668)\ttotal: 17.8s\tremaining: 8.28s\n",
            "682:\tlearn: 0.8921787\ttest: 0.8735477\tbest: 0.8738845 (668)\ttotal: 17.8s\tremaining: 8.26s\n",
            "683:\tlearn: 0.8921322\ttest: 0.8731683\tbest: 0.8738845 (668)\ttotal: 17.8s\tremaining: 8.23s\n",
            "684:\tlearn: 0.8922625\ttest: 0.8731683\tbest: 0.8738845 (668)\ttotal: 17.8s\tremaining: 8.2s\n",
            "685:\tlearn: 0.8923464\ttest: 0.8733154\tbest: 0.8738845 (668)\ttotal: 17.9s\tremaining: 8.18s\n",
            "686:\tlearn: 0.8923464\ttest: 0.8733154\tbest: 0.8738845 (668)\ttotal: 17.9s\tremaining: 8.15s\n",
            "687:\tlearn: 0.8923374\ttest: 0.8734625\tbest: 0.8738845 (668)\ttotal: 17.9s\tremaining: 8.12s\n",
            "688:\tlearn: 0.8922999\ttest: 0.8736097\tbest: 0.8738845 (668)\ttotal: 17.9s\tremaining: 8.1s\n",
            "689:\tlearn: 0.8920393\ttest: 0.8741365\tbest: 0.8741365 (689)\ttotal: 18s\tremaining: 8.07s\n",
            "690:\tlearn: 0.8921231\ttest: 0.8739892\tbest: 0.8741365 (689)\ttotal: 18s\tremaining: 8.05s\n",
            "691:\tlearn: 0.8922070\ttest: 0.8738420\tbest: 0.8741365 (689)\ttotal: 18s\tremaining: 8.02s\n",
            "692:\tlearn: 0.8921889\ttest: 0.8739892\tbest: 0.8741365 (689)\ttotal: 18s\tremaining: 7.99s\n",
            "693:\tlearn: 0.8923193\ttest: 0.8739892\tbest: 0.8741365 (689)\ttotal: 18.1s\tremaining: 7.97s\n",
            "694:\tlearn: 0.8923387\ttest: 0.8740317\tbest: 0.8741365 (689)\ttotal: 18.1s\tremaining: 7.94s\n",
            "695:\tlearn: 0.8924781\ttest: 0.8741789\tbest: 0.8741789 (695)\ttotal: 18.1s\tremaining: 7.92s\n",
            "696:\tlearn: 0.8922354\ttest: 0.8746631\tbest: 0.8746631 (696)\ttotal: 18.2s\tremaining: 7.89s\n",
            "697:\tlearn: 0.8921708\ttest: 0.8746631\tbest: 0.8746631 (696)\ttotal: 18.2s\tremaining: 7.87s\n",
            "698:\tlearn: 0.8921708\ttest: 0.8746631\tbest: 0.8746631 (696)\ttotal: 18.2s\tremaining: 7.84s\n",
            "699:\tlearn: 0.8922083\ttest: 0.8748104\tbest: 0.8748104 (699)\ttotal: 18.2s\tremaining: 7.82s\n",
            "700:\tlearn: 0.8922367\ttest: 0.8748104\tbest: 0.8748104 (699)\ttotal: 18.3s\tremaining: 7.79s\n",
            "701:\tlearn: 0.8920598\ttest: 0.8748104\tbest: 0.8748104 (699)\ttotal: 18.3s\tremaining: 7.76s\n",
            "702:\tlearn: 0.8923658\ttest: 0.8748104\tbest: 0.8748104 (699)\ttotal: 18.3s\tremaining: 7.74s\n",
            "703:\tlearn: 0.8923477\ttest: 0.8746208\tbest: 0.8748104 (699)\ttotal: 18.3s\tremaining: 7.71s\n",
            "704:\tlearn: 0.8923193\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 18.4s\tremaining: 7.69s\n",
            "705:\tlearn: 0.8924406\ttest: 0.8746208\tbest: 0.8748104 (699)\ttotal: 18.4s\tremaining: 7.66s\n",
            "706:\tlearn: 0.8924961\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 18.4s\tremaining: 7.63s\n",
            "707:\tlearn: 0.8926923\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 18.4s\tremaining: 7.61s\n",
            "708:\tlearn: 0.8927762\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 18.5s\tremaining: 7.58s\n",
            "709:\tlearn: 0.8927388\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.5s\tremaining: 7.55s\n",
            "710:\tlearn: 0.8927582\ttest: 0.8741789\tbest: 0.8748104 (699)\ttotal: 18.5s\tremaining: 7.53s\n",
            "711:\tlearn: 0.8925994\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.5s\tremaining: 7.5s\n",
            "712:\tlearn: 0.8926279\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.6s\tremaining: 7.47s\n",
            "713:\tlearn: 0.8927388\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.6s\tremaining: 7.45s\n",
            "714:\tlearn: 0.8929905\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.6s\tremaining: 7.42s\n",
            "715:\tlearn: 0.8928601\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.6s\tremaining: 7.39s\n",
            "716:\tlearn: 0.8929635\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.7s\tremaining: 7.37s\n",
            "717:\tlearn: 0.8928047\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.7s\tremaining: 7.34s\n",
            "718:\tlearn: 0.8928137\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.7s\tremaining: 7.32s\n",
            "719:\tlearn: 0.8928886\ttest: 0.8740317\tbest: 0.8748104 (699)\ttotal: 18.7s\tremaining: 7.29s\n",
            "720:\tlearn: 0.8928422\ttest: 0.8741789\tbest: 0.8748104 (699)\ttotal: 18.8s\tremaining: 7.26s\n",
            "721:\tlearn: 0.8930939\ttest: 0.8741365\tbest: 0.8748104 (699)\ttotal: 18.8s\tremaining: 7.24s\n",
            "722:\tlearn: 0.8931403\ttest: 0.8739467\tbest: 0.8748104 (699)\ttotal: 18.8s\tremaining: 7.21s\n",
            "723:\tlearn: 0.8930744\ttest: 0.8743685\tbest: 0.8748104 (699)\ttotal: 18.9s\tremaining: 7.19s\n",
            "724:\tlearn: 0.8933546\ttest: 0.8739892\tbest: 0.8748104 (699)\ttotal: 18.9s\tremaining: 7.16s\n",
            "725:\tlearn: 0.8930939\ttest: 0.8739892\tbest: 0.8748104 (699)\ttotal: 18.9s\tremaining: 7.13s\n",
            "726:\tlearn: 0.8931493\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 18.9s\tremaining: 7.11s\n",
            "727:\tlearn: 0.8929815\ttest: 0.8742838\tbest: 0.8748104 (699)\ttotal: 19s\tremaining: 7.08s\n",
            "728:\tlearn: 0.8930564\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 19s\tremaining: 7.05s\n",
            "729:\tlearn: 0.8932153\ttest: 0.8746208\tbest: 0.8748104 (699)\ttotal: 19s\tremaining: 7.03s\n",
            "730:\tlearn: 0.8932063\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 19s\tremaining: 7s\n",
            "731:\tlearn: 0.8932063\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.1s\tremaining: 6.98s\n",
            "732:\tlearn: 0.8932348\ttest: 0.8746631\tbest: 0.8748104 (699)\ttotal: 19.1s\tremaining: 6.95s\n",
            "733:\tlearn: 0.8933277\ttest: 0.8745157\tbest: 0.8748104 (699)\ttotal: 19.1s\tremaining: 6.92s\n",
            "734:\tlearn: 0.8931509\ttest: 0.8748104\tbest: 0.8748104 (699)\ttotal: 19.1s\tremaining: 6.9s\n",
            "735:\tlearn: 0.8932348\ttest: 0.8746208\tbest: 0.8748104 (699)\ttotal: 19.2s\tremaining: 6.87s\n",
            "736:\tlearn: 0.8930580\ttest: 0.8740317\tbest: 0.8748104 (699)\ttotal: 19.2s\tremaining: 6.84s\n",
            "737:\tlearn: 0.8929276\ttest: 0.8739892\tbest: 0.8748104 (699)\ttotal: 19.2s\tremaining: 6.82s\n",
            "738:\tlearn: 0.8929186\ttest: 0.8742212\tbest: 0.8748104 (699)\ttotal: 19.2s\tremaining: 6.8s\n",
            "739:\tlearn: 0.8930026\ttest: 0.8742212\tbest: 0.8748104 (699)\ttotal: 19.3s\tremaining: 6.77s\n",
            "740:\tlearn: 0.8929471\ttest: 0.8742212\tbest: 0.8748104 (699)\ttotal: 19.3s\tremaining: 6.74s\n",
            "741:\tlearn: 0.8931240\ttest: 0.8742212\tbest: 0.8748104 (699)\ttotal: 19.3s\tremaining: 6.72s\n",
            "742:\tlearn: 0.8930400\ttest: 0.8746631\tbest: 0.8748104 (699)\ttotal: 19.3s\tremaining: 6.69s\n",
            "743:\tlearn: 0.8932455\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.4s\tremaining: 6.66s\n",
            "744:\tlearn: 0.8932455\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 19.4s\tremaining: 6.63s\n",
            "745:\tlearn: 0.8933848\ttest: 0.8744735\tbest: 0.8748104 (699)\ttotal: 19.4s\tremaining: 6.61s\n",
            "746:\tlearn: 0.8935617\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.4s\tremaining: 6.58s\n",
            "747:\tlearn: 0.8935242\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.5s\tremaining: 6.56s\n",
            "748:\tlearn: 0.8936081\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.5s\tremaining: 6.53s\n",
            "749:\tlearn: 0.8935331\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.5s\tremaining: 6.5s\n",
            "750:\tlearn: 0.8934313\ttest: 0.8745157\tbest: 0.8748104 (699)\ttotal: 19.5s\tremaining: 6.48s\n",
            "751:\tlearn: 0.8934688\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.6s\tremaining: 6.45s\n",
            "752:\tlearn: 0.8934223\ttest: 0.8743261\tbest: 0.8748104 (699)\ttotal: 19.6s\tremaining: 6.42s\n",
            "753:\tlearn: 0.8934223\ttest: 0.8746631\tbest: 0.8748104 (699)\ttotal: 19.6s\tremaining: 6.4s\n",
            "754:\tlearn: 0.8935438\ttest: 0.8748948\tbest: 0.8748948 (754)\ttotal: 19.6s\tremaining: 6.37s\n",
            "755:\tlearn: 0.8936277\ttest: 0.8748948\tbest: 0.8748948 (754)\ttotal: 19.7s\tremaining: 6.35s\n",
            "756:\tlearn: 0.8936367\ttest: 0.8748948\tbest: 0.8748948 (754)\ttotal: 19.7s\tremaining: 6.32s\n",
            "757:\tlearn: 0.8936938\ttest: 0.8748948\tbest: 0.8748948 (754)\ttotal: 19.7s\tremaining: 6.3s\n",
            "758:\tlearn: 0.8936188\ttest: 0.8748948\tbest: 0.8748948 (754)\ttotal: 19.7s\tremaining: 6.27s\n",
            "759:\tlearn: 0.8936009\ttest: 0.8747475\tbest: 0.8748948 (754)\ttotal: 19.8s\tremaining: 6.24s\n",
            "760:\tlearn: 0.8937028\ttest: 0.8745580\tbest: 0.8748948 (754)\ttotal: 19.8s\tremaining: 6.22s\n",
            "761:\tlearn: 0.8935348\ttest: 0.8747053\tbest: 0.8748948 (754)\ttotal: 19.8s\tremaining: 6.19s\n",
            "762:\tlearn: 0.8936563\ttest: 0.8747053\tbest: 0.8748948 (754)\ttotal: 19.9s\tremaining: 6.17s\n",
            "763:\tlearn: 0.8936938\ttest: 0.8745580\tbest: 0.8748948 (754)\ttotal: 19.9s\tremaining: 6.14s\n",
            "764:\tlearn: 0.8936563\ttest: 0.8745157\tbest: 0.8748948 (754)\ttotal: 19.9s\tremaining: 6.11s\n",
            "765:\tlearn: 0.8935545\ttest: 0.8747475\tbest: 0.8748948 (754)\ttotal: 19.9s\tremaining: 6.08s\n",
            "766:\tlearn: 0.8932275\ttest: 0.8750842\tbest: 0.8750842 (766)\ttotal: 19.9s\tremaining: 6.06s\n",
            "767:\tlearn: 0.8933865\ttest: 0.8752315\tbest: 0.8752315 (767)\ttotal: 20s\tremaining: 6.03s\n",
            "768:\tlearn: 0.8934509\ttest: 0.8747475\tbest: 0.8752315 (767)\ttotal: 20s\tremaining: 6.01s\n",
            "769:\tlearn: 0.8933865\ttest: 0.8750421\tbest: 0.8752315 (767)\ttotal: 20s\tremaining: 5.98s\n",
            "770:\tlearn: 0.8933865\ttest: 0.8745580\tbest: 0.8752315 (767)\ttotal: 20.1s\tremaining: 5.96s\n",
            "771:\tlearn: 0.8934616\ttest: 0.8743685\tbest: 0.8752315 (767)\ttotal: 20.1s\tremaining: 5.93s\n",
            "772:\tlearn: 0.8935080\ttest: 0.8743685\tbest: 0.8752315 (767)\ttotal: 20.1s\tremaining: 5.9s\n",
            "773:\tlearn: 0.8935455\ttest: 0.8745157\tbest: 0.8752315 (767)\ttotal: 20.1s\tremaining: 5.88s\n",
            "774:\tlearn: 0.8935831\ttest: 0.8745157\tbest: 0.8752315 (767)\ttotal: 20.1s\tremaining: 5.85s\n",
            "775:\tlearn: 0.8937135\ttest: 0.8747053\tbest: 0.8752315 (767)\ttotal: 20.2s\tremaining: 5.82s\n",
            "776:\tlearn: 0.8936849\ttest: 0.8747053\tbest: 0.8752315 (767)\ttotal: 20.2s\tremaining: 5.8s\n",
            "777:\tlearn: 0.8937689\ttest: 0.8748526\tbest: 0.8752315 (767)\ttotal: 20.2s\tremaining: 5.77s\n",
            "778:\tlearn: 0.8938064\ttest: 0.8746631\tbest: 0.8752315 (767)\ttotal: 20.3s\tremaining: 5.75s\n",
            "779:\tlearn: 0.8938529\ttest: 0.8744735\tbest: 0.8752315 (767)\ttotal: 20.3s\tremaining: 5.72s\n",
            "780:\tlearn: 0.8938440\ttest: 0.8743261\tbest: 0.8752315 (767)\ttotal: 20.3s\tremaining: 5.7s\n",
            "781:\tlearn: 0.8939190\ttest: 0.8741789\tbest: 0.8752315 (767)\ttotal: 20.3s\tremaining: 5.67s\n",
            "782:\tlearn: 0.8939190\ttest: 0.8741789\tbest: 0.8752315 (767)\ttotal: 20.4s\tremaining: 5.64s\n",
            "783:\tlearn: 0.8940584\ttest: 0.8747475\tbest: 0.8752315 (767)\ttotal: 20.4s\tremaining: 5.62s\n",
            "784:\tlearn: 0.8941423\ttest: 0.8747053\tbest: 0.8752315 (767)\ttotal: 20.4s\tremaining: 5.59s\n",
            "785:\tlearn: 0.8941048\ttest: 0.8745157\tbest: 0.8752315 (767)\ttotal: 20.4s\tremaining: 5.57s\n",
            "786:\tlearn: 0.8941423\ttest: 0.8745157\tbest: 0.8752315 (767)\ttotal: 20.5s\tremaining: 5.54s\n",
            "787:\tlearn: 0.8942263\ttest: 0.8745157\tbest: 0.8752315 (767)\ttotal: 20.5s\tremaining: 5.51s\n",
            "788:\tlearn: 0.8942065\ttest: 0.8745580\tbest: 0.8752315 (767)\ttotal: 20.5s\tremaining: 5.49s\n",
            "789:\tlearn: 0.8941512\ttest: 0.8747053\tbest: 0.8752315 (767)\ttotal: 20.5s\tremaining: 5.46s\n",
            "790:\tlearn: 0.8942816\ttest: 0.8746631\tbest: 0.8752315 (767)\ttotal: 20.6s\tremaining: 5.43s\n",
            "791:\tlearn: 0.8942905\ttest: 0.8741365\tbest: 0.8752315 (767)\ttotal: 20.6s\tremaining: 5.41s\n",
            "792:\tlearn: 0.8942174\ttest: 0.8746631\tbest: 0.8752315 (767)\ttotal: 20.6s\tremaining: 5.38s\n",
            "793:\tlearn: 0.8942639\ttest: 0.8746631\tbest: 0.8752315 (767)\ttotal: 20.6s\tremaining: 5.36s\n",
            "794:\tlearn: 0.8943369\ttest: 0.8750000\tbest: 0.8752315 (767)\ttotal: 20.7s\tremaining: 5.33s\n",
            "795:\tlearn: 0.8943833\ttest: 0.8751895\tbest: 0.8752315 (767)\ttotal: 20.7s\tremaining: 5.3s\n",
            "796:\tlearn: 0.8942905\ttest: 0.8753369\tbest: 0.8753369 (796)\ttotal: 20.7s\tremaining: 5.28s\n",
            "797:\tlearn: 0.8942530\ttest: 0.8755264\tbest: 0.8755264 (797)\ttotal: 20.8s\tremaining: 5.25s\n",
            "798:\tlearn: 0.8944298\ttest: 0.8750421\tbest: 0.8755264 (797)\ttotal: 20.8s\tremaining: 5.23s\n",
            "799:\tlearn: 0.8944298\ttest: 0.8750421\tbest: 0.8755264 (797)\ttotal: 20.8s\tremaining: 5.2s\n",
            "800:\tlearn: 0.8943833\ttest: 0.8751895\tbest: 0.8755264 (797)\ttotal: 20.8s\tremaining: 5.17s\n",
            "801:\tlearn: 0.8946264\ttest: 0.8747475\tbest: 0.8755264 (797)\ttotal: 20.8s\tremaining: 5.15s\n",
            "802:\tlearn: 0.8946264\ttest: 0.8743685\tbest: 0.8755264 (797)\ttotal: 20.9s\tremaining: 5.12s\n",
            "803:\tlearn: 0.8946816\ttest: 0.8745157\tbest: 0.8755264 (797)\ttotal: 20.9s\tremaining: 5.09s\n",
            "804:\tlearn: 0.8946728\ttest: 0.8741789\tbest: 0.8755264 (797)\ttotal: 20.9s\tremaining: 5.07s\n",
            "805:\tlearn: 0.8946264\ttest: 0.8741789\tbest: 0.8755264 (797)\ttotal: 21s\tremaining: 5.04s\n",
            "806:\tlearn: 0.8947656\ttest: 0.8741789\tbest: 0.8755264 (797)\ttotal: 21s\tremaining: 5.02s\n",
            "807:\tlearn: 0.8946816\ttest: 0.8741789\tbest: 0.8755264 (797)\ttotal: 21s\tremaining: 4.99s\n",
            "808:\tlearn: 0.8946551\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21s\tremaining: 4.96s\n",
            "809:\tlearn: 0.8947391\ttest: 0.8741365\tbest: 0.8755264 (797)\ttotal: 21.1s\tremaining: 4.94s\n",
            "810:\tlearn: 0.8946197\ttest: 0.8746208\tbest: 0.8755264 (797)\ttotal: 21.1s\tremaining: 4.91s\n",
            "811:\tlearn: 0.8946750\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21.1s\tremaining: 4.88s\n",
            "812:\tlearn: 0.8946374\ttest: 0.8745157\tbest: 0.8755264 (797)\ttotal: 21.1s\tremaining: 4.86s\n",
            "813:\tlearn: 0.8946175\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21.2s\tremaining: 4.83s\n",
            "814:\tlearn: 0.8946175\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21.2s\tremaining: 4.81s\n",
            "815:\tlearn: 0.8946728\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21.2s\tremaining: 4.78s\n",
            "816:\tlearn: 0.8947567\ttest: 0.8742838\tbest: 0.8755264 (797)\ttotal: 21.2s\tremaining: 4.75s\n",
            "817:\tlearn: 0.8947943\ttest: 0.8741365\tbest: 0.8755264 (797)\ttotal: 21.3s\tremaining: 4.73s\n",
            "818:\tlearn: 0.8947391\ttest: 0.8742838\tbest: 0.8755264 (797)\ttotal: 21.3s\tremaining: 4.71s\n",
            "819:\tlearn: 0.8948694\ttest: 0.8742838\tbest: 0.8755264 (797)\ttotal: 21.3s\tremaining: 4.68s\n",
            "820:\tlearn: 0.8948230\ttest: 0.8742838\tbest: 0.8755264 (797)\ttotal: 21.3s\tremaining: 4.65s\n",
            "821:\tlearn: 0.8948606\ttest: 0.8744311\tbest: 0.8755264 (797)\ttotal: 21.4s\tremaining: 4.63s\n",
            "822:\tlearn: 0.8948407\ttest: 0.8744735\tbest: 0.8755264 (797)\ttotal: 21.4s\tremaining: 4.6s\n",
            "823:\tlearn: 0.8950286\ttest: 0.8743261\tbest: 0.8755264 (797)\ttotal: 21.4s\tremaining: 4.57s\n",
            "824:\tlearn: 0.8948518\ttest: 0.8746208\tbest: 0.8755264 (797)\ttotal: 21.4s\tremaining: 4.55s\n",
            "825:\tlearn: 0.8948805\ttest: 0.8746208\tbest: 0.8755264 (797)\ttotal: 21.5s\tremaining: 4.52s\n",
            "826:\tlearn: 0.8948606\ttest: 0.8742414\tbest: 0.8755264 (797)\ttotal: 21.5s\tremaining: 4.5s\n",
            "827:\tlearn: 0.8947678\ttest: 0.8741990\tbest: 0.8755264 (797)\ttotal: 21.5s\tremaining: 4.47s\n",
            "828:\tlearn: 0.8948518\ttest: 0.8741990\tbest: 0.8755264 (797)\ttotal: 21.5s\tremaining: 4.44s\n",
            "829:\tlearn: 0.8947678\ttest: 0.8741990\tbest: 0.8755264 (797)\ttotal: 21.6s\tremaining: 4.42s\n",
            "830:\tlearn: 0.8947037\ttest: 0.8740091\tbest: 0.8755264 (797)\ttotal: 21.6s\tremaining: 4.39s\n",
            "831:\tlearn: 0.8947788\ttest: 0.8743464\tbest: 0.8755264 (797)\ttotal: 21.6s\tremaining: 4.37s\n",
            "832:\tlearn: 0.8946948\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 21.6s\tremaining: 4.34s\n",
            "833:\tlearn: 0.8947700\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 21.7s\tremaining: 4.31s\n",
            "834:\tlearn: 0.8947700\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 21.7s\tremaining: 4.29s\n",
            "835:\tlearn: 0.8948629\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 21.7s\tremaining: 4.26s\n",
            "836:\tlearn: 0.8948341\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 21.7s\tremaining: 4.23s\n",
            "837:\tlearn: 0.8949093\ttest: 0.8738192\tbest: 0.8755264 (797)\ttotal: 21.8s\tremaining: 4.21s\n",
            "838:\tlearn: 0.8949933\ttest: 0.8741141\tbest: 0.8755264 (797)\ttotal: 21.8s\tremaining: 4.18s\n",
            "839:\tlearn: 0.8947788\ttest: 0.8739666\tbest: 0.8755264 (797)\ttotal: 21.8s\tremaining: 4.16s\n",
            "840:\tlearn: 0.8948916\ttest: 0.8735865\tbest: 0.8755264 (797)\ttotal: 21.9s\tremaining: 4.13s\n",
            "841:\tlearn: 0.8947612\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 21.9s\tremaining: 4.11s\n",
            "842:\tlearn: 0.8948253\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 21.9s\tremaining: 4.08s\n",
            "843:\tlearn: 0.8948717\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 21.9s\tremaining: 4.05s\n",
            "844:\tlearn: 0.8949933\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 22s\tremaining: 4.03s\n",
            "845:\tlearn: 0.8949557\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 22s\tremaining: 4s\n",
            "846:\tlearn: 0.8948429\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 22s\tremaining: 3.98s\n",
            "847:\tlearn: 0.8949181\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 22s\tremaining: 3.95s\n",
            "848:\tlearn: 0.8947700\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 22.1s\tremaining: 3.92s\n",
            "849:\tlearn: 0.8947877\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 22.1s\tremaining: 3.9s\n",
            "850:\tlearn: 0.8948629\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 22.1s\tremaining: 3.87s\n",
            "851:\tlearn: 0.8949557\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.1s\tremaining: 3.84s\n",
            "852:\tlearn: 0.8949469\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.2s\tremaining: 3.82s\n",
            "853:\tlearn: 0.8950109\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.2s\tremaining: 3.79s\n",
            "854:\tlearn: 0.8950485\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.2s\tremaining: 3.77s\n",
            "855:\tlearn: 0.8951237\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.2s\tremaining: 3.74s\n",
            "856:\tlearn: 0.8950949\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.3s\tremaining: 3.72s\n",
            "857:\tlearn: 0.8951525\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.3s\tremaining: 3.69s\n",
            "858:\tlearn: 0.8951525\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 22.3s\tremaining: 3.67s\n",
            "859:\tlearn: 0.8951437\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.4s\tremaining: 3.64s\n",
            "860:\tlearn: 0.8952277\ttest: 0.8741767\tbest: 0.8755264 (797)\ttotal: 22.4s\tremaining: 3.61s\n",
            "861:\tlearn: 0.8953029\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.4s\tremaining: 3.59s\n",
            "862:\tlearn: 0.8952565\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.4s\tremaining: 3.56s\n",
            "863:\tlearn: 0.8953405\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.5s\tremaining: 3.54s\n",
            "864:\tlearn: 0.8953029\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.5s\tremaining: 3.51s\n",
            "865:\tlearn: 0.8953029\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.5s\tremaining: 3.48s\n",
            "866:\tlearn: 0.8952653\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.5s\tremaining: 3.46s\n",
            "867:\tlearn: 0.8952101\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.6s\tremaining: 3.43s\n",
            "868:\tlearn: 0.8952853\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.6s\tremaining: 3.4s\n",
            "869:\tlearn: 0.8952189\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 22.6s\tremaining: 3.38s\n",
            "870:\tlearn: 0.8953405\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.6s\tremaining: 3.35s\n",
            "871:\tlearn: 0.8953869\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.6s\tremaining: 3.32s\n",
            "872:\tlearn: 0.8953782\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.7s\tremaining: 3.3s\n",
            "873:\tlearn: 0.8955550\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 22.7s\tremaining: 3.27s\n",
            "874:\tlearn: 0.8955838\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 22.7s\tremaining: 3.25s\n",
            "875:\tlearn: 0.8957143\ttest: 0.8741141\tbest: 0.8755264 (797)\ttotal: 22.8s\tremaining: 3.22s\n",
            "876:\tlearn: 0.8956767\ttest: 0.8739666\tbest: 0.8755264 (797)\ttotal: 22.8s\tremaining: 3.19s\n",
            "877:\tlearn: 0.8956854\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 22.8s\tremaining: 3.17s\n",
            "878:\tlearn: 0.8957143\ttest: 0.8742191\tbest: 0.8755264 (797)\ttotal: 22.8s\tremaining: 3.14s\n",
            "879:\tlearn: 0.8957896\ttest: 0.8742191\tbest: 0.8755264 (797)\ttotal: 22.9s\tremaining: 3.12s\n",
            "880:\tlearn: 0.8957896\ttest: 0.8743668\tbest: 0.8755264 (797)\ttotal: 22.9s\tremaining: 3.09s\n",
            "881:\tlearn: 0.8958736\ttest: 0.8743668\tbest: 0.8755264 (797)\ttotal: 22.9s\tremaining: 3.06s\n",
            "882:\tlearn: 0.8956968\ttest: 0.8745144\tbest: 0.8755264 (797)\ttotal: 22.9s\tremaining: 3.04s\n",
            "883:\tlearn: 0.8957432\ttest: 0.8745144\tbest: 0.8755264 (797)\ttotal: 23s\tremaining: 3.01s\n",
            "884:\tlearn: 0.8958184\ttest: 0.8745568\tbest: 0.8755264 (797)\ttotal: 23s\tremaining: 2.99s\n",
            "885:\tlearn: 0.8959576\ttest: 0.8745144\tbest: 0.8755264 (797)\ttotal: 23s\tremaining: 2.96s\n",
            "886:\tlearn: 0.8958184\ttest: 0.8744092\tbest: 0.8755264 (797)\ttotal: 23s\tremaining: 2.93s\n",
            "887:\tlearn: 0.8958272\ttest: 0.8745568\tbest: 0.8755264 (797)\ttotal: 23.1s\tremaining: 2.91s\n",
            "888:\tlearn: 0.8958736\ttest: 0.8744092\tbest: 0.8755264 (797)\ttotal: 23.1s\tremaining: 2.88s\n",
            "889:\tlearn: 0.8958272\ttest: 0.8744092\tbest: 0.8755264 (797)\ttotal: 23.1s\tremaining: 2.86s\n",
            "890:\tlearn: 0.8959112\ttest: 0.8742191\tbest: 0.8755264 (797)\ttotal: 23.1s\tremaining: 2.83s\n",
            "891:\tlearn: 0.8959025\ttest: 0.8740290\tbest: 0.8755264 (797)\ttotal: 23.2s\tremaining: 2.8s\n",
            "892:\tlearn: 0.8959025\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 23.2s\tremaining: 2.78s\n",
            "893:\tlearn: 0.8959489\ttest: 0.8736913\tbest: 0.8755264 (797)\ttotal: 23.2s\tremaining: 2.75s\n",
            "894:\tlearn: 0.8960881\ttest: 0.8735438\tbest: 0.8755264 (797)\ttotal: 23.2s\tremaining: 2.73s\n",
            "895:\tlearn: 0.8959664\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 23.3s\tremaining: 2.7s\n",
            "896:\tlearn: 0.8959664\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 23.3s\tremaining: 2.67s\n",
            "897:\tlearn: 0.8959576\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 23.3s\tremaining: 2.65s\n",
            "898:\tlearn: 0.8959980\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 23.3s\tremaining: 2.62s\n",
            "899:\tlearn: 0.8959314\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 23.4s\tremaining: 2.6s\n",
            "900:\tlearn: 0.8959314\ttest: 0.8742616\tbest: 0.8755264 (797)\ttotal: 23.4s\tremaining: 2.57s\n",
            "901:\tlearn: 0.8959402\ttest: 0.8744939\tbest: 0.8755264 (797)\ttotal: 23.4s\tremaining: 2.54s\n",
            "902:\tlearn: 0.8959691\ttest: 0.8744516\tbest: 0.8755264 (797)\ttotal: 23.5s\tremaining: 2.52s\n",
            "903:\tlearn: 0.8960329\ttest: 0.8743040\tbest: 0.8755264 (797)\ttotal: 23.5s\tremaining: 2.49s\n",
            "904:\tlearn: 0.8962300\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 23.5s\tremaining: 2.47s\n",
            "905:\tlearn: 0.8961923\ttest: 0.8742616\tbest: 0.8755264 (797)\ttotal: 23.5s\tremaining: 2.44s\n",
            "906:\tlearn: 0.8961083\ttest: 0.8742616\tbest: 0.8755264 (797)\ttotal: 23.6s\tremaining: 2.41s\n",
            "907:\tlearn: 0.8961749\ttest: 0.8742616\tbest: 0.8755264 (797)\ttotal: 23.6s\tremaining: 2.39s\n",
            "908:\tlearn: 0.8960908\ttest: 0.8742616\tbest: 0.8755264 (797)\ttotal: 23.6s\tremaining: 2.36s\n",
            "909:\tlearn: 0.8963256\ttest: 0.8735865\tbest: 0.8755264 (797)\ttotal: 23.6s\tremaining: 2.34s\n",
            "910:\tlearn: 0.8962617\ttest: 0.8737340\tbest: 0.8755264 (797)\ttotal: 23.7s\tremaining: 2.31s\n",
            "911:\tlearn: 0.8962240\ttest: 0.8738815\tbest: 0.8755264 (797)\ttotal: 23.7s\tremaining: 2.28s\n",
            "912:\tlearn: 0.8961776\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 23.7s\tremaining: 2.26s\n",
            "913:\tlearn: 0.8963458\ttest: 0.8740716\tbest: 0.8755264 (797)\ttotal: 23.7s\tremaining: 2.23s\n",
            "914:\tlearn: 0.8963633\ttest: 0.8739666\tbest: 0.8755264 (797)\ttotal: 23.8s\tremaining: 2.21s\n",
            "915:\tlearn: 0.8964009\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 23.8s\tremaining: 2.18s\n",
            "916:\tlearn: 0.8965575\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 23.8s\tremaining: 2.15s\n",
            "917:\tlearn: 0.8965024\ttest: 0.8739666\tbest: 0.8755264 (797)\ttotal: 23.8s\tremaining: 2.13s\n",
            "918:\tlearn: 0.8965575\ttest: 0.8739666\tbest: 0.8755264 (797)\ttotal: 23.9s\tremaining: 2.1s\n",
            "919:\tlearn: 0.8965952\ttest: 0.8741565\tbest: 0.8755264 (797)\ttotal: 23.9s\tremaining: 2.08s\n",
            "920:\tlearn: 0.8965401\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 23.9s\tremaining: 2.05s\n",
            "921:\tlearn: 0.8964271\ttest: 0.8741141\tbest: 0.8755264 (797)\ttotal: 23.9s\tremaining: 2.02s\n",
            "922:\tlearn: 0.8966619\ttest: 0.8739241\tbest: 0.8755264 (797)\ttotal: 24s\tremaining: 2s\n",
            "923:\tlearn: 0.8967663\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 24s\tremaining: 1.97s\n",
            "924:\tlearn: 0.8969345\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24s\tremaining: 1.95s\n",
            "925:\tlearn: 0.8969345\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24s\tremaining: 1.92s\n",
            "926:\tlearn: 0.8969809\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.1s\tremaining: 1.9s\n",
            "927:\tlearn: 0.8969345\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.1s\tremaining: 1.87s\n",
            "928:\tlearn: 0.8969172\ttest: 0.8732917\tbest: 0.8755264 (797)\ttotal: 24.1s\tremaining: 1.84s\n",
            "929:\tlearn: 0.8969549\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.1s\tremaining: 1.82s\n",
            "930:\tlearn: 0.8970013\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 24.2s\tremaining: 1.79s\n",
            "931:\tlearn: 0.8970390\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 24.2s\tremaining: 1.76s\n",
            "932:\tlearn: 0.8972709\ttest: 0.8734391\tbest: 0.8755264 (797)\ttotal: 24.2s\tremaining: 1.74s\n",
            "933:\tlearn: 0.8971578\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 24.2s\tremaining: 1.71s\n",
            "934:\tlearn: 0.8970359\ttest: 0.8734391\tbest: 0.8755264 (797)\ttotal: 24.3s\tremaining: 1.69s\n",
            "935:\tlearn: 0.8970854\ttest: 0.8734391\tbest: 0.8755264 (797)\ttotal: 24.3s\tremaining: 1.66s\n",
            "936:\tlearn: 0.8971782\ttest: 0.8731016\tbest: 0.8755264 (797)\ttotal: 24.3s\tremaining: 1.64s\n",
            "937:\tlearn: 0.8971695\ttest: 0.8732489\tbest: 0.8755264 (797)\ttotal: 24.4s\tremaining: 1.61s\n",
            "938:\tlearn: 0.8971782\ttest: 0.8732489\tbest: 0.8755264 (797)\ttotal: 24.4s\tremaining: 1.58s\n",
            "939:\tlearn: 0.8970650\ttest: 0.8731016\tbest: 0.8755264 (797)\ttotal: 24.4s\tremaining: 1.56s\n",
            "940:\tlearn: 0.8970941\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.4s\tremaining: 1.53s\n",
            "941:\tlearn: 0.8971986\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 24.5s\tremaining: 1.51s\n",
            "942:\tlearn: 0.8970768\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.5s\tremaining: 1.48s\n",
            "943:\tlearn: 0.8972277\ttest: 0.8736718\tbest: 0.8755264 (797)\ttotal: 24.5s\tremaining: 1.45s\n",
            "944:\tlearn: 0.8970594\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.5s\tremaining: 1.43s\n",
            "945:\tlearn: 0.8971349\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 24.6s\tremaining: 1.4s\n",
            "946:\tlearn: 0.8970217\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 24.6s\tremaining: 1.38s\n",
            "947:\tlearn: 0.8971813\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 24.6s\tremaining: 1.35s\n",
            "948:\tlearn: 0.8971436\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 24.6s\tremaining: 1.32s\n",
            "949:\tlearn: 0.8973119\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 24.7s\tremaining: 1.3s\n",
            "950:\tlearn: 0.8972827\ttest: 0.8736718\tbest: 0.8755264 (797)\ttotal: 24.7s\tremaining: 1.27s\n",
            "951:\tlearn: 0.8973669\ttest: 0.8736718\tbest: 0.8755264 (797)\ttotal: 24.7s\tremaining: 1.25s\n",
            "952:\tlearn: 0.8972914\ttest: 0.8735245\tbest: 0.8755264 (797)\ttotal: 24.7s\tremaining: 1.22s\n",
            "953:\tlearn: 0.8972073\ttest: 0.8735245\tbest: 0.8755264 (797)\ttotal: 24.8s\tremaining: 1.19s\n",
            "954:\tlearn: 0.8971986\ttest: 0.8736718\tbest: 0.8755264 (797)\ttotal: 24.8s\tremaining: 1.17s\n",
            "955:\tlearn: 0.8972073\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 24.8s\tremaining: 1.14s\n",
            "956:\tlearn: 0.8972277\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 24.8s\tremaining: 1.12s\n",
            "957:\tlearn: 0.8972277\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 24.9s\tremaining: 1.09s\n",
            "958:\tlearn: 0.8972568\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.9s\tremaining: 1.06s\n",
            "959:\tlearn: 0.8972568\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 24.9s\tremaining: 1.04s\n",
            "960:\tlearn: 0.8972191\ttest: 0.8736292\tbest: 0.8755264 (797)\ttotal: 25s\tremaining: 1.01s\n",
            "961:\tlearn: 0.8972741\ttest: 0.8737766\tbest: 0.8755264 (797)\ttotal: 25s\tremaining: 987ms\n",
            "962:\tlearn: 0.8973205\ttest: 0.8734818\tbest: 0.8755264 (797)\ttotal: 25s\tremaining: 961ms\n",
            "963:\tlearn: 0.8974887\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25s\tremaining: 935ms\n",
            "964:\tlearn: 0.8974424\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25s\tremaining: 909ms\n",
            "965:\tlearn: 0.8975934\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25.1s\tremaining: 883ms\n",
            "966:\tlearn: 0.8976312\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25.1s\tremaining: 857ms\n",
            "967:\tlearn: 0.8977995\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25.1s\tremaining: 831ms\n",
            "968:\tlearn: 0.8979128\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25.1s\tremaining: 805ms\n",
            "969:\tlearn: 0.8978922\ttest: 0.8733345\tbest: 0.8755264 (797)\ttotal: 25.2s\tremaining: 779ms\n",
            "970:\tlearn: 0.8978836\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 25.2s\tremaining: 753ms\n",
            "971:\tlearn: 0.8978750\ttest: 0.8729543\tbest: 0.8755264 (797)\ttotal: 25.2s\tremaining: 727ms\n",
            "972:\tlearn: 0.8977995\ttest: 0.8729971\tbest: 0.8755264 (797)\ttotal: 25.3s\tremaining: 701ms\n",
            "973:\tlearn: 0.8979592\ttest: 0.8729971\tbest: 0.8755264 (797)\ttotal: 25.3s\tremaining: 675ms\n",
            "974:\tlearn: 0.8980519\ttest: 0.8729543\tbest: 0.8755264 (797)\ttotal: 25.3s\tremaining: 649ms\n",
            "975:\tlearn: 0.8981739\ttest: 0.8729543\tbest: 0.8755264 (797)\ttotal: 25.3s\tremaining: 623ms\n",
            "976:\tlearn: 0.8981361\ttest: 0.8727641\tbest: 0.8755264 (797)\ttotal: 25.4s\tremaining: 597ms\n",
            "977:\tlearn: 0.8982288\ttest: 0.8729543\tbest: 0.8755264 (797)\ttotal: 25.4s\tremaining: 571ms\n",
            "978:\tlearn: 0.8981446\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 25.4s\tremaining: 545ms\n",
            "979:\tlearn: 0.8982373\ttest: 0.8729543\tbest: 0.8755264 (797)\ttotal: 25.5s\tremaining: 520ms\n",
            "980:\tlearn: 0.8982167\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 25.5s\tremaining: 494ms\n",
            "981:\tlearn: 0.8983678\ttest: 0.8731444\tbest: 0.8755264 (797)\ttotal: 25.5s\tremaining: 468ms\n",
            "982:\tlearn: 0.8983008\ttest: 0.8732917\tbest: 0.8755264 (797)\ttotal: 25.5s\tremaining: 442ms\n",
            "983:\tlearn: 0.8984776\ttest: 0.8731016\tbest: 0.8755264 (797)\ttotal: 25.6s\tremaining: 416ms\n",
            "984:\tlearn: 0.8985873\ttest: 0.8730587\tbest: 0.8755264 (797)\ttotal: 25.6s\tremaining: 390ms\n",
            "985:\tlearn: 0.8985873\ttest: 0.8729114\tbest: 0.8755264 (797)\ttotal: 25.6s\tremaining: 364ms\n",
            "986:\tlearn: 0.8983642\ttest: 0.8727641\tbest: 0.8755264 (797)\ttotal: 25.6s\tremaining: 338ms\n",
            "987:\tlearn: 0.8984483\ttest: 0.8727641\tbest: 0.8755264 (797)\ttotal: 25.7s\tremaining: 312ms\n",
            "988:\tlearn: 0.8985324\ttest: 0.8727641\tbest: 0.8755264 (797)\ttotal: 25.7s\tremaining: 286ms\n",
            "989:\tlearn: 0.8985617\ttest: 0.8727641\tbest: 0.8755264 (797)\ttotal: 25.7s\tremaining: 260ms\n",
            "990:\tlearn: 0.8984483\ttest: 0.8725738\tbest: 0.8755264 (797)\ttotal: 25.7s\tremaining: 234ms\n",
            "991:\tlearn: 0.8984483\ttest: 0.8725738\tbest: 0.8755264 (797)\ttotal: 25.8s\tremaining: 208ms\n",
            "992:\tlearn: 0.8984483\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.8s\tremaining: 182ms\n",
            "993:\tlearn: 0.8985239\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.8s\tremaining: 156ms\n",
            "994:\tlearn: 0.8987299\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.8s\tremaining: 130ms\n",
            "995:\tlearn: 0.8985788\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.9s\tremaining: 104ms\n",
            "996:\tlearn: 0.8988055\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.9s\tremaining: 77.9ms\n",
            "997:\tlearn: 0.8987677\ttest: 0.8727211\tbest: 0.8755264 (797)\ttotal: 25.9s\tremaining: 51.9ms\n",
            "998:\tlearn: 0.8987762\ttest: 0.8725738\tbest: 0.8755264 (797)\ttotal: 25.9s\tremaining: 26ms\n",
            "999:\tlearn: 0.8989359\ttest: 0.8725738\tbest: 0.8755264 (797)\ttotal: 26s\tremaining: 0us\n",
            "\n",
            "bestTest = 0.8755263601\n",
            "bestIteration = 797\n",
            "\n",
            "Shrink model to first 798 iterations.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SyQNxCL_Hdaj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 937
        },
        "outputId": "a3076e31-b875-4732-85b4-3b07b5b60c3c"
      },
      "source": [
        "#If we see eventhough without doing any fancy model tuning techniques, we are able to get good score of 87.5.\n",
        "#Getting all the params used by catboost model\n",
        "clf.get_all_params()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'auto_class_weights': 'None',\n",
              " 'bayesian_matrix_reg': 0.10000000149011612,\n",
              " 'best_model_min_trees': 1,\n",
              " 'boost_from_average': False,\n",
              " 'boosting_type': 'Plain',\n",
              " 'bootstrap_type': 'MVS',\n",
              " 'border_count': 254,\n",
              " 'class_names': [0, 1],\n",
              " 'classes_count': 0,\n",
              " 'combinations_ctr': ['Borders:CtrBorderCount=15:CtrBorderType=Uniform:TargetBorderCount=1:TargetBorderType=MinEntropy:Prior=0/1:Prior=0.5/1:Prior=1/1',\n",
              "  'Counter:CtrBorderCount=15:CtrBorderType=Uniform:Prior=0/1'],\n",
              " 'counter_calc_method': 'SkipTest',\n",
              " 'ctr_leaf_count_limit': 18446744073709551615,\n",
              " 'ctr_target_border_count': 1,\n",
              " 'depth': 6,\n",
              " 'eval_metric': 'F1',\n",
              " 'feature_border_type': 'GreedyLogSum',\n",
              " 'fold_permutation_block': 0,\n",
              " 'grow_policy': 'SymmetricTree',\n",
              " 'has_time': False,\n",
              " 'iterations': 1000,\n",
              " 'l2_leaf_reg': 3,\n",
              " 'leaf_estimation_backtracking': 'AnyImprovement',\n",
              " 'leaf_estimation_iterations': 10,\n",
              " 'leaf_estimation_method': 'Newton',\n",
              " 'learning_rate': 0.029999999329447743,\n",
              " 'loss_function': 'Logloss',\n",
              " 'max_ctr_complexity': 4,\n",
              " 'max_leaves': 64,\n",
              " 'min_data_in_leaf': 1,\n",
              " 'model_shrink_mode': 'Constant',\n",
              " 'model_shrink_rate': 0,\n",
              " 'model_size_reg': 0.5,\n",
              " 'nan_mode': 'Min',\n",
              " 'one_hot_max_size': 2,\n",
              " 'penalties_coefficient': 1,\n",
              " 'permutation_count': 4,\n",
              " 'random_seed': 0,\n",
              " 'random_strength': 1,\n",
              " 'rsm': 1,\n",
              " 'sampling_frequency': 'PerTree',\n",
              " 'score_function': 'Cosine',\n",
              " 'simple_ctr': ['Borders:CtrBorderCount=15:CtrBorderType=Uniform:TargetBorderCount=1:TargetBorderType=MinEntropy:Prior=0/1:Prior=0.5/1:Prior=1/1',\n",
              "  'Counter:CtrBorderCount=15:CtrBorderType=Uniform:Prior=0/1'],\n",
              " 'sparse_features_conflict_fraction': 0,\n",
              " 'store_all_simple_ctr': False,\n",
              " 'subsample': 0.800000011920929,\n",
              " 'task_type': 'CPU',\n",
              " 'use_best_model': True}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oQD6yAzuDnZp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "outputId": "179692d7-dfc8-4cec-fe7b-fbbe2bf9e610"
      },
      "source": [
        "#computing confusion matrix\n",
        "from sklearn.metrics import confusion_matrix\n",
        "tn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()\n",
        "print(\"True Positive\", tp)\n",
        "print(\"True Negative\", tn)\n",
        "print(\"False Positive\", fp)\n",
        "print(\"False Negative\", fn)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True Positive 2599\n",
            "True Negative 1282\n",
            "False Positive 422\n",
            "False Negative 317\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IF29h25ADnZy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2fad932b-108f-4f94-be43-556431783e46"
      },
      "source": [
        "#computing f1 score\n",
        "from sklearn.metrics import f1_score\n",
        "acc = f1_score(y_test, y_pred)\n",
        "acc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.875526360114536"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AqKfoPN-DnZ7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#predicting on un seen data\n",
        "prediction = clf.predict(test_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yz5NB5XuDnaE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#this is for printing all the prediction values in a cell so that we can just copy paste the results in submission\n",
        "np.set_printoptions(threshold=sys.maxsize)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-QjWrXkeDnaK",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "c97789fd-f33a-4e35-cb50-2febc5bd3457"
      },
      "source": [
        "#printing prediction results\n",
        "prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CRMIXmGwDnaT",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above results gave a f1 score of 87.0439 on unseen data. That is the advantage of catboost. Without any tuning, it works well.\n",
        "#But disadvantage is that this would be the maximum result the catboost can give. We can keep adjusting the learning rate but there would be very slight increase in f1 score. "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zz1iTvVfDnab",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#grid search for catboost classifier\n",
        "params = {'depth':[4, 5, 6,7],\n",
        "          'iterations':[250,300,500,1000],\n",
        "              'learning_rate':[0.03,0.001,0.01,0.1,0.2,0.3],\n",
        "              'l2_leaf_reg':[3,1,5,10,100],\n",
        "               'border_count':[32,5,10,20,50,100,200],\n",
        "              'bagging_temperature':[0.03,0.09,0.25,0.75],\n",
        "               'random_strength':[0.2,0.5,0.8],\n",
        "               'max_ctr_complexity':[1,2,3,4,5]\n",
        "    }"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hjJZJpOvDnai",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model = CatBoostClassifier(eval_metric = 'F1',cat_features=cat_features)\n",
        "grid_search_result = model.grid_search(params,\n",
        "                                        X=x_train,\n",
        "                                        y=y_train,\n",
        "                                        cv=10,\n",
        "                                        partition_random_seed=3,\n",
        "                                        stratified=True)\n",
        "model.fit(x_train, \n",
        "        y_train,\n",
        "        cat_features=cat_features,\n",
        "        eval_set=(x_test, y_test)\n",
        ")\n",
        "\n",
        "y_pred = clf.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "43aVHpdyDnat",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "c20da850-b954-4d99-b7e7-c5d88cc4eaa9"
      },
      "source": [
        "model.fit(x_train, \n",
        "                y_train,\n",
        "                cat_features=cat_features,\n",
        "                eval_set=(x_test, y_test))\n",
        "        "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.8152601\ttest: 0.8133268\tbest: 0.8133268 (0)\ttotal: 19.6ms\tremaining: 5.85s\n",
            "1:\tlearn: 0.8168214\ttest: 0.8158188\tbest: 0.8158188 (1)\ttotal: 40.4ms\tremaining: 6.02s\n",
            "2:\tlearn: 0.8164403\ttest: 0.8156017\tbest: 0.8158188 (1)\ttotal: 58.3ms\tremaining: 5.77s\n",
            "3:\tlearn: 0.8164305\ttest: 0.8160938\tbest: 0.8160938 (3)\ttotal: 76.2ms\tremaining: 5.64s\n",
            "4:\tlearn: 0.8182145\ttest: 0.8184135\tbest: 0.8184135 (4)\ttotal: 93.3ms\tremaining: 5.51s\n",
            "5:\tlearn: 0.8208148\ttest: 0.8189711\tbest: 0.8189711 (5)\ttotal: 108ms\tremaining: 5.31s\n",
            "6:\tlearn: 0.8205868\ttest: 0.8188220\tbest: 0.8189711 (5)\ttotal: 126ms\tremaining: 5.27s\n",
            "7:\tlearn: 0.8239331\ttest: 0.8221471\tbest: 0.8221471 (7)\ttotal: 144ms\tremaining: 5.26s\n",
            "8:\tlearn: 0.8245806\ttest: 0.8223154\tbest: 0.8223154 (8)\ttotal: 164ms\tremaining: 5.29s\n",
            "9:\tlearn: 0.8269013\ttest: 0.8270968\tbest: 0.8270968 (9)\ttotal: 180ms\tremaining: 5.23s\n",
            "10:\tlearn: 0.8313355\ttest: 0.8294099\tbest: 0.8294099 (10)\ttotal: 200ms\tremaining: 5.26s\n",
            "11:\tlearn: 0.8340782\ttest: 0.8345138\tbest: 0.8345138 (11)\ttotal: 217ms\tremaining: 5.2s\n",
            "12:\tlearn: 0.8408773\ttest: 0.8425260\tbest: 0.8425260 (12)\ttotal: 237ms\tremaining: 5.23s\n",
            "13:\tlearn: 0.8419201\ttest: 0.8442597\tbest: 0.8442597 (13)\ttotal: 258ms\tremaining: 5.26s\n",
            "14:\tlearn: 0.8432618\ttest: 0.8446431\tbest: 0.8446431 (14)\ttotal: 278ms\tremaining: 5.27s\n",
            "15:\tlearn: 0.8443323\ttest: 0.8446151\tbest: 0.8446431 (14)\ttotal: 296ms\tremaining: 5.25s\n",
            "16:\tlearn: 0.8481901\ttest: 0.8519050\tbest: 0.8519050 (16)\ttotal: 312ms\tremaining: 5.2s\n",
            "17:\tlearn: 0.8500356\ttest: 0.8537011\tbest: 0.8537011 (17)\ttotal: 330ms\tremaining: 5.17s\n",
            "18:\tlearn: 0.8496923\ttest: 0.8538546\tbest: 0.8538546 (18)\ttotal: 349ms\tremaining: 5.15s\n",
            "19:\tlearn: 0.8498186\ttest: 0.8528207\tbest: 0.8538546 (18)\ttotal: 369ms\tremaining: 5.17s\n",
            "20:\tlearn: 0.8510824\ttest: 0.8544705\tbest: 0.8544705 (20)\ttotal: 388ms\tremaining: 5.15s\n",
            "21:\tlearn: 0.8513140\ttest: 0.8534931\tbest: 0.8544705 (20)\ttotal: 409ms\tremaining: 5.17s\n",
            "22:\tlearn: 0.8529924\ttest: 0.8564631\tbest: 0.8564631 (22)\ttotal: 425ms\tremaining: 5.12s\n",
            "23:\tlearn: 0.8552409\ttest: 0.8552528\tbest: 0.8564631 (22)\ttotal: 447ms\tremaining: 5.13s\n",
            "24:\tlearn: 0.8535153\ttest: 0.8562331\tbest: 0.8564631 (22)\ttotal: 467ms\tremaining: 5.13s\n",
            "25:\tlearn: 0.8552173\ttest: 0.8571429\tbest: 0.8571429 (25)\ttotal: 490ms\tremaining: 5.16s\n",
            "26:\tlearn: 0.8573808\ttest: 0.8606310\tbest: 0.8606310 (26)\ttotal: 507ms\tremaining: 5.13s\n",
            "27:\tlearn: 0.8575625\ttest: 0.8614506\tbest: 0.8614506 (27)\ttotal: 524ms\tremaining: 5.09s\n",
            "28:\tlearn: 0.8579724\ttest: 0.8601432\tbest: 0.8614506 (27)\ttotal: 547ms\tremaining: 5.11s\n",
            "29:\tlearn: 0.8577348\ttest: 0.8590112\tbest: 0.8614506 (27)\ttotal: 564ms\tremaining: 5.08s\n",
            "30:\tlearn: 0.8576792\ttest: 0.8578737\tbest: 0.8614506 (27)\ttotal: 581ms\tremaining: 5.04s\n",
            "31:\tlearn: 0.8581937\ttest: 0.8594776\tbest: 0.8614506 (27)\ttotal: 600ms\tremaining: 5.02s\n",
            "32:\tlearn: 0.8599776\ttest: 0.8621851\tbest: 0.8621851 (32)\ttotal: 622ms\tremaining: 5.04s\n",
            "33:\tlearn: 0.8607079\ttest: 0.8612624\tbest: 0.8621851 (32)\ttotal: 640ms\tremaining: 5s\n",
            "34:\tlearn: 0.8615853\ttest: 0.8624177\tbest: 0.8624177 (34)\ttotal: 661ms\tremaining: 5.01s\n",
            "35:\tlearn: 0.8629327\ttest: 0.8626126\tbest: 0.8626126 (35)\ttotal: 679ms\tremaining: 4.98s\n",
            "36:\tlearn: 0.8640488\ttest: 0.8621522\tbest: 0.8626126 (35)\ttotal: 704ms\tremaining: 5.01s\n",
            "37:\tlearn: 0.8641163\ttest: 0.8640386\tbest: 0.8640386 (37)\ttotal: 723ms\tremaining: 4.99s\n",
            "38:\tlearn: 0.8652875\ttest: 0.8632424\tbest: 0.8640386 (37)\ttotal: 743ms\tremaining: 4.97s\n",
            "39:\tlearn: 0.8647061\ttest: 0.8627577\tbest: 0.8640386 (37)\ttotal: 764ms\tremaining: 4.96s\n",
            "40:\tlearn: 0.8648540\ttest: 0.8650040\tbest: 0.8650040 (40)\ttotal: 780ms\tremaining: 4.93s\n",
            "41:\tlearn: 0.8645728\ttest: 0.8634091\tbest: 0.8650040 (40)\ttotal: 801ms\tremaining: 4.92s\n",
            "42:\tlearn: 0.8651046\ttest: 0.8636070\tbest: 0.8650040 (40)\ttotal: 824ms\tremaining: 4.92s\n",
            "43:\tlearn: 0.8662477\ttest: 0.8633279\tbest: 0.8650040 (40)\ttotal: 842ms\tremaining: 4.9s\n",
            "44:\tlearn: 0.8662800\ttest: 0.8642015\tbest: 0.8650040 (40)\ttotal: 866ms\tremaining: 4.91s\n",
            "45:\tlearn: 0.8659270\ttest: 0.8641656\tbest: 0.8650040 (40)\ttotal: 887ms\tremaining: 4.9s\n",
            "46:\tlearn: 0.8657621\ttest: 0.8640698\tbest: 0.8650040 (40)\ttotal: 907ms\tremaining: 4.88s\n",
            "47:\tlearn: 0.8664134\ttest: 0.8643054\tbest: 0.8650040 (40)\ttotal: 928ms\tremaining: 4.87s\n",
            "48:\tlearn: 0.8661892\ttest: 0.8651649\tbest: 0.8651649 (48)\ttotal: 945ms\tremaining: 4.84s\n",
            "49:\tlearn: 0.8664561\ttest: 0.8641815\tbest: 0.8651649 (48)\ttotal: 966ms\tremaining: 4.83s\n",
            "50:\tlearn: 0.8672387\ttest: 0.8647335\tbest: 0.8651649 (48)\ttotal: 987ms\tremaining: 4.82s\n",
            "51:\tlearn: 0.8679825\ttest: 0.8644534\tbest: 0.8651649 (48)\ttotal: 1.01s\tremaining: 4.81s\n",
            "52:\tlearn: 0.8679398\ttest: 0.8648386\tbest: 0.8651649 (48)\ttotal: 1.03s\tremaining: 4.79s\n",
            "53:\tlearn: 0.8684104\ttest: 0.8639610\tbest: 0.8651649 (48)\ttotal: 1.04s\tremaining: 4.75s\n",
            "54:\tlearn: 0.8691133\ttest: 0.8650755\tbest: 0.8651649 (48)\ttotal: 1.07s\tremaining: 4.75s\n",
            "55:\tlearn: 0.8691733\ttest: 0.8652597\tbest: 0.8652597 (55)\ttotal: 1.09s\tremaining: 4.74s\n",
            "56:\tlearn: 0.8696075\ttest: 0.8654345\tbest: 0.8654345 (56)\ttotal: 1.11s\tremaining: 4.72s\n",
            "57:\tlearn: 0.8699566\ttest: 0.8650227\tbest: 0.8654345 (56)\ttotal: 1.13s\tremaining: 4.71s\n",
            "58:\tlearn: 0.8704019\ttest: 0.8647594\tbest: 0.8654345 (56)\ttotal: 1.15s\tremaining: 4.69s\n",
            "59:\tlearn: 0.8704133\ttest: 0.8653128\tbest: 0.8654345 (56)\ttotal: 1.17s\tremaining: 4.67s\n",
            "60:\tlearn: 0.8702265\ttest: 0.8653128\tbest: 0.8654345 (56)\ttotal: 1.19s\tremaining: 4.66s\n",
            "61:\tlearn: 0.8703311\ttest: 0.8653221\tbest: 0.8654345 (56)\ttotal: 1.21s\tremaining: 4.63s\n",
            "62:\tlearn: 0.8703666\ttest: 0.8643902\tbest: 0.8654345 (56)\ttotal: 1.23s\tremaining: 4.61s\n",
            "63:\tlearn: 0.8707505\ttest: 0.8657445\tbest: 0.8657445 (63)\ttotal: 1.25s\tremaining: 4.59s\n",
            "64:\tlearn: 0.8704330\ttest: 0.8650497\tbest: 0.8657445 (63)\ttotal: 1.26s\tremaining: 4.57s\n",
            "65:\tlearn: 0.8701150\ttest: 0.8654285\tbest: 0.8657445 (63)\ttotal: 1.28s\tremaining: 4.56s\n",
            "66:\tlearn: 0.8699661\ttest: 0.8657008\tbest: 0.8657445 (63)\ttotal: 1.31s\tremaining: 4.54s\n",
            "67:\tlearn: 0.8698387\ttest: 0.8649706\tbest: 0.8657445 (63)\ttotal: 1.33s\tremaining: 4.53s\n",
            "68:\tlearn: 0.8697252\ttest: 0.8649796\tbest: 0.8657445 (63)\ttotal: 1.35s\tremaining: 4.51s\n",
            "69:\tlearn: 0.8699596\ttest: 0.8649266\tbest: 0.8657445 (63)\ttotal: 1.37s\tremaining: 4.5s\n",
            "70:\tlearn: 0.8704349\ttest: 0.8657498\tbest: 0.8657498 (70)\ttotal: 1.39s\tremaining: 4.47s\n",
            "71:\tlearn: 0.8699254\ttest: 0.8658916\tbest: 0.8658916 (71)\ttotal: 1.41s\tremaining: 4.46s\n",
            "72:\tlearn: 0.8701075\ttest: 0.8657498\tbest: 0.8658916 (71)\ttotal: 1.43s\tremaining: 4.43s\n",
            "73:\tlearn: 0.8702791\ttest: 0.8660875\tbest: 0.8660875 (73)\ttotal: 1.44s\tremaining: 4.4s\n",
            "74:\tlearn: 0.8706104\ttest: 0.8667868\tbest: 0.8667868 (74)\ttotal: 1.47s\tremaining: 4.4s\n",
            "75:\tlearn: 0.8708645\ttest: 0.8673118\tbest: 0.8673118 (75)\ttotal: 1.49s\tremaining: 4.4s\n",
            "76:\tlearn: 0.8706988\ttest: 0.8660131\tbest: 0.8673118 (75)\ttotal: 1.52s\tremaining: 4.39s\n",
            "77:\tlearn: 0.8712118\ttest: 0.8661108\tbest: 0.8673118 (75)\ttotal: 1.54s\tremaining: 4.38s\n",
            "78:\tlearn: 0.8714292\ttest: 0.8657597\tbest: 0.8673118 (75)\ttotal: 1.55s\tremaining: 4.35s\n",
            "79:\tlearn: 0.8715615\ttest: 0.8662838\tbest: 0.8673118 (75)\ttotal: 1.57s\tremaining: 4.33s\n",
            "80:\tlearn: 0.8719420\ttest: 0.8659456\tbest: 0.8673118 (75)\ttotal: 1.59s\tremaining: 4.31s\n",
            "81:\tlearn: 0.8718893\ttest: 0.8659794\tbest: 0.8673118 (75)\ttotal: 1.61s\tremaining: 4.28s\n",
            "82:\tlearn: 0.8719230\ttest: 0.8662191\tbest: 0.8673118 (75)\ttotal: 1.63s\tremaining: 4.25s\n",
            "83:\tlearn: 0.8718516\ttest: 0.8660875\tbest: 0.8673118 (75)\ttotal: 1.65s\tremaining: 4.23s\n",
            "84:\tlearn: 0.8722315\ttest: 0.8668852\tbest: 0.8673118 (75)\ttotal: 1.67s\tremaining: 4.22s\n",
            "85:\tlearn: 0.8726514\ttest: 0.8666120\tbest: 0.8673118 (75)\ttotal: 1.71s\tremaining: 4.25s\n",
            "86:\tlearn: 0.8730250\ttest: 0.8665136\tbest: 0.8673118 (75)\ttotal: 1.73s\tremaining: 4.22s\n",
            "87:\tlearn: 0.8728449\ttest: 0.8657696\tbest: 0.8673118 (75)\ttotal: 1.74s\tremaining: 4.2s\n",
            "88:\tlearn: 0.8729762\ttest: 0.8670064\tbest: 0.8673118 (75)\ttotal: 1.76s\tremaining: 4.18s\n",
            "89:\tlearn: 0.8735293\ttest: 0.8671926\tbest: 0.8673118 (75)\ttotal: 1.79s\tremaining: 4.17s\n",
            "90:\tlearn: 0.8730445\ttest: 0.8666229\tbest: 0.8673118 (75)\ttotal: 1.8s\tremaining: 4.14s\n",
            "91:\tlearn: 0.8730361\ttest: 0.8666776\tbest: 0.8673118 (75)\ttotal: 1.82s\tremaining: 4.12s\n",
            "92:\tlearn: 0.8727183\ttest: 0.8663928\tbest: 0.8673118 (75)\ttotal: 1.84s\tremaining: 4.09s\n",
            "93:\tlearn: 0.8727809\ttest: 0.8670938\tbest: 0.8673118 (75)\ttotal: 1.86s\tremaining: 4.07s\n",
            "94:\tlearn: 0.8733169\ttest: 0.8672363\tbest: 0.8673118 (75)\ttotal: 1.88s\tremaining: 4.05s\n",
            "95:\tlearn: 0.8730185\ttest: 0.8661495\tbest: 0.8673118 (75)\ttotal: 1.9s\tremaining: 4.03s\n",
            "96:\tlearn: 0.8726643\ttest: 0.8661053\tbest: 0.8673118 (75)\ttotal: 1.92s\tremaining: 4.02s\n",
            "97:\tlearn: 0.8724705\ttest: 0.8665786\tbest: 0.8673118 (75)\ttotal: 1.94s\tremaining: 3.99s\n",
            "98:\tlearn: 0.8731266\ttest: 0.8663031\tbest: 0.8673118 (75)\ttotal: 1.96s\tremaining: 3.97s\n",
            "99:\tlearn: 0.8734261\ttest: 0.8665021\tbest: 0.8673118 (75)\ttotal: 1.98s\tremaining: 3.96s\n",
            "100:\tlearn: 0.8733218\ttest: 0.8679743\tbest: 0.8679743 (100)\ttotal: 2s\tremaining: 3.95s\n",
            "101:\tlearn: 0.8732836\ttest: 0.8673267\tbest: 0.8679743 (100)\ttotal: 2.03s\tremaining: 3.94s\n",
            "102:\tlearn: 0.8732267\ttest: 0.8677563\tbest: 0.8679743 (100)\ttotal: 2.05s\tremaining: 3.92s\n",
            "103:\tlearn: 0.8732950\ttest: 0.8679618\tbest: 0.8679743 (100)\ttotal: 2.07s\tremaining: 3.9s\n",
            "104:\tlearn: 0.8731780\ttest: 0.8670406\tbest: 0.8679743 (100)\ttotal: 2.09s\tremaining: 3.88s\n",
            "105:\tlearn: 0.8732313\ttest: 0.8685903\tbest: 0.8685903 (105)\ttotal: 2.1s\tremaining: 3.85s\n",
            "106:\tlearn: 0.8733174\ttest: 0.8673385\tbest: 0.8685903 (105)\ttotal: 2.13s\tremaining: 3.84s\n",
            "107:\tlearn: 0.8737137\ttest: 0.8683603\tbest: 0.8685903 (105)\ttotal: 2.14s\tremaining: 3.81s\n",
            "108:\tlearn: 0.8736846\ttest: 0.8672947\tbest: 0.8685903 (105)\ttotal: 2.17s\tremaining: 3.79s\n",
            "109:\tlearn: 0.8738314\ttest: 0.8676495\tbest: 0.8685903 (105)\ttotal: 2.19s\tremaining: 3.77s\n",
            "110:\tlearn: 0.8732872\ttest: 0.8670424\tbest: 0.8685903 (105)\ttotal: 2.21s\tremaining: 3.76s\n",
            "111:\tlearn: 0.8735842\ttest: 0.8688552\tbest: 0.8688552 (111)\ttotal: 2.23s\tremaining: 3.74s\n",
            "112:\tlearn: 0.8739524\ttest: 0.8688415\tbest: 0.8688552 (111)\ttotal: 2.25s\tremaining: 3.72s\n",
            "113:\tlearn: 0.8740298\ttest: 0.8684079\tbest: 0.8688552 (111)\ttotal: 2.27s\tremaining: 3.7s\n",
            "114:\tlearn: 0.8737074\ttest: 0.8686532\tbest: 0.8688552 (111)\ttotal: 2.29s\tremaining: 3.68s\n",
            "115:\tlearn: 0.8744398\ttest: 0.8693191\tbest: 0.8693191 (115)\ttotal: 2.31s\tremaining: 3.66s\n",
            "116:\tlearn: 0.8741645\ttest: 0.8698550\tbest: 0.8698550 (116)\ttotal: 2.32s\tremaining: 3.63s\n",
            "117:\tlearn: 0.8738784\ttest: 0.8690000\tbest: 0.8698550 (116)\ttotal: 2.35s\tremaining: 3.62s\n",
            "118:\tlearn: 0.8742674\ttest: 0.8692462\tbest: 0.8698550 (116)\ttotal: 2.37s\tremaining: 3.6s\n",
            "119:\tlearn: 0.8742983\ttest: 0.8690000\tbest: 0.8698550 (116)\ttotal: 2.39s\tremaining: 3.58s\n",
            "120:\tlearn: 0.8744488\ttest: 0.8693333\tbest: 0.8698550 (116)\ttotal: 2.41s\tremaining: 3.56s\n",
            "121:\tlearn: 0.8744383\ttest: 0.8693769\tbest: 0.8698550 (116)\ttotal: 2.43s\tremaining: 3.54s\n",
            "122:\tlearn: 0.8744174\ttest: 0.8692898\tbest: 0.8698550 (116)\ttotal: 2.44s\tremaining: 3.52s\n",
            "123:\tlearn: 0.8747346\ttest: 0.8700584\tbest: 0.8700584 (123)\ttotal: 2.46s\tremaining: 3.5s\n",
            "124:\tlearn: 0.8749116\ttest: 0.8701450\tbest: 0.8701450 (124)\ttotal: 2.48s\tremaining: 3.48s\n",
            "125:\tlearn: 0.8749636\ttest: 0.8699133\tbest: 0.8701450 (124)\ttotal: 2.5s\tremaining: 3.46s\n",
            "126:\tlearn: 0.8751404\ttest: 0.8702901\tbest: 0.8702901 (126)\ttotal: 2.53s\tremaining: 3.44s\n",
            "127:\tlearn: 0.8745105\ttest: 0.8704508\tbest: 0.8704508 (127)\ttotal: 2.54s\tremaining: 3.42s\n",
            "128:\tlearn: 0.8751197\ttest: 0.8705529\tbest: 0.8705529 (128)\ttotal: 2.57s\tremaining: 3.4s\n",
            "129:\tlearn: 0.8748230\ttest: 0.8706983\tbest: 0.8706983 (129)\ttotal: 2.59s\tremaining: 3.39s\n",
            "130:\tlearn: 0.8751197\ttest: 0.8709731\tbest: 0.8709731 (130)\ttotal: 2.61s\tremaining: 3.37s\n",
            "131:\tlearn: 0.8747657\ttest: 0.8704075\tbest: 0.8709731 (130)\ttotal: 2.63s\tremaining: 3.35s\n",
            "132:\tlearn: 0.8746876\ttest: 0.8705529\tbest: 0.8709731 (130)\ttotal: 2.65s\tremaining: 3.33s\n",
            "133:\tlearn: 0.8746876\ttest: 0.8702621\tbest: 0.8709731 (130)\ttotal: 2.67s\tremaining: 3.31s\n",
            "134:\tlearn: 0.8750729\ttest: 0.8699716\tbest: 0.8709731 (130)\ttotal: 2.71s\tremaining: 3.31s\n",
            "135:\tlearn: 0.8748336\ttest: 0.8713070\tbest: 0.8713070 (135)\ttotal: 2.73s\tremaining: 3.29s\n",
            "136:\tlearn: 0.8748385\ttest: 0.8699866\tbest: 0.8713070 (135)\ttotal: 2.75s\tremaining: 3.27s\n",
            "137:\tlearn: 0.8751408\ttest: 0.8695071\tbest: 0.8713070 (135)\ttotal: 2.77s\tremaining: 3.25s\n",
            "138:\tlearn: 0.8752398\ttest: 0.8697978\tbest: 0.8713070 (135)\ttotal: 2.79s\tremaining: 3.23s\n",
            "139:\tlearn: 0.8748073\ttest: 0.8701320\tbest: 0.8713070 (135)\ttotal: 2.81s\tremaining: 3.21s\n",
            "140:\tlearn: 0.8751406\ttest: 0.8698848\tbest: 0.8713070 (135)\ttotal: 2.83s\tremaining: 3.19s\n",
            "141:\tlearn: 0.8754113\ttest: 0.8704075\tbest: 0.8713070 (135)\ttotal: 2.85s\tremaining: 3.17s\n",
            "142:\tlearn: 0.8754588\ttest: 0.8698997\tbest: 0.8713070 (135)\ttotal: 2.87s\tremaining: 3.15s\n",
            "143:\tlearn: 0.8758644\ttest: 0.8709731\tbest: 0.8713070 (135)\ttotal: 2.89s\tremaining: 3.13s\n",
            "144:\tlearn: 0.8759264\ttest: 0.8712045\tbest: 0.8713070 (135)\ttotal: 2.91s\tremaining: 3.12s\n",
            "145:\tlearn: 0.8761770\ttest: 0.8701602\tbest: 0.8713070 (135)\ttotal: 2.93s\tremaining: 3.09s\n",
            "146:\tlearn: 0.8760055\ttest: 0.8698848\tbest: 0.8713070 (135)\ttotal: 2.95s\tremaining: 3.07s\n",
            "147:\tlearn: 0.8757816\ttest: 0.8696960\tbest: 0.8713070 (135)\ttotal: 2.98s\tremaining: 3.06s\n",
            "148:\tlearn: 0.8760785\ttest: 0.8700301\tbest: 0.8713070 (135)\ttotal: 3s\tremaining: 3.04s\n",
            "149:\tlearn: 0.8760889\ttest: 0.8696524\tbest: 0.8713070 (135)\ttotal: 3.02s\tremaining: 3.02s\n",
            "150:\tlearn: 0.8760523\ttest: 0.8701754\tbest: 0.8713070 (135)\ttotal: 3.03s\tremaining: 2.99s\n",
            "151:\tlearn: 0.8759793\ttest: 0.8711779\tbest: 0.8713070 (135)\ttotal: 3.05s\tremaining: 2.97s\n",
            "152:\tlearn: 0.8758442\ttest: 0.8711779\tbest: 0.8713070 (135)\ttotal: 3.07s\tremaining: 2.95s\n",
            "153:\tlearn: 0.8760110\ttest: 0.8707415\tbest: 0.8713070 (135)\ttotal: 3.09s\tremaining: 2.93s\n",
            "154:\tlearn: 0.8759745\ttest: 0.8703642\tbest: 0.8713070 (135)\ttotal: 3.11s\tremaining: 2.91s\n",
            "155:\tlearn: 0.8760689\ttest: 0.8709030\tbest: 0.8713070 (135)\ttotal: 3.13s\tremaining: 2.88s\n",
            "156:\tlearn: 0.8760475\ttest: 0.8700886\tbest: 0.8713070 (135)\ttotal: 3.15s\tremaining: 2.87s\n",
            "157:\tlearn: 0.8763454\ttest: 0.8703797\tbest: 0.8713070 (135)\ttotal: 3.16s\tremaining: 2.84s\n",
            "158:\tlearn: 0.8763445\ttest: 0.8706276\tbest: 0.8713070 (135)\ttotal: 3.19s\tremaining: 2.83s\n",
            "159:\tlearn: 0.8765741\ttest: 0.8710918\tbest: 0.8713070 (135)\ttotal: 3.21s\tremaining: 2.81s\n",
            "160:\tlearn: 0.8764598\ttest: 0.8710487\tbest: 0.8713070 (135)\ttotal: 3.22s\tremaining: 2.78s\n",
            "161:\tlearn: 0.8769250\ttest: 0.8704819\tbest: 0.8713070 (135)\ttotal: 3.25s\tremaining: 2.77s\n",
            "162:\tlearn: 0.8768781\ttest: 0.8706709\tbest: 0.8713070 (135)\ttotal: 3.27s\tremaining: 2.75s\n",
            "163:\tlearn: 0.8768999\ttest: 0.8706276\tbest: 0.8713070 (135)\ttotal: 3.3s\tremaining: 2.73s\n",
            "164:\tlearn: 0.8772443\ttest: 0.8698561\tbest: 0.8713070 (135)\ttotal: 3.32s\tremaining: 2.72s\n",
            "165:\tlearn: 0.8769835\ttest: 0.8702341\tbest: 0.8713070 (135)\ttotal: 3.34s\tremaining: 2.7s\n",
            "166:\tlearn: 0.8771930\ttest: 0.8706276\tbest: 0.8713070 (135)\ttotal: 3.36s\tremaining: 2.67s\n",
            "167:\tlearn: 0.8771681\ttest: 0.8710055\tbest: 0.8713070 (135)\ttotal: 3.37s\tremaining: 2.65s\n",
            "168:\tlearn: 0.8774964\ttest: 0.8701038\tbest: 0.8713070 (135)\ttotal: 3.4s\tremaining: 2.63s\n",
            "169:\tlearn: 0.8777309\ttest: 0.8703797\tbest: 0.8713070 (135)\ttotal: 3.42s\tremaining: 2.61s\n",
            "170:\tlearn: 0.8778001\ttest: 0.8700017\tbest: 0.8713070 (135)\ttotal: 3.43s\tremaining: 2.59s\n",
            "171:\tlearn: 0.8777755\ttest: 0.8700452\tbest: 0.8713070 (135)\ttotal: 3.45s\tremaining: 2.57s\n",
            "172:\tlearn: 0.8781038\ttest: 0.8705253\tbest: 0.8713070 (135)\ttotal: 3.47s\tremaining: 2.55s\n",
            "173:\tlearn: 0.8782343\ttest: 0.8697690\tbest: 0.8713070 (135)\ttotal: 3.49s\tremaining: 2.53s\n",
            "174:\tlearn: 0.8784281\ttest: 0.8700017\tbest: 0.8713070 (135)\ttotal: 3.51s\tremaining: 2.51s\n",
            "175:\tlearn: 0.8781365\ttest: 0.8695798\tbest: 0.8713070 (135)\ttotal: 3.53s\tremaining: 2.49s\n",
            "176:\tlearn: 0.8781630\ttest: 0.8703363\tbest: 0.8713070 (135)\ttotal: 3.55s\tremaining: 2.47s\n",
            "177:\tlearn: 0.8782507\ttest: 0.8701473\tbest: 0.8713070 (135)\ttotal: 3.57s\tremaining: 2.44s\n",
            "178:\tlearn: 0.8785523\ttest: 0.8706709\tbest: 0.8713070 (135)\ttotal: 3.59s\tremaining: 2.42s\n",
            "179:\tlearn: 0.8780447\ttest: 0.8710487\tbest: 0.8713070 (135)\ttotal: 3.61s\tremaining: 2.41s\n",
            "180:\tlearn: 0.8781119\ttest: 0.8711513\tbest: 0.8713070 (135)\ttotal: 3.63s\tremaining: 2.39s\n",
            "181:\tlearn: 0.8780997\ttest: 0.8708006\tbest: 0.8713070 (135)\ttotal: 3.65s\tremaining: 2.37s\n",
            "182:\tlearn: 0.8785649\ttest: 0.8706276\tbest: 0.8713070 (135)\ttotal: 3.67s\tremaining: 2.35s\n",
            "183:\tlearn: 0.8782812\ttest: 0.8699582\tbest: 0.8713070 (135)\ttotal: 3.7s\tremaining: 2.33s\n",
            "184:\tlearn: 0.8784727\ttest: 0.8701038\tbest: 0.8713070 (135)\ttotal: 3.72s\tremaining: 2.31s\n",
            "185:\tlearn: 0.8785625\ttest: 0.8696234\tbest: 0.8713070 (135)\ttotal: 3.74s\tremaining: 2.29s\n",
            "186:\tlearn: 0.8786258\ttest: 0.8695652\tbest: 0.8713070 (135)\ttotal: 3.76s\tremaining: 2.27s\n",
            "187:\tlearn: 0.8784625\ttest: 0.8697107\tbest: 0.8713070 (135)\ttotal: 3.78s\tremaining: 2.25s\n",
            "188:\tlearn: 0.8786233\ttest: 0.8697978\tbest: 0.8713070 (135)\ttotal: 3.81s\tremaining: 2.23s\n",
            "189:\tlearn: 0.8782565\ttest: 0.8697978\tbest: 0.8713070 (135)\ttotal: 3.83s\tremaining: 2.22s\n",
            "190:\tlearn: 0.8784969\ttest: 0.8697978\tbest: 0.8713070 (135)\ttotal: 3.85s\tremaining: 2.2s\n",
            "191:\tlearn: 0.8785359\ttest: 0.8698997\tbest: 0.8713070 (135)\ttotal: 3.87s\tremaining: 2.17s\n",
            "192:\tlearn: 0.8785523\ttest: 0.8703363\tbest: 0.8713070 (135)\ttotal: 3.89s\tremaining: 2.15s\n",
            "193:\tlearn: 0.8784242\ttest: 0.8706276\tbest: 0.8713070 (135)\ttotal: 3.91s\tremaining: 2.14s\n",
            "194:\tlearn: 0.8782161\ttest: 0.8702929\tbest: 0.8713070 (135)\ttotal: 3.94s\tremaining: 2.12s\n",
            "195:\tlearn: 0.8784734\ttest: 0.8700603\tbest: 0.8713070 (135)\ttotal: 3.95s\tremaining: 2.1s\n",
            "196:\tlearn: 0.8785266\ttest: 0.8699732\tbest: 0.8713070 (135)\ttotal: 3.97s\tremaining: 2.08s\n",
            "197:\tlearn: 0.8783857\ttest: 0.8699732\tbest: 0.8713070 (135)\ttotal: 3.99s\tremaining: 2.06s\n",
            "198:\tlearn: 0.8783450\ttest: 0.8699296\tbest: 0.8713070 (135)\ttotal: 4.01s\tremaining: 2.04s\n",
            "199:\tlearn: 0.8789009\ttest: 0.8696527\tbest: 0.8713070 (135)\ttotal: 4.04s\tremaining: 2.02s\n",
            "200:\tlearn: 0.8789756\ttest: 0.8690696\tbest: 0.8713070 (135)\ttotal: 4.06s\tremaining: 2s\n",
            "201:\tlearn: 0.8788145\ttest: 0.8687919\tbest: 0.8713070 (135)\ttotal: 4.08s\tremaining: 1.98s\n",
            "202:\tlearn: 0.8790657\ttest: 0.8689377\tbest: 0.8713070 (135)\ttotal: 4.1s\tremaining: 1.96s\n",
            "203:\tlearn: 0.8788310\ttest: 0.8689377\tbest: 0.8713070 (135)\ttotal: 4.12s\tremaining: 1.94s\n",
            "204:\tlearn: 0.8790657\ttest: 0.8689377\tbest: 0.8713070 (135)\ttotal: 4.14s\tremaining: 1.92s\n",
            "205:\tlearn: 0.8793039\ttest: 0.8687343\tbest: 0.8713070 (135)\ttotal: 4.16s\tremaining: 1.9s\n",
            "206:\tlearn: 0.8792570\ttest: 0.8687343\tbest: 0.8713070 (135)\ttotal: 4.18s\tremaining: 1.88s\n",
            "207:\tlearn: 0.8793507\ttest: 0.8691714\tbest: 0.8713070 (135)\ttotal: 4.2s\tremaining: 1.86s\n",
            "208:\tlearn: 0.8792671\ttest: 0.8693172\tbest: 0.8713070 (135)\ttotal: 4.22s\tremaining: 1.84s\n",
            "209:\tlearn: 0.8793543\ttest: 0.8693029\tbest: 0.8713070 (135)\ttotal: 4.25s\tremaining: 1.82s\n",
            "210:\tlearn: 0.8795045\ttest: 0.8690257\tbest: 0.8713070 (135)\ttotal: 4.26s\tremaining: 1.8s\n",
            "211:\tlearn: 0.8797087\ttest: 0.8693172\tbest: 0.8713070 (135)\ttotal: 4.29s\tremaining: 1.78s\n",
            "212:\tlearn: 0.8796618\ttest: 0.8691275\tbest: 0.8713070 (135)\ttotal: 4.3s\tremaining: 1.76s\n",
            "213:\tlearn: 0.8795781\ttest: 0.8687479\tbest: 0.8713070 (135)\ttotal: 4.32s\tremaining: 1.74s\n",
            "214:\tlearn: 0.8796719\ttest: 0.8696381\tbest: 0.8713070 (135)\ttotal: 4.34s\tremaining: 1.72s\n",
            "215:\tlearn: 0.8797556\ttest: 0.8694486\tbest: 0.8713070 (135)\ttotal: 4.36s\tremaining: 1.7s\n",
            "216:\tlearn: 0.8794813\ttest: 0.8695944\tbest: 0.8713070 (135)\ttotal: 4.38s\tremaining: 1.67s\n",
            "217:\tlearn: 0.8795014\ttest: 0.8693467\tbest: 0.8713070 (135)\ttotal: 4.4s\tremaining: 1.65s\n",
            "218:\tlearn: 0.8796618\ttest: 0.8695944\tbest: 0.8713070 (135)\ttotal: 4.42s\tremaining: 1.63s\n",
            "219:\tlearn: 0.8800301\ttest: 0.8688360\tbest: 0.8713070 (135)\ttotal: 4.44s\tremaining: 1.61s\n",
            "220:\tlearn: 0.8796583\ttest: 0.8692153\tbest: 0.8713070 (135)\ttotal: 4.46s\tremaining: 1.59s\n",
            "221:\tlearn: 0.8795781\ttest: 0.8692887\tbest: 0.8713070 (135)\ttotal: 4.48s\tremaining: 1.57s\n",
            "222:\tlearn: 0.8800167\ttest: 0.8695361\tbest: 0.8713070 (135)\ttotal: 4.5s\tremaining: 1.55s\n",
            "223:\tlearn: 0.8797354\ttest: 0.8688662\tbest: 0.8713070 (135)\ttotal: 4.52s\tremaining: 1.53s\n",
            "224:\tlearn: 0.8796416\ttest: 0.8693467\tbest: 0.8713070 (135)\ttotal: 4.54s\tremaining: 1.51s\n",
            "225:\tlearn: 0.8794777\ttest: 0.8695361\tbest: 0.8713070 (135)\ttotal: 4.56s\tremaining: 1.49s\n",
            "226:\tlearn: 0.8795246\ttest: 0.8695361\tbest: 0.8713070 (135)\ttotal: 4.58s\tremaining: 1.47s\n",
            "227:\tlearn: 0.8795216\ttest: 0.8687646\tbest: 0.8713070 (135)\ttotal: 4.61s\tremaining: 1.45s\n",
            "228:\tlearn: 0.8797992\ttest: 0.8686192\tbest: 0.8713070 (135)\ttotal: 4.63s\tremaining: 1.44s\n",
            "229:\tlearn: 0.8798595\ttest: 0.8683286\tbest: 0.8713070 (135)\ttotal: 4.65s\tremaining: 1.42s\n",
            "230:\tlearn: 0.8799164\ttest: 0.8687071\tbest: 0.8713070 (135)\ttotal: 4.67s\tremaining: 1.4s\n",
            "231:\tlearn: 0.8800402\ttest: 0.8685619\tbest: 0.8713070 (135)\ttotal: 4.69s\tremaining: 1.38s\n",
            "232:\tlearn: 0.8799766\ttest: 0.8683726\tbest: 0.8713070 (135)\ttotal: 4.72s\tremaining: 1.36s\n",
            "233:\tlearn: 0.8800201\ttest: 0.8689540\tbest: 0.8713070 (135)\ttotal: 4.74s\tremaining: 1.34s\n",
            "234:\tlearn: 0.8802546\ttest: 0.8703363\tbest: 0.8713070 (135)\ttotal: 4.76s\tremaining: 1.32s\n",
            "235:\tlearn: 0.8801106\ttest: 0.8702495\tbest: 0.8713070 (135)\ttotal: 4.78s\tremaining: 1.3s\n",
            "236:\tlearn: 0.8805632\ttest: 0.8702060\tbest: 0.8713070 (135)\ttotal: 4.8s\tremaining: 1.28s\n",
            "237:\tlearn: 0.8805332\ttest: 0.8708326\tbest: 0.8713070 (135)\ttotal: 4.82s\tremaining: 1.25s\n",
            "238:\tlearn: 0.8804963\ttest: 0.8708326\tbest: 0.8713070 (135)\ttotal: 4.83s\tremaining: 1.23s\n",
            "239:\tlearn: 0.8803655\ttest: 0.8706868\tbest: 0.8713070 (135)\ttotal: 4.86s\tremaining: 1.21s\n",
            "240:\tlearn: 0.8804662\ttest: 0.8709786\tbest: 0.8713070 (135)\ttotal: 4.88s\tremaining: 1.2s\n",
            "241:\tlearn: 0.8806778\ttest: 0.8710218\tbest: 0.8713070 (135)\ttotal: 4.9s\tremaining: 1.17s\n",
            "242:\tlearn: 0.8807547\ttest: 0.8713137\tbest: 0.8713137 (242)\ttotal: 4.92s\tremaining: 1.15s\n",
            "243:\tlearn: 0.8808286\ttest: 0.8713137\tbest: 0.8713137 (242)\ttotal: 4.94s\tremaining: 1.13s\n",
            "244:\tlearn: 0.8807986\ttest: 0.8713137\tbest: 0.8713137 (242)\ttotal: 4.96s\tremaining: 1.11s\n",
            "245:\tlearn: 0.8807816\ttest: 0.8711245\tbest: 0.8713137 (242)\ttotal: 4.98s\tremaining: 1.09s\n",
            "246:\tlearn: 0.8809494\ttest: 0.8709353\tbest: 0.8713137 (242)\ttotal: 5s\tremaining: 1.07s\n",
            "247:\tlearn: 0.8810602\ttest: 0.8716058\tbest: 0.8716058 (247)\ttotal: 5.02s\tremaining: 1.05s\n",
            "248:\tlearn: 0.8814299\ttest: 0.8707893\tbest: 0.8716058 (247)\ttotal: 5.04s\tremaining: 1.03s\n",
            "249:\tlearn: 0.8815094\ttest: 0.8716488\tbest: 0.8716488 (249)\ttotal: 5.06s\tremaining: 1.01s\n",
            "250:\tlearn: 0.8812450\ttest: 0.8711677\tbest: 0.8716488 (249)\ttotal: 5.09s\tremaining: 993ms\n",
            "251:\tlearn: 0.8814228\ttest: 0.8708759\tbest: 0.8716488 (249)\ttotal: 5.11s\tremaining: 973ms\n",
            "252:\tlearn: 0.8813957\ttest: 0.8708326\tbest: 0.8716488 (249)\ttotal: 5.12s\tremaining: 952ms\n",
            "253:\tlearn: 0.8811541\ttest: 0.8710218\tbest: 0.8716488 (249)\ttotal: 5.14s\tremaining: 932ms\n",
            "254:\tlearn: 0.8811541\ttest: 0.8708759\tbest: 0.8716488 (249)\ttotal: 5.17s\tremaining: 911ms\n",
            "255:\tlearn: 0.8812238\ttest: 0.8707734\tbest: 0.8716488 (249)\ttotal: 5.18s\tremaining: 891ms\n",
            "256:\tlearn: 0.8812238\ttest: 0.8709623\tbest: 0.8716488 (249)\ttotal: 5.2s\tremaining: 870ms\n",
            "257:\tlearn: 0.8817881\ttest: 0.8707893\tbest: 0.8716488 (249)\ttotal: 5.22s\tremaining: 850ms\n",
            "258:\tlearn: 0.8818350\ttest: 0.8706001\tbest: 0.8716488 (249)\ttotal: 5.24s\tremaining: 830ms\n",
            "259:\tlearn: 0.8820126\ttest: 0.8707460\tbest: 0.8716488 (249)\ttotal: 5.26s\tremaining: 810ms\n",
            "260:\tlearn: 0.8820397\ttest: 0.8708920\tbest: 0.8716488 (249)\ttotal: 5.28s\tremaining: 790ms\n",
            "261:\tlearn: 0.8818647\ttest: 0.8710813\tbest: 0.8716488 (249)\ttotal: 5.31s\tremaining: 770ms\n",
            "262:\tlearn: 0.8817538\ttest: 0.8711842\tbest: 0.8716488 (249)\ttotal: 5.33s\tremaining: 750ms\n",
            "263:\tlearn: 0.8821360\ttest: 0.8711842\tbest: 0.8716488 (249)\ttotal: 5.35s\tremaining: 729ms\n",
            "264:\tlearn: 0.8818746\ttest: 0.8714166\tbest: 0.8716488 (249)\ttotal: 5.37s\tremaining: 709ms\n",
            "265:\tlearn: 0.8821360\ttest: 0.8712274\tbest: 0.8716488 (249)\ttotal: 5.39s\tremaining: 689ms\n",
            "266:\tlearn: 0.8818647\ttest: 0.8708920\tbest: 0.8716488 (249)\ttotal: 5.4s\tremaining: 668ms\n",
            "267:\tlearn: 0.8818277\ttest: 0.8705567\tbest: 0.8716488 (249)\ttotal: 5.42s\tremaining: 648ms\n",
            "268:\tlearn: 0.8818376\ttest: 0.8707460\tbest: 0.8716488 (249)\ttotal: 5.45s\tremaining: 627ms\n",
            "269:\tlearn: 0.8818376\ttest: 0.8709948\tbest: 0.8716488 (249)\ttotal: 5.46s\tremaining: 607ms\n",
            "270:\tlearn: 0.8818376\ttest: 0.8709948\tbest: 0.8716488 (249)\ttotal: 5.48s\tremaining: 586ms\n",
            "271:\tlearn: 0.8816997\ttest: 0.8713303\tbest: 0.8716488 (249)\ttotal: 5.5s\tremaining: 566ms\n",
            "272:\tlearn: 0.8818304\ttest: 0.8708920\tbest: 0.8716488 (249)\ttotal: 5.52s\tremaining: 546ms\n",
            "273:\tlearn: 0.8815789\ttest: 0.8708920\tbest: 0.8716488 (249)\ttotal: 5.54s\tremaining: 526ms\n",
            "274:\tlearn: 0.8819267\ttest: 0.8706434\tbest: 0.8716488 (249)\ttotal: 5.56s\tremaining: 506ms\n",
            "275:\tlearn: 0.8819834\ttest: 0.8704976\tbest: 0.8716488 (249)\ttotal: 5.58s\tremaining: 485ms\n",
            "276:\tlearn: 0.8820302\ttest: 0.8704976\tbest: 0.8716488 (249)\ttotal: 5.6s\tremaining: 465ms\n",
            "277:\tlearn: 0.8820869\ttest: 0.8709353\tbest: 0.8716488 (249)\ttotal: 5.62s\tremaining: 445ms\n",
            "278:\tlearn: 0.8820869\ttest: 0.8709353\tbest: 0.8716488 (249)\ttotal: 5.64s\tremaining: 425ms\n",
            "279:\tlearn: 0.8822471\ttest: 0.8706434\tbest: 0.8716488 (249)\ttotal: 5.66s\tremaining: 404ms\n",
            "280:\tlearn: 0.8824539\ttest: 0.8705409\tbest: 0.8716488 (249)\ttotal: 5.68s\tremaining: 384ms\n",
            "281:\tlearn: 0.8824539\ttest: 0.8705409\tbest: 0.8716488 (249)\ttotal: 5.7s\tremaining: 364ms\n",
            "282:\tlearn: 0.8823234\ttest: 0.8707301\tbest: 0.8716488 (249)\ttotal: 5.73s\tremaining: 344ms\n",
            "283:\tlearn: 0.8821067\ttest: 0.8709786\tbest: 0.8716488 (249)\ttotal: 5.75s\tremaining: 324ms\n",
            "284:\tlearn: 0.8822273\ttest: 0.8709786\tbest: 0.8716488 (249)\ttotal: 5.77s\tremaining: 304ms\n",
            "285:\tlearn: 0.8823037\ttest: 0.8706868\tbest: 0.8716488 (249)\ttotal: 5.79s\tremaining: 283ms\n",
            "286:\tlearn: 0.8823283\ttest: 0.8707893\tbest: 0.8716488 (249)\ttotal: 5.8s\tremaining: 263ms\n",
            "287:\tlearn: 0.8819834\ttest: 0.8711245\tbest: 0.8716488 (249)\ttotal: 5.83s\tremaining: 243ms\n",
            "288:\tlearn: 0.8819293\ttest: 0.8707893\tbest: 0.8716488 (249)\ttotal: 5.84s\tremaining: 223ms\n",
            "289:\tlearn: 0.8823086\ttest: 0.8708487\tbest: 0.8716488 (249)\ttotal: 5.87s\tremaining: 202ms\n",
            "290:\tlearn: 0.8819194\ttest: 0.8707460\tbest: 0.8716488 (249)\ttotal: 5.89s\tremaining: 182ms\n",
            "291:\tlearn: 0.8818825\ttest: 0.8710813\tbest: 0.8716488 (249)\ttotal: 5.91s\tremaining: 162ms\n",
            "292:\tlearn: 0.8821904\ttest: 0.8712274\tbest: 0.8716488 (249)\ttotal: 5.93s\tremaining: 142ms\n",
            "293:\tlearn: 0.8821977\ttest: 0.8713303\tbest: 0.8716488 (249)\ttotal: 5.95s\tremaining: 121ms\n",
            "294:\tlearn: 0.8822519\ttest: 0.8714334\tbest: 0.8716488 (249)\ttotal: 5.97s\tremaining: 101ms\n",
            "295:\tlearn: 0.8822519\ttest: 0.8713303\tbest: 0.8716488 (249)\ttotal: 5.99s\tremaining: 80.9ms\n",
            "296:\tlearn: 0.8819636\ttest: 0.8708487\tbest: 0.8716488 (249)\ttotal: 6.01s\tremaining: 60.7ms\n",
            "297:\tlearn: 0.8824367\ttest: 0.8717691\tbest: 0.8717691 (297)\ttotal: 6.03s\tremaining: 40.5ms\n",
            "298:\tlearn: 0.8822691\ttest: 0.8714334\tbest: 0.8717691 (297)\ttotal: 6.05s\tremaining: 20.2ms\n",
            "299:\tlearn: 0.8822691\ttest: 0.8714334\tbest: 0.8717691 (297)\ttotal: 6.06s\tremaining: 0us\n",
            "\n",
            "bestTest = 0.87176905\n",
            "bestIteration = 297\n",
            "\n",
            "Shrink model to first 298 iterations.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<catboost.core.CatBoostClassifier at 0x7f75bff32b00>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p7O_Q03iu6jJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y_pred = model.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "opqU_FidvfGd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 937
        },
        "outputId": "a10e7538-2049-4cb6-a2d2-e930c2f9c48b"
      },
      "source": [
        "model.get_all_params() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'auto_class_weights': 'None',\n",
              " 'bayesian_matrix_reg': 0.10000000149011612,\n",
              " 'best_model_min_trees': 1,\n",
              " 'boost_from_average': False,\n",
              " 'boosting_type': 'Plain',\n",
              " 'bootstrap_type': 'MVS',\n",
              " 'border_count': 254,\n",
              " 'class_names': [0, 1],\n",
              " 'classes_count': 0,\n",
              " 'combinations_ctr': ['Borders:CtrBorderCount=15:CtrBorderType=Uniform:TargetBorderCount=1:TargetBorderType=MinEntropy:Prior=0/1:Prior=0.5/1:Prior=1/1',\n",
              "  'Counter:CtrBorderCount=15:CtrBorderType=Uniform:Prior=0/1'],\n",
              " 'counter_calc_method': 'SkipTest',\n",
              " 'ctr_leaf_count_limit': 18446744073709551615,\n",
              " 'ctr_target_border_count': 1,\n",
              " 'depth': 4,\n",
              " 'eval_metric': 'F1',\n",
              " 'feature_border_type': 'GreedyLogSum',\n",
              " 'fold_permutation_block': 0,\n",
              " 'grow_policy': 'SymmetricTree',\n",
              " 'has_time': False,\n",
              " 'iterations': 300,\n",
              " 'l2_leaf_reg': 10,\n",
              " 'leaf_estimation_backtracking': 'AnyImprovement',\n",
              " 'leaf_estimation_iterations': 10,\n",
              " 'leaf_estimation_method': 'Newton',\n",
              " 'learning_rate': 0.10000000149011612,\n",
              " 'loss_function': 'Logloss',\n",
              " 'max_ctr_complexity': 4,\n",
              " 'max_leaves': 16,\n",
              " 'min_data_in_leaf': 1,\n",
              " 'model_shrink_mode': 'Constant',\n",
              " 'model_shrink_rate': 0,\n",
              " 'model_size_reg': 0.5,\n",
              " 'nan_mode': 'Min',\n",
              " 'one_hot_max_size': 2,\n",
              " 'penalties_coefficient': 1,\n",
              " 'permutation_count': 4,\n",
              " 'random_seed': 0,\n",
              " 'random_strength': 1,\n",
              " 'rsm': 1,\n",
              " 'sampling_frequency': 'PerTree',\n",
              " 'score_function': 'Cosine',\n",
              " 'simple_ctr': ['Borders:CtrBorderCount=15:CtrBorderType=Uniform:TargetBorderCount=1:TargetBorderType=MinEntropy:Prior=0/1:Prior=0.5/1:Prior=1/1',\n",
              "  'Counter:CtrBorderCount=15:CtrBorderType=Uniform:Prior=0/1'],\n",
              " 'sparse_features_conflict_fraction': 0,\n",
              " 'store_all_simple_ctr': False,\n",
              " 'subsample': 0.800000011920929,\n",
              " 'task_type': 'CPU',\n",
              " 'use_best_model': True}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N-SyC-J-vxzj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "outputId": "882a12b7-be2d-4eb1-f270-13b1f7515a1e"
      },
      "source": [
        "tn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()\n",
        "print(\"True Positive\", tp)\n",
        "print(\"True Negative\", tn)\n",
        "print(\"False Positive\", fp)\n",
        "print(\"False Negative\", fn)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True Positive 2597\n",
            "True Negative 1259\n",
            "False Positive 445\n",
            "False Negative 319\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JDwxhoAnv5XV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "f1bf9f32-5a4e-4dc9-b673-37f6a2add6fc"
      },
      "source": [
        "acc = f1_score(y_test, y_pred)\n",
        "acc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8717690500167841"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8ruAtF_VDna2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "prediction = model.predict(test_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "313JPegCDnbD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "c9087040-d031-4488-d866-9df110b09b00"
      },
      "source": [
        "prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "maOtBbxXSbf6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above prediction results after grid search of catboost didnt improve the f1 score."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mS7HlVDg-P2k",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "params = {'depth':[4, 5, 6,7],\n",
        "          'iterations':[300,500],\n",
        "              'learning_rate':[0.03,0.001,0.01,0.1,0.2,0.3],\n",
        "              'l2_leaf_reg':[3,1,5,10,100]\n",
        "               'border_count':[32,5,10,20,50,100,200],\n",
        "               'bagging_temperature':[0.03,0.09,0.25,0.75],\n",
        "               'random_strength':[0.2,0.5,0.8],\n",
        "               'max_ctr_complexity':[1,2,3,4,5]\n",
        "    }"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gKPmRNhW4CPx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ea45b1e5-581c-4177-d5d9-5a852c85076f"
      },
      "source": [
        "#param tuning using randomized search for catboost\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "model = CatBoostClassifier(cat_features=cat_features)\n",
        "randm = RandomizedSearchCV(estimator=model, param_distributions = params, \n",
        "                               cv = 10, n_iter = 10, n_jobs=-1,scoring=\"f1\")\n",
        "randm.fit(x_train, y_train)\n",
        "\n",
        "# Results from Random Search\n",
        "print(\"\\n========================================================\")\n",
        "print(\" Results from Random Search \" )\n",
        "print(\"========================================================\")    \n",
        "\n",
        "print(\"\\n The best estimator across ALL searched params:\\n\",\n",
        "      randm.best_estimator_)\n",
        "\n",
        "print(\"\\n The best score across ALL searched params:\\n\",\n",
        "      randm.best_score_)\n",
        "\n",
        "print(\"\\n The best parameters across ALL searched params:\\n\",\n",
        "      randm.best_params_)\n",
        "\n",
        "print(\"\\n ========================================================\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.6788057\ttotal: 23.9ms\tremaining: 11.9s\n",
            "1:\tlearn: 0.6664275\ttotal: 43.2ms\tremaining: 10.8s\n",
            "2:\tlearn: 0.6544476\ttotal: 61.1ms\tremaining: 10.1s\n",
            "3:\tlearn: 0.6431007\ttotal: 81.9ms\tremaining: 10.2s\n",
            "4:\tlearn: 0.6329458\ttotal: 102ms\tremaining: 10.1s\n",
            "5:\tlearn: 0.6205738\ttotal: 130ms\tremaining: 10.7s\n",
            "6:\tlearn: 0.6112713\ttotal: 161ms\tremaining: 11.3s\n",
            "7:\tlearn: 0.6023362\ttotal: 182ms\tremaining: 11.2s\n",
            "8:\tlearn: 0.5942268\ttotal: 204ms\tremaining: 11.2s\n",
            "9:\tlearn: 0.5847444\ttotal: 225ms\tremaining: 11s\n",
            "10:\tlearn: 0.5774389\ttotal: 247ms\tremaining: 11s\n",
            "11:\tlearn: 0.5704393\ttotal: 266ms\tremaining: 10.8s\n",
            "12:\tlearn: 0.5646737\ttotal: 287ms\tremaining: 10.8s\n",
            "13:\tlearn: 0.5588776\ttotal: 305ms\tremaining: 10.6s\n",
            "14:\tlearn: 0.5535927\ttotal: 327ms\tremaining: 10.6s\n",
            "15:\tlearn: 0.5485174\ttotal: 344ms\tremaining: 10.4s\n",
            "16:\tlearn: 0.5435889\ttotal: 366ms\tremaining: 10.4s\n",
            "17:\tlearn: 0.5374126\ttotal: 389ms\tremaining: 10.4s\n",
            "18:\tlearn: 0.5330622\ttotal: 409ms\tremaining: 10.4s\n",
            "19:\tlearn: 0.5280851\ttotal: 434ms\tremaining: 10.4s\n",
            "20:\tlearn: 0.5238951\ttotal: 455ms\tremaining: 10.4s\n",
            "21:\tlearn: 0.5202944\ttotal: 476ms\tremaining: 10.3s\n",
            "22:\tlearn: 0.5152683\ttotal: 495ms\tremaining: 10.3s\n",
            "23:\tlearn: 0.5120802\ttotal: 515ms\tremaining: 10.2s\n",
            "24:\tlearn: 0.5090812\ttotal: 537ms\tremaining: 10.2s\n",
            "25:\tlearn: 0.5068066\ttotal: 560ms\tremaining: 10.2s\n",
            "26:\tlearn: 0.5039385\ttotal: 581ms\tremaining: 10.2s\n",
            "27:\tlearn: 0.5011092\ttotal: 600ms\tremaining: 10.1s\n",
            "28:\tlearn: 0.4978600\ttotal: 620ms\tremaining: 10.1s\n",
            "29:\tlearn: 0.4946366\ttotal: 642ms\tremaining: 10.1s\n",
            "30:\tlearn: 0.4919374\ttotal: 660ms\tremaining: 9.99s\n",
            "31:\tlearn: 0.4885158\ttotal: 680ms\tremaining: 9.94s\n",
            "32:\tlearn: 0.4865713\ttotal: 702ms\tremaining: 9.93s\n",
            "33:\tlearn: 0.4846748\ttotal: 719ms\tremaining: 9.86s\n",
            "34:\tlearn: 0.4819662\ttotal: 740ms\tremaining: 9.83s\n",
            "35:\tlearn: 0.4797362\ttotal: 760ms\tremaining: 9.8s\n",
            "36:\tlearn: 0.4773085\ttotal: 782ms\tremaining: 9.79s\n",
            "37:\tlearn: 0.4752359\ttotal: 804ms\tremaining: 9.77s\n",
            "38:\tlearn: 0.4732898\ttotal: 823ms\tremaining: 9.73s\n",
            "39:\tlearn: 0.4716669\ttotal: 853ms\tremaining: 9.81s\n",
            "40:\tlearn: 0.4688316\ttotal: 874ms\tremaining: 9.79s\n",
            "41:\tlearn: 0.4664901\ttotal: 894ms\tremaining: 9.74s\n",
            "42:\tlearn: 0.4649914\ttotal: 914ms\tremaining: 9.72s\n",
            "43:\tlearn: 0.4634679\ttotal: 936ms\tremaining: 9.7s\n",
            "44:\tlearn: 0.4619603\ttotal: 955ms\tremaining: 9.66s\n",
            "45:\tlearn: 0.4598236\ttotal: 973ms\tremaining: 9.6s\n",
            "46:\tlearn: 0.4578351\ttotal: 993ms\tremaining: 9.57s\n",
            "47:\tlearn: 0.4565943\ttotal: 1.01s\tremaining: 9.55s\n",
            "48:\tlearn: 0.4550964\ttotal: 1.03s\tremaining: 9.53s\n",
            "49:\tlearn: 0.4537978\ttotal: 1.06s\tremaining: 9.52s\n",
            "50:\tlearn: 0.4525747\ttotal: 1.08s\tremaining: 9.5s\n",
            "51:\tlearn: 0.4509660\ttotal: 1.1s\tremaining: 9.49s\n",
            "52:\tlearn: 0.4495830\ttotal: 1.13s\tremaining: 9.49s\n",
            "53:\tlearn: 0.4480226\ttotal: 1.15s\tremaining: 9.48s\n",
            "54:\tlearn: 0.4469061\ttotal: 1.17s\tremaining: 9.45s\n",
            "55:\tlearn: 0.4457996\ttotal: 1.19s\tremaining: 9.41s\n",
            "56:\tlearn: 0.4446412\ttotal: 1.21s\tremaining: 9.38s\n",
            "57:\tlearn: 0.4430213\ttotal: 1.23s\tremaining: 9.37s\n",
            "58:\tlearn: 0.4416490\ttotal: 1.25s\tremaining: 9.34s\n",
            "59:\tlearn: 0.4405778\ttotal: 1.27s\tremaining: 9.32s\n",
            "60:\tlearn: 0.4391425\ttotal: 1.29s\tremaining: 9.32s\n",
            "61:\tlearn: 0.4377861\ttotal: 1.31s\tremaining: 9.27s\n",
            "62:\tlearn: 0.4366144\ttotal: 1.33s\tremaining: 9.26s\n",
            "63:\tlearn: 0.4356134\ttotal: 1.35s\tremaining: 9.22s\n",
            "64:\tlearn: 0.4347417\ttotal: 1.37s\tremaining: 9.19s\n",
            "65:\tlearn: 0.4334311\ttotal: 1.4s\tremaining: 9.17s\n",
            "66:\tlearn: 0.4323459\ttotal: 1.42s\tremaining: 9.14s\n",
            "67:\tlearn: 0.4314096\ttotal: 1.44s\tremaining: 9.12s\n",
            "68:\tlearn: 0.4302476\ttotal: 1.46s\tremaining: 9.09s\n",
            "69:\tlearn: 0.4290473\ttotal: 1.48s\tremaining: 9.07s\n",
            "70:\tlearn: 0.4282062\ttotal: 1.5s\tremaining: 9.04s\n",
            "71:\tlearn: 0.4273912\ttotal: 1.51s\tremaining: 9.01s\n",
            "72:\tlearn: 0.4259079\ttotal: 1.53s\tremaining: 8.98s\n",
            "73:\tlearn: 0.4252608\ttotal: 1.56s\tremaining: 8.97s\n",
            "74:\tlearn: 0.4242080\ttotal: 1.58s\tremaining: 8.96s\n",
            "75:\tlearn: 0.4232677\ttotal: 1.6s\tremaining: 8.94s\n",
            "76:\tlearn: 0.4223291\ttotal: 1.62s\tremaining: 8.92s\n",
            "77:\tlearn: 0.4212080\ttotal: 1.65s\tremaining: 8.9s\n",
            "78:\tlearn: 0.4200444\ttotal: 1.66s\tremaining: 8.87s\n",
            "79:\tlearn: 0.4192715\ttotal: 1.69s\tremaining: 8.85s\n",
            "80:\tlearn: 0.4184534\ttotal: 1.71s\tremaining: 8.83s\n",
            "81:\tlearn: 0.4175043\ttotal: 1.73s\tremaining: 8.8s\n",
            "82:\tlearn: 0.4168182\ttotal: 1.74s\tremaining: 8.76s\n",
            "83:\tlearn: 0.4159693\ttotal: 1.76s\tremaining: 8.71s\n",
            "84:\tlearn: 0.4152255\ttotal: 1.78s\tremaining: 8.7s\n",
            "85:\tlearn: 0.4144836\ttotal: 1.8s\tremaining: 8.68s\n",
            "86:\tlearn: 0.4135197\ttotal: 1.82s\tremaining: 8.66s\n",
            "87:\tlearn: 0.4125237\ttotal: 1.85s\tremaining: 8.67s\n",
            "88:\tlearn: 0.4117598\ttotal: 1.87s\tremaining: 8.66s\n",
            "89:\tlearn: 0.4110976\ttotal: 1.9s\tremaining: 8.64s\n",
            "90:\tlearn: 0.4102620\ttotal: 1.92s\tremaining: 8.61s\n",
            "91:\tlearn: 0.4096476\ttotal: 1.94s\tremaining: 8.6s\n",
            "92:\tlearn: 0.4089979\ttotal: 1.96s\tremaining: 8.58s\n",
            "93:\tlearn: 0.4083663\ttotal: 1.98s\tremaining: 8.55s\n",
            "94:\tlearn: 0.4079647\ttotal: 2s\tremaining: 8.54s\n",
            "95:\tlearn: 0.4072166\ttotal: 2.02s\tremaining: 8.52s\n",
            "96:\tlearn: 0.4063699\ttotal: 2.04s\tremaining: 8.49s\n",
            "97:\tlearn: 0.4058166\ttotal: 2.06s\tremaining: 8.45s\n",
            "98:\tlearn: 0.4048869\ttotal: 2.08s\tremaining: 8.43s\n",
            "99:\tlearn: 0.4041868\ttotal: 2.11s\tremaining: 8.43s\n",
            "100:\tlearn: 0.4036755\ttotal: 2.13s\tremaining: 8.41s\n",
            "101:\tlearn: 0.4028968\ttotal: 2.15s\tremaining: 8.38s\n",
            "102:\tlearn: 0.4023631\ttotal: 2.17s\tremaining: 8.36s\n",
            "103:\tlearn: 0.4016821\ttotal: 2.19s\tremaining: 8.34s\n",
            "104:\tlearn: 0.4009945\ttotal: 2.21s\tremaining: 8.3s\n",
            "105:\tlearn: 0.4005304\ttotal: 2.23s\tremaining: 8.3s\n",
            "106:\tlearn: 0.4000188\ttotal: 2.25s\tremaining: 8.28s\n",
            "107:\tlearn: 0.3994973\ttotal: 2.27s\tremaining: 8.25s\n",
            "108:\tlearn: 0.3988567\ttotal: 2.3s\tremaining: 8.25s\n",
            "109:\tlearn: 0.3979494\ttotal: 2.32s\tremaining: 8.24s\n",
            "110:\tlearn: 0.3975003\ttotal: 2.34s\tremaining: 8.21s\n",
            "111:\tlearn: 0.3969218\ttotal: 2.37s\tremaining: 8.19s\n",
            "112:\tlearn: 0.3962520\ttotal: 2.39s\tremaining: 8.17s\n",
            "113:\tlearn: 0.3958171\ttotal: 2.41s\tremaining: 8.15s\n",
            "114:\tlearn: 0.3950983\ttotal: 2.43s\tremaining: 8.14s\n",
            "115:\tlearn: 0.3946177\ttotal: 2.45s\tremaining: 8.12s\n",
            "116:\tlearn: 0.3941267\ttotal: 2.47s\tremaining: 8.09s\n",
            "117:\tlearn: 0.3934519\ttotal: 2.49s\tremaining: 8.07s\n",
            "118:\tlearn: 0.3929667\ttotal: 2.51s\tremaining: 8.05s\n",
            "119:\tlearn: 0.3925741\ttotal: 2.54s\tremaining: 8.04s\n",
            "120:\tlearn: 0.3919829\ttotal: 2.55s\tremaining: 8s\n",
            "121:\tlearn: 0.3915090\ttotal: 2.57s\tremaining: 7.98s\n",
            "122:\tlearn: 0.3910953\ttotal: 2.6s\tremaining: 7.96s\n",
            "123:\tlearn: 0.3905074\ttotal: 2.62s\tremaining: 7.93s\n",
            "124:\tlearn: 0.3900677\ttotal: 2.63s\tremaining: 7.9s\n",
            "125:\tlearn: 0.3897000\ttotal: 2.66s\tremaining: 7.88s\n",
            "126:\tlearn: 0.3891752\ttotal: 2.68s\tremaining: 7.86s\n",
            "127:\tlearn: 0.3888729\ttotal: 2.7s\tremaining: 7.84s\n",
            "128:\tlearn: 0.3883358\ttotal: 2.72s\tremaining: 7.82s\n",
            "129:\tlearn: 0.3876755\ttotal: 2.74s\tremaining: 7.81s\n",
            "130:\tlearn: 0.3870915\ttotal: 2.76s\tremaining: 7.79s\n",
            "131:\tlearn: 0.3866079\ttotal: 2.78s\tremaining: 7.76s\n",
            "132:\tlearn: 0.3860972\ttotal: 2.81s\tremaining: 7.75s\n",
            "133:\tlearn: 0.3857470\ttotal: 2.83s\tremaining: 7.72s\n",
            "134:\tlearn: 0.3854329\ttotal: 2.85s\tremaining: 7.71s\n",
            "135:\tlearn: 0.3851232\ttotal: 2.87s\tremaining: 7.69s\n",
            "136:\tlearn: 0.3847697\ttotal: 2.9s\tremaining: 7.67s\n",
            "137:\tlearn: 0.3841683\ttotal: 2.92s\tremaining: 7.65s\n",
            "138:\tlearn: 0.3840118\ttotal: 2.93s\tremaining: 7.61s\n",
            "139:\tlearn: 0.3836585\ttotal: 2.95s\tremaining: 7.6s\n",
            "140:\tlearn: 0.3833089\ttotal: 2.97s\tremaining: 7.57s\n",
            "141:\tlearn: 0.3830416\ttotal: 3s\tremaining: 7.55s\n",
            "142:\tlearn: 0.3824709\ttotal: 3.02s\tremaining: 7.53s\n",
            "143:\tlearn: 0.3820324\ttotal: 3.03s\tremaining: 7.5s\n",
            "144:\tlearn: 0.3816257\ttotal: 3.05s\tremaining: 7.47s\n",
            "145:\tlearn: 0.3812884\ttotal: 3.07s\tremaining: 7.45s\n",
            "146:\tlearn: 0.3810527\ttotal: 3.1s\tremaining: 7.44s\n",
            "147:\tlearn: 0.3805410\ttotal: 3.12s\tremaining: 7.42s\n",
            "148:\tlearn: 0.3800788\ttotal: 3.14s\tremaining: 7.4s\n",
            "149:\tlearn: 0.3798189\ttotal: 3.17s\tremaining: 7.4s\n",
            "150:\tlearn: 0.3793455\ttotal: 3.19s\tremaining: 7.38s\n",
            "151:\tlearn: 0.3789116\ttotal: 3.21s\tremaining: 7.36s\n",
            "152:\tlearn: 0.3785232\ttotal: 3.23s\tremaining: 7.34s\n",
            "153:\tlearn: 0.3782059\ttotal: 3.25s\tremaining: 7.32s\n",
            "154:\tlearn: 0.3776910\ttotal: 3.28s\tremaining: 7.29s\n",
            "155:\tlearn: 0.3773618\ttotal: 3.29s\tremaining: 7.26s\n",
            "156:\tlearn: 0.3770635\ttotal: 3.32s\tremaining: 7.25s\n",
            "157:\tlearn: 0.3766689\ttotal: 3.34s\tremaining: 7.23s\n",
            "158:\tlearn: 0.3764519\ttotal: 3.36s\tremaining: 7.21s\n",
            "159:\tlearn: 0.3761250\ttotal: 3.38s\tremaining: 7.18s\n",
            "160:\tlearn: 0.3758113\ttotal: 3.4s\tremaining: 7.15s\n",
            "161:\tlearn: 0.3755236\ttotal: 3.42s\tremaining: 7.13s\n",
            "162:\tlearn: 0.3751495\ttotal: 3.44s\tremaining: 7.11s\n",
            "163:\tlearn: 0.3746764\ttotal: 3.46s\tremaining: 7.09s\n",
            "164:\tlearn: 0.3744183\ttotal: 3.48s\tremaining: 7.07s\n",
            "165:\tlearn: 0.3741059\ttotal: 3.5s\tremaining: 7.04s\n",
            "166:\tlearn: 0.3737350\ttotal: 3.52s\tremaining: 7.01s\n",
            "167:\tlearn: 0.3734479\ttotal: 3.54s\tremaining: 6.99s\n",
            "168:\tlearn: 0.3731110\ttotal: 3.56s\tremaining: 6.97s\n",
            "169:\tlearn: 0.3730150\ttotal: 3.58s\tremaining: 6.94s\n",
            "170:\tlearn: 0.3727757\ttotal: 3.6s\tremaining: 6.93s\n",
            "171:\tlearn: 0.3725558\ttotal: 3.62s\tremaining: 6.91s\n",
            "172:\tlearn: 0.3723359\ttotal: 3.64s\tremaining: 6.89s\n",
            "173:\tlearn: 0.3721070\ttotal: 3.67s\tremaining: 6.87s\n",
            "174:\tlearn: 0.3717738\ttotal: 3.69s\tremaining: 6.85s\n",
            "175:\tlearn: 0.3715402\ttotal: 3.71s\tremaining: 6.83s\n",
            "176:\tlearn: 0.3712734\ttotal: 3.73s\tremaining: 6.81s\n",
            "177:\tlearn: 0.3709089\ttotal: 3.75s\tremaining: 6.78s\n",
            "178:\tlearn: 0.3705591\ttotal: 3.77s\tremaining: 6.76s\n",
            "179:\tlearn: 0.3702035\ttotal: 3.8s\tremaining: 6.75s\n",
            "180:\tlearn: 0.3698453\ttotal: 3.82s\tremaining: 6.73s\n",
            "181:\tlearn: 0.3696024\ttotal: 3.84s\tremaining: 6.71s\n",
            "182:\tlearn: 0.3693382\ttotal: 3.87s\tremaining: 6.71s\n",
            "183:\tlearn: 0.3691409\ttotal: 3.9s\tremaining: 6.69s\n",
            "184:\tlearn: 0.3688950\ttotal: 3.91s\tremaining: 6.67s\n",
            "185:\tlearn: 0.3686153\ttotal: 3.94s\tremaining: 6.64s\n",
            "186:\tlearn: 0.3683798\ttotal: 3.96s\tremaining: 6.62s\n",
            "187:\tlearn: 0.3681600\ttotal: 3.98s\tremaining: 6.6s\n",
            "188:\tlearn: 0.3680199\ttotal: 4s\tremaining: 6.58s\n",
            "189:\tlearn: 0.3677537\ttotal: 4.01s\tremaining: 6.55s\n",
            "190:\tlearn: 0.3673281\ttotal: 4.04s\tremaining: 6.54s\n",
            "191:\tlearn: 0.3671204\ttotal: 4.06s\tremaining: 6.51s\n",
            "192:\tlearn: 0.3668803\ttotal: 4.08s\tremaining: 6.49s\n",
            "193:\tlearn: 0.3665637\ttotal: 4.11s\tremaining: 6.47s\n",
            "194:\tlearn: 0.3662218\ttotal: 4.13s\tremaining: 6.46s\n",
            "195:\tlearn: 0.3660473\ttotal: 4.15s\tremaining: 6.43s\n",
            "196:\tlearn: 0.3658741\ttotal: 4.17s\tremaining: 6.42s\n",
            "197:\tlearn: 0.3657375\ttotal: 4.19s\tremaining: 6.4s\n",
            "198:\tlearn: 0.3655016\ttotal: 4.21s\tremaining: 6.37s\n",
            "199:\tlearn: 0.3651934\ttotal: 4.23s\tremaining: 6.35s\n",
            "200:\tlearn: 0.3649837\ttotal: 4.26s\tremaining: 6.33s\n",
            "201:\tlearn: 0.3647419\ttotal: 4.28s\tremaining: 6.31s\n",
            "202:\tlearn: 0.3645187\ttotal: 4.29s\tremaining: 6.28s\n",
            "203:\tlearn: 0.3642680\ttotal: 4.32s\tremaining: 6.26s\n",
            "204:\tlearn: 0.3641410\ttotal: 4.34s\tremaining: 6.24s\n",
            "205:\tlearn: 0.3639560\ttotal: 4.36s\tremaining: 6.22s\n",
            "206:\tlearn: 0.3638133\ttotal: 4.38s\tremaining: 6.2s\n",
            "207:\tlearn: 0.3636469\ttotal: 4.39s\tremaining: 6.17s\n",
            "208:\tlearn: 0.3634076\ttotal: 4.42s\tremaining: 6.15s\n",
            "209:\tlearn: 0.3631968\ttotal: 4.44s\tremaining: 6.14s\n",
            "210:\tlearn: 0.3629867\ttotal: 4.47s\tremaining: 6.12s\n",
            "211:\tlearn: 0.3628001\ttotal: 4.49s\tremaining: 6.1s\n",
            "212:\tlearn: 0.3625915\ttotal: 4.51s\tremaining: 6.08s\n",
            "213:\tlearn: 0.3623374\ttotal: 4.53s\tremaining: 6.05s\n",
            "214:\tlearn: 0.3620742\ttotal: 4.55s\tremaining: 6.03s\n",
            "215:\tlearn: 0.3617994\ttotal: 4.57s\tremaining: 6.01s\n",
            "216:\tlearn: 0.3616278\ttotal: 4.59s\tremaining: 5.99s\n",
            "217:\tlearn: 0.3614030\ttotal: 4.62s\tremaining: 5.97s\n",
            "218:\tlearn: 0.3612655\ttotal: 4.63s\tremaining: 5.95s\n",
            "219:\tlearn: 0.3610950\ttotal: 4.66s\tremaining: 5.93s\n",
            "220:\tlearn: 0.3609448\ttotal: 4.69s\tremaining: 5.92s\n",
            "221:\tlearn: 0.3606409\ttotal: 4.71s\tremaining: 5.9s\n",
            "222:\tlearn: 0.3604600\ttotal: 4.73s\tremaining: 5.87s\n",
            "223:\tlearn: 0.3602682\ttotal: 4.75s\tremaining: 5.85s\n",
            "224:\tlearn: 0.3600374\ttotal: 4.77s\tremaining: 5.83s\n",
            "225:\tlearn: 0.3599217\ttotal: 4.79s\tremaining: 5.81s\n",
            "226:\tlearn: 0.3597750\ttotal: 4.81s\tremaining: 5.78s\n",
            "227:\tlearn: 0.3595358\ttotal: 4.83s\tremaining: 5.76s\n",
            "228:\tlearn: 0.3593835\ttotal: 4.85s\tremaining: 5.74s\n",
            "229:\tlearn: 0.3591892\ttotal: 4.88s\tremaining: 5.72s\n",
            "230:\tlearn: 0.3590146\ttotal: 4.9s\tremaining: 5.7s\n",
            "231:\tlearn: 0.3589087\ttotal: 4.92s\tremaining: 5.68s\n",
            "232:\tlearn: 0.3587486\ttotal: 4.94s\tremaining: 5.66s\n",
            "233:\tlearn: 0.3586042\ttotal: 4.96s\tremaining: 5.64s\n",
            "234:\tlearn: 0.3584657\ttotal: 4.98s\tremaining: 5.61s\n",
            "235:\tlearn: 0.3582815\ttotal: 5s\tremaining: 5.59s\n",
            "236:\tlearn: 0.3580672\ttotal: 5.02s\tremaining: 5.57s\n",
            "237:\tlearn: 0.3578582\ttotal: 5.04s\tremaining: 5.55s\n",
            "238:\tlearn: 0.3576651\ttotal: 5.06s\tremaining: 5.53s\n",
            "239:\tlearn: 0.3575190\ttotal: 5.08s\tremaining: 5.51s\n",
            "240:\tlearn: 0.3573372\ttotal: 5.11s\tremaining: 5.49s\n",
            "241:\tlearn: 0.3572131\ttotal: 5.13s\tremaining: 5.47s\n",
            "242:\tlearn: 0.3571168\ttotal: 5.15s\tremaining: 5.45s\n",
            "243:\tlearn: 0.3569544\ttotal: 5.17s\tremaining: 5.43s\n",
            "244:\tlearn: 0.3567756\ttotal: 5.19s\tremaining: 5.4s\n",
            "245:\tlearn: 0.3565831\ttotal: 5.21s\tremaining: 5.38s\n",
            "246:\tlearn: 0.3564123\ttotal: 5.23s\tremaining: 5.35s\n",
            "247:\tlearn: 0.3562621\ttotal: 5.25s\tremaining: 5.33s\n",
            "248:\tlearn: 0.3561065\ttotal: 5.27s\tremaining: 5.31s\n",
            "249:\tlearn: 0.3559485\ttotal: 5.29s\tremaining: 5.29s\n",
            "250:\tlearn: 0.3558268\ttotal: 5.32s\tremaining: 5.28s\n",
            "251:\tlearn: 0.3556412\ttotal: 5.34s\tremaining: 5.26s\n",
            "252:\tlearn: 0.3554969\ttotal: 5.36s\tremaining: 5.24s\n",
            "253:\tlearn: 0.3553441\ttotal: 5.38s\tremaining: 5.21s\n",
            "254:\tlearn: 0.3552217\ttotal: 5.4s\tremaining: 5.19s\n",
            "255:\tlearn: 0.3550767\ttotal: 5.42s\tremaining: 5.17s\n",
            "256:\tlearn: 0.3549553\ttotal: 5.45s\tremaining: 5.15s\n",
            "257:\tlearn: 0.3547346\ttotal: 5.46s\tremaining: 5.13s\n",
            "258:\tlearn: 0.3546244\ttotal: 5.49s\tremaining: 5.11s\n",
            "259:\tlearn: 0.3544970\ttotal: 5.51s\tremaining: 5.09s\n",
            "260:\tlearn: 0.3543263\ttotal: 5.53s\tremaining: 5.07s\n",
            "261:\tlearn: 0.3541279\ttotal: 5.56s\tremaining: 5.05s\n",
            "262:\tlearn: 0.3538548\ttotal: 5.58s\tremaining: 5.03s\n",
            "263:\tlearn: 0.3536284\ttotal: 5.61s\tremaining: 5.01s\n",
            "264:\tlearn: 0.3535090\ttotal: 5.63s\tremaining: 4.99s\n",
            "265:\tlearn: 0.3533749\ttotal: 5.64s\tremaining: 4.96s\n",
            "266:\tlearn: 0.3531801\ttotal: 5.66s\tremaining: 4.94s\n",
            "267:\tlearn: 0.3530201\ttotal: 5.68s\tremaining: 4.92s\n",
            "268:\tlearn: 0.3528989\ttotal: 5.7s\tremaining: 4.9s\n",
            "269:\tlearn: 0.3527124\ttotal: 5.72s\tremaining: 4.88s\n",
            "270:\tlearn: 0.3526169\ttotal: 5.75s\tremaining: 4.86s\n",
            "271:\tlearn: 0.3524707\ttotal: 5.77s\tremaining: 4.83s\n",
            "272:\tlearn: 0.3524067\ttotal: 5.79s\tremaining: 4.81s\n",
            "273:\tlearn: 0.3522531\ttotal: 5.8s\tremaining: 4.79s\n",
            "274:\tlearn: 0.3521514\ttotal: 5.83s\tremaining: 4.77s\n",
            "275:\tlearn: 0.3520288\ttotal: 5.84s\tremaining: 4.74s\n",
            "276:\tlearn: 0.3518501\ttotal: 5.88s\tremaining: 4.73s\n",
            "277:\tlearn: 0.3516788\ttotal: 5.9s\tremaining: 4.71s\n",
            "278:\tlearn: 0.3515442\ttotal: 5.92s\tremaining: 4.69s\n",
            "279:\tlearn: 0.3513889\ttotal: 5.94s\tremaining: 4.67s\n",
            "280:\tlearn: 0.3512457\ttotal: 5.97s\tremaining: 4.65s\n",
            "281:\tlearn: 0.3511711\ttotal: 5.99s\tremaining: 4.63s\n",
            "282:\tlearn: 0.3510023\ttotal: 6s\tremaining: 4.61s\n",
            "283:\tlearn: 0.3508057\ttotal: 6.03s\tremaining: 4.59s\n",
            "284:\tlearn: 0.3507435\ttotal: 6.06s\tremaining: 4.57s\n",
            "285:\tlearn: 0.3506369\ttotal: 6.08s\tremaining: 4.55s\n",
            "286:\tlearn: 0.3504830\ttotal: 6.1s\tremaining: 4.53s\n",
            "287:\tlearn: 0.3504233\ttotal: 6.12s\tremaining: 4.51s\n",
            "288:\tlearn: 0.3503559\ttotal: 6.14s\tremaining: 4.48s\n",
            "289:\tlearn: 0.3502914\ttotal: 6.16s\tremaining: 4.46s\n",
            "290:\tlearn: 0.3501876\ttotal: 6.19s\tremaining: 4.44s\n",
            "291:\tlearn: 0.3501228\ttotal: 6.2s\tremaining: 4.42s\n",
            "292:\tlearn: 0.3499840\ttotal: 6.23s\tremaining: 4.4s\n",
            "293:\tlearn: 0.3498381\ttotal: 6.25s\tremaining: 4.38s\n",
            "294:\tlearn: 0.3496350\ttotal: 6.27s\tremaining: 4.36s\n",
            "295:\tlearn: 0.3495218\ttotal: 6.29s\tremaining: 4.33s\n",
            "296:\tlearn: 0.3494418\ttotal: 6.31s\tremaining: 4.31s\n",
            "297:\tlearn: 0.3492823\ttotal: 6.33s\tremaining: 4.29s\n",
            "298:\tlearn: 0.3491660\ttotal: 6.36s\tremaining: 4.27s\n",
            "299:\tlearn: 0.3490148\ttotal: 6.37s\tremaining: 4.25s\n",
            "300:\tlearn: 0.3489142\ttotal: 6.4s\tremaining: 4.23s\n",
            "301:\tlearn: 0.3488435\ttotal: 6.42s\tremaining: 4.21s\n",
            "302:\tlearn: 0.3487407\ttotal: 6.44s\tremaining: 4.19s\n",
            "303:\tlearn: 0.3485746\ttotal: 6.46s\tremaining: 4.16s\n",
            "304:\tlearn: 0.3483882\ttotal: 6.48s\tremaining: 4.14s\n",
            "305:\tlearn: 0.3483128\ttotal: 6.5s\tremaining: 4.12s\n",
            "306:\tlearn: 0.3482316\ttotal: 6.53s\tremaining: 4.1s\n",
            "307:\tlearn: 0.3481088\ttotal: 6.54s\tremaining: 4.08s\n",
            "308:\tlearn: 0.3479672\ttotal: 6.56s\tremaining: 4.06s\n",
            "309:\tlearn: 0.3478452\ttotal: 6.58s\tremaining: 4.03s\n",
            "310:\tlearn: 0.3477432\ttotal: 6.61s\tremaining: 4.01s\n",
            "311:\tlearn: 0.3476381\ttotal: 6.62s\tremaining: 3.99s\n",
            "312:\tlearn: 0.3475542\ttotal: 6.65s\tremaining: 3.97s\n",
            "313:\tlearn: 0.3472948\ttotal: 6.67s\tremaining: 3.95s\n",
            "314:\tlearn: 0.3471775\ttotal: 6.69s\tremaining: 3.93s\n",
            "315:\tlearn: 0.3470710\ttotal: 6.71s\tremaining: 3.91s\n",
            "316:\tlearn: 0.3469185\ttotal: 6.73s\tremaining: 3.89s\n",
            "317:\tlearn: 0.3468122\ttotal: 6.76s\tremaining: 3.87s\n",
            "318:\tlearn: 0.3467257\ttotal: 6.78s\tremaining: 3.85s\n",
            "319:\tlearn: 0.3466082\ttotal: 6.8s\tremaining: 3.82s\n",
            "320:\tlearn: 0.3465092\ttotal: 6.82s\tremaining: 3.81s\n",
            "321:\tlearn: 0.3463660\ttotal: 6.84s\tremaining: 3.78s\n",
            "322:\tlearn: 0.3462510\ttotal: 6.87s\tremaining: 3.77s\n",
            "323:\tlearn: 0.3461746\ttotal: 6.9s\tremaining: 3.75s\n",
            "324:\tlearn: 0.3460343\ttotal: 6.92s\tremaining: 3.73s\n",
            "325:\tlearn: 0.3459474\ttotal: 6.94s\tremaining: 3.71s\n",
            "326:\tlearn: 0.3458360\ttotal: 6.96s\tremaining: 3.68s\n",
            "327:\tlearn: 0.3456379\ttotal: 6.98s\tremaining: 3.66s\n",
            "328:\tlearn: 0.3454768\ttotal: 7s\tremaining: 3.64s\n",
            "329:\tlearn: 0.3453517\ttotal: 7.03s\tremaining: 3.62s\n",
            "330:\tlearn: 0.3452415\ttotal: 7.05s\tremaining: 3.6s\n",
            "331:\tlearn: 0.3451099\ttotal: 7.07s\tremaining: 3.58s\n",
            "332:\tlearn: 0.3450180\ttotal: 7.09s\tremaining: 3.56s\n",
            "333:\tlearn: 0.3449151\ttotal: 7.11s\tremaining: 3.53s\n",
            "334:\tlearn: 0.3447822\ttotal: 7.13s\tremaining: 3.51s\n",
            "335:\tlearn: 0.3446537\ttotal: 7.15s\tremaining: 3.49s\n",
            "336:\tlearn: 0.3445215\ttotal: 7.18s\tremaining: 3.47s\n",
            "337:\tlearn: 0.3444285\ttotal: 7.2s\tremaining: 3.45s\n",
            "338:\tlearn: 0.3443435\ttotal: 7.22s\tremaining: 3.43s\n",
            "339:\tlearn: 0.3442695\ttotal: 7.24s\tremaining: 3.41s\n",
            "340:\tlearn: 0.3441481\ttotal: 7.26s\tremaining: 3.39s\n",
            "341:\tlearn: 0.3440698\ttotal: 7.29s\tremaining: 3.37s\n",
            "342:\tlearn: 0.3439999\ttotal: 7.3s\tremaining: 3.34s\n",
            "343:\tlearn: 0.3439206\ttotal: 7.33s\tremaining: 3.32s\n",
            "344:\tlearn: 0.3438315\ttotal: 7.34s\tremaining: 3.3s\n",
            "345:\tlearn: 0.3437680\ttotal: 7.37s\tremaining: 3.28s\n",
            "346:\tlearn: 0.3436797\ttotal: 7.39s\tremaining: 3.26s\n",
            "347:\tlearn: 0.3435779\ttotal: 7.41s\tremaining: 3.23s\n",
            "348:\tlearn: 0.3434804\ttotal: 7.42s\tremaining: 3.21s\n",
            "349:\tlearn: 0.3433621\ttotal: 7.45s\tremaining: 3.19s\n",
            "350:\tlearn: 0.3432784\ttotal: 7.47s\tremaining: 3.17s\n",
            "351:\tlearn: 0.3432167\ttotal: 7.49s\tremaining: 3.15s\n",
            "352:\tlearn: 0.3431214\ttotal: 7.51s\tremaining: 3.13s\n",
            "353:\tlearn: 0.3430466\ttotal: 7.53s\tremaining: 3.1s\n",
            "354:\tlearn: 0.3429120\ttotal: 7.55s\tremaining: 3.08s\n",
            "355:\tlearn: 0.3428355\ttotal: 7.57s\tremaining: 3.06s\n",
            "356:\tlearn: 0.3427631\ttotal: 7.59s\tremaining: 3.04s\n",
            "357:\tlearn: 0.3426897\ttotal: 7.61s\tremaining: 3.02s\n",
            "358:\tlearn: 0.3425930\ttotal: 7.63s\tremaining: 3s\n",
            "359:\tlearn: 0.3424993\ttotal: 7.65s\tremaining: 2.98s\n",
            "360:\tlearn: 0.3424114\ttotal: 7.68s\tremaining: 2.96s\n",
            "361:\tlearn: 0.3423312\ttotal: 7.7s\tremaining: 2.93s\n",
            "362:\tlearn: 0.3422621\ttotal: 7.72s\tremaining: 2.91s\n",
            "363:\tlearn: 0.3421634\ttotal: 7.74s\tremaining: 2.89s\n",
            "364:\tlearn: 0.3421133\ttotal: 7.75s\tremaining: 2.87s\n",
            "365:\tlearn: 0.3420565\ttotal: 7.78s\tremaining: 2.85s\n",
            "366:\tlearn: 0.3420001\ttotal: 7.8s\tremaining: 2.83s\n",
            "367:\tlearn: 0.3418947\ttotal: 7.82s\tremaining: 2.81s\n",
            "368:\tlearn: 0.3417805\ttotal: 7.84s\tremaining: 2.78s\n",
            "369:\tlearn: 0.3416653\ttotal: 7.86s\tremaining: 2.76s\n",
            "370:\tlearn: 0.3415892\ttotal: 7.89s\tremaining: 2.74s\n",
            "371:\tlearn: 0.3415384\ttotal: 7.91s\tremaining: 2.72s\n",
            "372:\tlearn: 0.3414256\ttotal: 7.93s\tremaining: 2.7s\n",
            "373:\tlearn: 0.3412963\ttotal: 7.95s\tremaining: 2.68s\n",
            "374:\tlearn: 0.3412323\ttotal: 7.98s\tremaining: 2.66s\n",
            "375:\tlearn: 0.3411443\ttotal: 8s\tremaining: 2.64s\n",
            "376:\tlearn: 0.3410844\ttotal: 8.02s\tremaining: 2.62s\n",
            "377:\tlearn: 0.3409758\ttotal: 8.04s\tremaining: 2.6s\n",
            "378:\tlearn: 0.3408771\ttotal: 8.07s\tremaining: 2.58s\n",
            "379:\tlearn: 0.3407661\ttotal: 8.09s\tremaining: 2.55s\n",
            "380:\tlearn: 0.3406078\ttotal: 8.1s\tremaining: 2.53s\n",
            "381:\tlearn: 0.3405403\ttotal: 8.13s\tremaining: 2.51s\n",
            "382:\tlearn: 0.3403597\ttotal: 8.15s\tremaining: 2.49s\n",
            "383:\tlearn: 0.3402791\ttotal: 8.17s\tremaining: 2.47s\n",
            "384:\tlearn: 0.3402285\ttotal: 8.19s\tremaining: 2.44s\n",
            "385:\tlearn: 0.3401409\ttotal: 8.21s\tremaining: 2.42s\n",
            "386:\tlearn: 0.3400735\ttotal: 8.23s\tremaining: 2.4s\n",
            "387:\tlearn: 0.3400084\ttotal: 8.25s\tremaining: 2.38s\n",
            "388:\tlearn: 0.3399085\ttotal: 8.27s\tremaining: 2.36s\n",
            "389:\tlearn: 0.3398428\ttotal: 8.29s\tremaining: 2.34s\n",
            "390:\tlearn: 0.3397338\ttotal: 8.31s\tremaining: 2.32s\n",
            "391:\tlearn: 0.3396767\ttotal: 8.33s\tremaining: 2.3s\n",
            "392:\tlearn: 0.3396036\ttotal: 8.35s\tremaining: 2.27s\n",
            "393:\tlearn: 0.3395211\ttotal: 8.38s\tremaining: 2.25s\n",
            "394:\tlearn: 0.3394665\ttotal: 8.4s\tremaining: 2.23s\n",
            "395:\tlearn: 0.3393044\ttotal: 8.42s\tremaining: 2.21s\n",
            "396:\tlearn: 0.3392279\ttotal: 8.44s\tremaining: 2.19s\n",
            "397:\tlearn: 0.3391724\ttotal: 8.47s\tremaining: 2.17s\n",
            "398:\tlearn: 0.3391179\ttotal: 8.49s\tremaining: 2.15s\n",
            "399:\tlearn: 0.3390882\ttotal: 8.51s\tremaining: 2.13s\n",
            "400:\tlearn: 0.3390150\ttotal: 8.53s\tremaining: 2.1s\n",
            "401:\tlearn: 0.3389475\ttotal: 8.55s\tremaining: 2.08s\n",
            "402:\tlearn: 0.3388538\ttotal: 8.57s\tremaining: 2.06s\n",
            "403:\tlearn: 0.3387949\ttotal: 8.59s\tremaining: 2.04s\n",
            "404:\tlearn: 0.3387428\ttotal: 8.61s\tremaining: 2.02s\n",
            "405:\tlearn: 0.3386768\ttotal: 8.63s\tremaining: 2s\n",
            "406:\tlearn: 0.3386207\ttotal: 8.65s\tremaining: 1.98s\n",
            "407:\tlearn: 0.3385566\ttotal: 8.67s\tremaining: 1.96s\n",
            "408:\tlearn: 0.3385110\ttotal: 8.7s\tremaining: 1.94s\n",
            "409:\tlearn: 0.3384665\ttotal: 8.72s\tremaining: 1.91s\n",
            "410:\tlearn: 0.3383962\ttotal: 8.74s\tremaining: 1.89s\n",
            "411:\tlearn: 0.3383718\ttotal: 8.76s\tremaining: 1.87s\n",
            "412:\tlearn: 0.3383099\ttotal: 8.78s\tremaining: 1.85s\n",
            "413:\tlearn: 0.3382522\ttotal: 8.8s\tremaining: 1.83s\n",
            "414:\tlearn: 0.3381064\ttotal: 8.82s\tremaining: 1.81s\n",
            "415:\tlearn: 0.3380595\ttotal: 8.85s\tremaining: 1.79s\n",
            "416:\tlearn: 0.3379692\ttotal: 8.87s\tremaining: 1.76s\n",
            "417:\tlearn: 0.3378997\ttotal: 8.9s\tremaining: 1.75s\n",
            "418:\tlearn: 0.3377698\ttotal: 8.93s\tremaining: 1.73s\n",
            "419:\tlearn: 0.3376673\ttotal: 8.95s\tremaining: 1.71s\n",
            "420:\tlearn: 0.3376115\ttotal: 8.97s\tremaining: 1.68s\n",
            "421:\tlearn: 0.3375852\ttotal: 8.99s\tremaining: 1.66s\n",
            "422:\tlearn: 0.3375344\ttotal: 9.01s\tremaining: 1.64s\n",
            "423:\tlearn: 0.3374605\ttotal: 9.04s\tremaining: 1.62s\n",
            "424:\tlearn: 0.3373995\ttotal: 9.06s\tremaining: 1.6s\n",
            "425:\tlearn: 0.3373747\ttotal: 9.08s\tremaining: 1.58s\n",
            "426:\tlearn: 0.3373420\ttotal: 9.1s\tremaining: 1.55s\n",
            "427:\tlearn: 0.3372974\ttotal: 9.12s\tremaining: 1.53s\n",
            "428:\tlearn: 0.3372414\ttotal: 9.14s\tremaining: 1.51s\n",
            "429:\tlearn: 0.3371754\ttotal: 9.16s\tremaining: 1.49s\n",
            "430:\tlearn: 0.3371035\ttotal: 9.18s\tremaining: 1.47s\n",
            "431:\tlearn: 0.3370338\ttotal: 9.2s\tremaining: 1.45s\n",
            "432:\tlearn: 0.3369032\ttotal: 9.22s\tremaining: 1.43s\n",
            "433:\tlearn: 0.3368488\ttotal: 9.24s\tremaining: 1.41s\n",
            "434:\tlearn: 0.3367921\ttotal: 9.27s\tremaining: 1.38s\n",
            "435:\tlearn: 0.3367525\ttotal: 9.28s\tremaining: 1.36s\n",
            "436:\tlearn: 0.3367010\ttotal: 9.31s\tremaining: 1.34s\n",
            "437:\tlearn: 0.3365368\ttotal: 9.33s\tremaining: 1.32s\n",
            "438:\tlearn: 0.3364920\ttotal: 9.35s\tremaining: 1.3s\n",
            "439:\tlearn: 0.3364006\ttotal: 9.37s\tremaining: 1.28s\n",
            "440:\tlearn: 0.3363240\ttotal: 9.39s\tremaining: 1.26s\n",
            "441:\tlearn: 0.3362186\ttotal: 9.42s\tremaining: 1.24s\n",
            "442:\tlearn: 0.3361616\ttotal: 9.44s\tremaining: 1.21s\n",
            "443:\tlearn: 0.3361156\ttotal: 9.46s\tremaining: 1.19s\n",
            "444:\tlearn: 0.3360575\ttotal: 9.48s\tremaining: 1.17s\n",
            "445:\tlearn: 0.3359541\ttotal: 9.5s\tremaining: 1.15s\n",
            "446:\tlearn: 0.3358884\ttotal: 9.52s\tremaining: 1.13s\n",
            "447:\tlearn: 0.3357757\ttotal: 9.55s\tremaining: 1.11s\n",
            "448:\tlearn: 0.3356950\ttotal: 9.57s\tremaining: 1.09s\n",
            "449:\tlearn: 0.3355985\ttotal: 9.59s\tremaining: 1.06s\n",
            "450:\tlearn: 0.3355470\ttotal: 9.61s\tremaining: 1.04s\n",
            "451:\tlearn: 0.3354913\ttotal: 9.63s\tremaining: 1.02s\n",
            "452:\tlearn: 0.3354272\ttotal: 9.65s\tremaining: 1s\n",
            "453:\tlearn: 0.3353650\ttotal: 9.67s\tremaining: 980ms\n",
            "454:\tlearn: 0.3353153\ttotal: 9.69s\tremaining: 959ms\n",
            "455:\tlearn: 0.3352663\ttotal: 9.71s\tremaining: 937ms\n",
            "456:\tlearn: 0.3352314\ttotal: 9.73s\tremaining: 916ms\n",
            "457:\tlearn: 0.3351486\ttotal: 9.76s\tremaining: 895ms\n",
            "458:\tlearn: 0.3350702\ttotal: 9.78s\tremaining: 874ms\n",
            "459:\tlearn: 0.3350245\ttotal: 9.8s\tremaining: 852ms\n",
            "460:\tlearn: 0.3349895\ttotal: 9.83s\tremaining: 831ms\n",
            "461:\tlearn: 0.3348807\ttotal: 9.85s\tremaining: 810ms\n",
            "462:\tlearn: 0.3348023\ttotal: 9.87s\tremaining: 789ms\n",
            "463:\tlearn: 0.3346929\ttotal: 9.9s\tremaining: 768ms\n",
            "464:\tlearn: 0.3346125\ttotal: 9.92s\tremaining: 746ms\n",
            "465:\tlearn: 0.3345673\ttotal: 9.94s\tremaining: 725ms\n",
            "466:\tlearn: 0.3344796\ttotal: 9.96s\tremaining: 703ms\n",
            "467:\tlearn: 0.3344571\ttotal: 9.98s\tremaining: 682ms\n",
            "468:\tlearn: 0.3344072\ttotal: 10s\tremaining: 661ms\n",
            "469:\tlearn: 0.3342880\ttotal: 10s\tremaining: 640ms\n",
            "470:\tlearn: 0.3342520\ttotal: 10s\tremaining: 619ms\n",
            "471:\tlearn: 0.3341901\ttotal: 10.1s\tremaining: 597ms\n",
            "472:\tlearn: 0.3341113\ttotal: 10.1s\tremaining: 576ms\n",
            "473:\tlearn: 0.3340657\ttotal: 10.1s\tremaining: 554ms\n",
            "474:\tlearn: 0.3340042\ttotal: 10.1s\tremaining: 533ms\n",
            "475:\tlearn: 0.3339593\ttotal: 10.2s\tremaining: 512ms\n",
            "476:\tlearn: 0.3339092\ttotal: 10.2s\tremaining: 491ms\n",
            "477:\tlearn: 0.3338655\ttotal: 10.2s\tremaining: 470ms\n",
            "478:\tlearn: 0.3337918\ttotal: 10.2s\tremaining: 448ms\n",
            "479:\tlearn: 0.3336980\ttotal: 10.2s\tremaining: 427ms\n",
            "480:\tlearn: 0.3335942\ttotal: 10.3s\tremaining: 405ms\n",
            "481:\tlearn: 0.3335583\ttotal: 10.3s\tremaining: 384ms\n",
            "482:\tlearn: 0.3335072\ttotal: 10.3s\tremaining: 363ms\n",
            "483:\tlearn: 0.3334421\ttotal: 10.3s\tremaining: 341ms\n",
            "484:\tlearn: 0.3333937\ttotal: 10.3s\tremaining: 320ms\n",
            "485:\tlearn: 0.3333367\ttotal: 10.4s\tremaining: 299ms\n",
            "486:\tlearn: 0.3332527\ttotal: 10.4s\tremaining: 277ms\n",
            "487:\tlearn: 0.3332087\ttotal: 10.4s\tremaining: 256ms\n",
            "488:\tlearn: 0.3331625\ttotal: 10.4s\tremaining: 235ms\n",
            "489:\tlearn: 0.3330806\ttotal: 10.5s\tremaining: 213ms\n",
            "490:\tlearn: 0.3330327\ttotal: 10.5s\tremaining: 192ms\n",
            "491:\tlearn: 0.3329924\ttotal: 10.5s\tremaining: 171ms\n",
            "492:\tlearn: 0.3329633\ttotal: 10.5s\tremaining: 149ms\n",
            "493:\tlearn: 0.3329322\ttotal: 10.5s\tremaining: 128ms\n",
            "494:\tlearn: 0.3328731\ttotal: 10.6s\tremaining: 107ms\n",
            "495:\tlearn: 0.3327304\ttotal: 10.6s\tremaining: 85.3ms\n",
            "496:\tlearn: 0.3325970\ttotal: 10.6s\tremaining: 64ms\n",
            "497:\tlearn: 0.3325584\ttotal: 10.6s\tremaining: 42.7ms\n",
            "498:\tlearn: 0.3324448\ttotal: 10.6s\tremaining: 21.3ms\n",
            "499:\tlearn: 0.3323449\ttotal: 10.7s\tremaining: 0us\n",
            "\n",
            "========================================================\n",
            " Results from Random Search \n",
            "========================================================\n",
            "\n",
            " The best estimator across ALL searched params:\n",
            " <catboost.core.CatBoostClassifier object at 0x7f75bff4c0f0>\n",
            "\n",
            " The best score across ALL searched params:\n",
            " 0.8732558350046948\n",
            "\n",
            " The best parameters across ALL searched params:\n",
            " {'learning_rate': 0.03, 'l2_leaf_reg': 3, 'iterations': 500, 'depth': 5}\n",
            "\n",
            " ========================================================\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VZhv-DmrCS4o",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "14da8ffe-5049-4278-c188-7a14f109ebaf"
      },
      "source": [
        "#using the best params from the randomised search\n",
        "tuned_model_2 = CatBoostClassifier(iterations=500,\n",
        "                                depth=5,\n",
        "                                random_seed=42,\n",
        "                                learning_rate=0.03,\n",
        "                                eval_metric = 'F1',\n",
        "                                l2_leaf_reg= 3,\n",
        "                                leaf_estimation_iterations = 10,\n",
        "                                use_best_model=True)\n",
        "tuned_model_2.fit(x_train, \n",
        "        y_train,\n",
        "        cat_features=cat_features,\n",
        "        eval_set=(x_test, y_test)\n",
        ")\n",
        "\n",
        "y_pred = tuned_model_2.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.8205952\ttest: 0.8201761\tbest: 0.8201761 (0)\ttotal: 24.1ms\tremaining: 12s\n",
            "1:\tlearn: 0.8228772\ttest: 0.8212299\tbest: 0.8212299 (1)\ttotal: 44.3ms\tremaining: 11s\n",
            "2:\tlearn: 0.8282484\ttest: 0.8267131\tbest: 0.8267131 (2)\ttotal: 67.2ms\tremaining: 11.1s\n",
            "3:\tlearn: 0.8232009\ttest: 0.8207577\tbest: 0.8267131 (2)\ttotal: 90ms\tremaining: 11.2s\n",
            "4:\tlearn: 0.8293112\ttest: 0.8284800\tbest: 0.8284800 (4)\ttotal: 110ms\tremaining: 10.8s\n",
            "5:\tlearn: 0.8283240\ttest: 0.8257056\tbest: 0.8284800 (4)\ttotal: 131ms\tremaining: 10.8s\n",
            "6:\tlearn: 0.8298653\ttest: 0.8265436\tbest: 0.8284800 (4)\ttotal: 152ms\tremaining: 10.7s\n",
            "7:\tlearn: 0.8300200\ttest: 0.8271801\tbest: 0.8284800 (4)\ttotal: 173ms\tremaining: 10.6s\n",
            "8:\tlearn: 0.8287748\ttest: 0.8259342\tbest: 0.8284800 (4)\ttotal: 194ms\tremaining: 10.6s\n",
            "9:\tlearn: 0.8300878\ttest: 0.8274104\tbest: 0.8284800 (4)\ttotal: 217ms\tremaining: 10.6s\n",
            "10:\tlearn: 0.8300443\ttest: 0.8278610\tbest: 0.8284800 (4)\ttotal: 238ms\tremaining: 10.6s\n",
            "11:\tlearn: 0.8298000\ttest: 0.8267136\tbest: 0.8284800 (4)\ttotal: 255ms\tremaining: 10.4s\n",
            "12:\tlearn: 0.8291606\ttest: 0.8267009\tbest: 0.8284800 (4)\ttotal: 283ms\tremaining: 10.6s\n",
            "13:\tlearn: 0.8287759\ttest: 0.8279743\tbest: 0.8284800 (4)\ttotal: 304ms\tremaining: 10.5s\n",
            "14:\tlearn: 0.8303203\ttest: 0.8280173\tbest: 0.8284800 (4)\ttotal: 324ms\tremaining: 10.5s\n",
            "15:\tlearn: 0.8295879\ttest: 0.8274087\tbest: 0.8284800 (4)\ttotal: 345ms\tremaining: 10.4s\n",
            "16:\tlearn: 0.8295172\ttest: 0.8279070\tbest: 0.8284800 (4)\ttotal: 366ms\tremaining: 10.4s\n",
            "17:\tlearn: 0.8296487\ttest: 0.8273981\tbest: 0.8284800 (4)\ttotal: 389ms\tremaining: 10.4s\n",
            "18:\tlearn: 0.8297360\ttest: 0.8269785\tbest: 0.8284800 (4)\ttotal: 412ms\tremaining: 10.4s\n",
            "19:\tlearn: 0.8307025\ttest: 0.8276746\tbest: 0.8284800 (4)\ttotal: 435ms\tremaining: 10.4s\n",
            "20:\tlearn: 0.8319159\ttest: 0.8289326\tbest: 0.8289326 (20)\ttotal: 461ms\tremaining: 10.5s\n",
            "21:\tlearn: 0.8344451\ttest: 0.8331460\tbest: 0.8331460 (21)\ttotal: 479ms\tremaining: 10.4s\n",
            "22:\tlearn: 0.8327242\ttest: 0.8306064\tbest: 0.8331460 (21)\ttotal: 503ms\tremaining: 10.4s\n",
            "23:\tlearn: 0.8339089\ttest: 0.8325052\tbest: 0.8331460 (21)\ttotal: 525ms\tremaining: 10.4s\n",
            "24:\tlearn: 0.8347287\ttest: 0.8335745\tbest: 0.8335745 (24)\ttotal: 549ms\tremaining: 10.4s\n",
            "25:\tlearn: 0.8359865\ttest: 0.8351013\tbest: 0.8351013 (25)\ttotal: 571ms\tremaining: 10.4s\n",
            "26:\tlearn: 0.8362905\ttest: 0.8347798\tbest: 0.8351013 (25)\ttotal: 593ms\tremaining: 10.4s\n",
            "27:\tlearn: 0.8367339\ttest: 0.8360656\tbest: 0.8360656 (27)\ttotal: 617ms\tremaining: 10.4s\n",
            "28:\tlearn: 0.8369325\ttest: 0.8354999\tbest: 0.8360656 (27)\ttotal: 640ms\tremaining: 10.4s\n",
            "29:\tlearn: 0.8376357\ttest: 0.8358736\tbest: 0.8360656 (27)\ttotal: 666ms\tremaining: 10.4s\n",
            "30:\tlearn: 0.8392454\ttest: 0.8379421\tbest: 0.8379421 (30)\ttotal: 688ms\tremaining: 10.4s\n",
            "31:\tlearn: 0.8399984\ttest: 0.8385333\tbest: 0.8385333 (31)\ttotal: 707ms\tremaining: 10.3s\n",
            "32:\tlearn: 0.8403165\ttest: 0.8392915\tbest: 0.8392915 (32)\ttotal: 727ms\tremaining: 10.3s\n",
            "33:\tlearn: 0.8402940\ttest: 0.8387305\tbest: 0.8392915 (32)\ttotal: 748ms\tremaining: 10.2s\n",
            "34:\tlearn: 0.8408547\ttest: 0.8397540\tbest: 0.8397540 (34)\ttotal: 768ms\tremaining: 10.2s\n",
            "35:\tlearn: 0.8412808\ttest: 0.8397218\tbest: 0.8397540 (34)\ttotal: 787ms\tremaining: 10.1s\n",
            "36:\tlearn: 0.8413110\ttest: 0.8397736\tbest: 0.8397736 (36)\ttotal: 808ms\tremaining: 10.1s\n",
            "37:\tlearn: 0.8420156\ttest: 0.8411850\tbest: 0.8411850 (37)\ttotal: 832ms\tremaining: 10.1s\n",
            "38:\tlearn: 0.8421822\ttest: 0.8421394\tbest: 0.8421394 (38)\ttotal: 853ms\tremaining: 10.1s\n",
            "39:\tlearn: 0.8422462\ttest: 0.8416451\tbest: 0.8421394 (38)\ttotal: 878ms\tremaining: 10.1s\n",
            "40:\tlearn: 0.8425971\ttest: 0.8417639\tbest: 0.8421394 (38)\ttotal: 901ms\tremaining: 10.1s\n",
            "41:\tlearn: 0.8423705\ttest: 0.8419517\tbest: 0.8421394 (38)\ttotal: 920ms\tremaining: 10s\n",
            "42:\tlearn: 0.8425034\ttest: 0.8423102\tbest: 0.8423102 (42)\ttotal: 944ms\tremaining: 10s\n",
            "43:\tlearn: 0.8458562\ttest: 0.8459807\tbest: 0.8459807 (43)\ttotal: 967ms\tremaining: 10s\n",
            "44:\tlearn: 0.8454139\ttest: 0.8454137\tbest: 0.8459807 (43)\ttotal: 987ms\tremaining: 9.98s\n",
            "45:\tlearn: 0.8490785\ttest: 0.8520823\tbest: 0.8520823 (45)\ttotal: 1.01s\tremaining: 9.94s\n",
            "46:\tlearn: 0.8493721\ttest: 0.8518519\tbest: 0.8520823 (45)\ttotal: 1.03s\tremaining: 9.92s\n",
            "47:\tlearn: 0.8501817\ttest: 0.8506701\tbest: 0.8520823 (45)\ttotal: 1.05s\tremaining: 9.93s\n",
            "48:\tlearn: 0.8502812\ttest: 0.8519936\tbest: 0.8520823 (45)\ttotal: 1.08s\tremaining: 9.96s\n",
            "49:\tlearn: 0.8502574\ttest: 0.8521295\tbest: 0.8521295 (49)\ttotal: 1.1s\tremaining: 9.94s\n",
            "50:\tlearn: 0.8502254\ttest: 0.8528145\tbest: 0.8528145 (50)\ttotal: 1.13s\tremaining: 9.93s\n",
            "51:\tlearn: 0.8504617\ttest: 0.8533973\tbest: 0.8533973 (51)\ttotal: 1.15s\tremaining: 9.89s\n",
            "52:\tlearn: 0.8505214\ttest: 0.8537170\tbest: 0.8537170 (52)\ttotal: 1.17s\tremaining: 9.88s\n",
            "53:\tlearn: 0.8507308\ttest: 0.8536741\tbest: 0.8537170 (52)\ttotal: 1.19s\tremaining: 9.82s\n",
            "54:\tlearn: 0.8508530\ttest: 0.8541733\tbest: 0.8541733 (54)\ttotal: 1.21s\tremaining: 9.82s\n",
            "55:\tlearn: 0.8514535\ttest: 0.8534869\tbest: 0.8541733 (54)\ttotal: 1.24s\tremaining: 9.79s\n",
            "56:\tlearn: 0.8513886\ttest: 0.8540834\tbest: 0.8541733 (54)\ttotal: 1.26s\tremaining: 9.77s\n",
            "57:\tlearn: 0.8510094\ttest: 0.8547665\tbest: 0.8547665 (57)\ttotal: 1.29s\tremaining: 9.83s\n",
            "58:\tlearn: 0.8513411\ttest: 0.8539901\tbest: 0.8547665 (57)\ttotal: 1.31s\tremaining: 9.81s\n",
            "59:\tlearn: 0.8526046\ttest: 0.8551327\tbest: 0.8551327 (59)\ttotal: 1.33s\tremaining: 9.79s\n",
            "60:\tlearn: 0.8519882\ttest: 0.8555876\tbest: 0.8555876 (60)\ttotal: 1.36s\tremaining: 9.77s\n",
            "61:\tlearn: 0.8518533\ttest: 0.8549496\tbest: 0.8555876 (60)\ttotal: 1.38s\tremaining: 9.75s\n",
            "62:\tlearn: 0.8526821\ttest: 0.8551282\tbest: 0.8555876 (60)\ttotal: 1.4s\tremaining: 9.7s\n",
            "63:\tlearn: 0.8535374\ttest: 0.8560886\tbest: 0.8560886 (63)\ttotal: 1.42s\tremaining: 9.64s\n",
            "64:\tlearn: 0.8537201\ttest: 0.8566383\tbest: 0.8566383 (64)\ttotal: 1.44s\tremaining: 9.62s\n",
            "65:\tlearn: 0.8550278\ttest: 0.8586085\tbest: 0.8586085 (65)\ttotal: 1.46s\tremaining: 9.59s\n",
            "66:\tlearn: 0.8548497\ttest: 0.8585648\tbest: 0.8586085 (65)\ttotal: 1.48s\tremaining: 9.54s\n",
            "67:\tlearn: 0.8567650\ttest: 0.8592069\tbest: 0.8592069 (67)\ttotal: 1.5s\tremaining: 9.53s\n",
            "68:\tlearn: 0.8565585\ttest: 0.8590238\tbest: 0.8592069 (67)\ttotal: 1.52s\tremaining: 9.49s\n",
            "69:\tlearn: 0.8569365\ttest: 0.8585194\tbest: 0.8592069 (67)\ttotal: 1.54s\tremaining: 9.47s\n",
            "70:\tlearn: 0.8578068\ttest: 0.8609909\tbest: 0.8609909 (70)\ttotal: 1.57s\tremaining: 9.47s\n",
            "71:\tlearn: 0.8582428\ttest: 0.8610844\tbest: 0.8610844 (71)\ttotal: 1.59s\tremaining: 9.45s\n",
            "72:\tlearn: 0.8589065\ttest: 0.8624619\tbest: 0.8624619 (72)\ttotal: 1.61s\tremaining: 9.43s\n",
            "73:\tlearn: 0.8586434\ttest: 0.8620966\tbest: 0.8624619 (72)\ttotal: 1.63s\tremaining: 9.41s\n",
            "74:\tlearn: 0.8587367\ttest: 0.8611379\tbest: 0.8624619 (72)\ttotal: 1.66s\tremaining: 9.39s\n",
            "75:\tlearn: 0.8591719\ttest: 0.8606781\tbest: 0.8624619 (72)\ttotal: 1.68s\tremaining: 9.34s\n",
            "76:\tlearn: 0.8590820\ttest: 0.8600354\tbest: 0.8624619 (72)\ttotal: 1.7s\tremaining: 9.32s\n",
            "77:\tlearn: 0.8604044\ttest: 0.8611424\tbest: 0.8624619 (72)\ttotal: 1.73s\tremaining: 9.35s\n",
            "78:\tlearn: 0.8598626\ttest: 0.8618305\tbest: 0.8624619 (72)\ttotal: 1.75s\tremaining: 9.32s\n",
            "79:\tlearn: 0.8607147\ttest: 0.8617860\tbest: 0.8624619 (72)\ttotal: 1.77s\tremaining: 9.3s\n",
            "80:\tlearn: 0.8608349\ttest: 0.8607310\tbest: 0.8624619 (72)\ttotal: 1.79s\tremaining: 9.26s\n",
            "81:\tlearn: 0.8609010\ttest: 0.8616970\tbest: 0.8624619 (72)\ttotal: 1.81s\tremaining: 9.24s\n",
            "82:\tlearn: 0.8623905\ttest: 0.8624739\tbest: 0.8624739 (82)\ttotal: 1.83s\tremaining: 9.22s\n",
            "83:\tlearn: 0.8627136\ttest: 0.8627956\tbest: 0.8627956 (83)\ttotal: 1.85s\tremaining: 9.18s\n",
            "84:\tlearn: 0.8617415\ttest: 0.8621134\tbest: 0.8627956 (83)\ttotal: 1.88s\tremaining: 9.15s\n",
            "85:\tlearn: 0.8619802\ttest: 0.8623352\tbest: 0.8627956 (83)\ttotal: 1.9s\tremaining: 9.13s\n",
            "86:\tlearn: 0.8628035\ttest: 0.8628525\tbest: 0.8628525 (86)\ttotal: 1.91s\tremaining: 9.09s\n",
            "87:\tlearn: 0.8634847\ttest: 0.8620135\tbest: 0.8628525 (86)\ttotal: 1.94s\tremaining: 9.07s\n",
            "88:\tlearn: 0.8633233\ttest: 0.8623972\tbest: 0.8628525 (86)\ttotal: 1.96s\tremaining: 9.03s\n",
            "89:\tlearn: 0.8635394\ttest: 0.8632768\tbest: 0.8632768 (89)\ttotal: 1.98s\tremaining: 9.02s\n",
            "90:\tlearn: 0.8635979\ttest: 0.8628590\tbest: 0.8632768 (89)\ttotal: 2s\tremaining: 9s\n",
            "91:\tlearn: 0.8641508\ttest: 0.8631375\tbest: 0.8632768 (89)\ttotal: 2.02s\tremaining: 8.96s\n",
            "92:\tlearn: 0.8640503\ttest: 0.8625424\tbest: 0.8632768 (89)\ttotal: 2.04s\tremaining: 8.94s\n",
            "93:\tlearn: 0.8640026\ttest: 0.8636437\tbest: 0.8636437 (93)\ttotal: 2.06s\tremaining: 8.92s\n",
            "94:\tlearn: 0.8642204\ttest: 0.8635484\tbest: 0.8636437 (93)\ttotal: 2.09s\tremaining: 8.9s\n",
            "95:\tlearn: 0.8647016\ttest: 0.8635484\tbest: 0.8636437 (93)\ttotal: 2.11s\tremaining: 8.87s\n",
            "96:\tlearn: 0.8649607\ttest: 0.8625363\tbest: 0.8636437 (93)\ttotal: 2.13s\tremaining: 8.85s\n",
            "97:\tlearn: 0.8652762\ttest: 0.8632630\tbest: 0.8636437 (93)\ttotal: 2.16s\tremaining: 8.86s\n",
            "98:\tlearn: 0.8649063\ttest: 0.8629982\tbest: 0.8636437 (93)\ttotal: 2.18s\tremaining: 8.84s\n",
            "99:\tlearn: 0.8649346\ttest: 0.8634162\tbest: 0.8636437 (93)\ttotal: 2.21s\tremaining: 8.82s\n",
            "100:\tlearn: 0.8657691\ttest: 0.8629032\tbest: 0.8636437 (93)\ttotal: 2.23s\tremaining: 8.8s\n",
            "101:\tlearn: 0.8661989\ttest: 0.8633140\tbest: 0.8636437 (93)\ttotal: 2.25s\tremaining: 8.78s\n",
            "102:\tlearn: 0.8662636\ttest: 0.8639149\tbest: 0.8639149 (102)\ttotal: 2.28s\tremaining: 8.8s\n",
            "103:\tlearn: 0.8664219\ttest: 0.8637317\tbest: 0.8639149 (102)\ttotal: 2.3s\tremaining: 8.77s\n",
            "104:\tlearn: 0.8668173\ttest: 0.8645245\tbest: 0.8645245 (104)\ttotal: 2.32s\tremaining: 8.74s\n",
            "105:\tlearn: 0.8664190\ttest: 0.8644807\tbest: 0.8645245 (104)\ttotal: 2.35s\tremaining: 8.72s\n",
            "106:\tlearn: 0.8669223\ttest: 0.8644724\tbest: 0.8645245 (104)\ttotal: 2.37s\tremaining: 8.7s\n",
            "107:\tlearn: 0.8667636\ttest: 0.8644724\tbest: 0.8645245 (104)\ttotal: 2.39s\tremaining: 8.67s\n",
            "108:\tlearn: 0.8672316\ttest: 0.8643330\tbest: 0.8645245 (104)\ttotal: 2.42s\tremaining: 8.66s\n",
            "109:\tlearn: 0.8672295\ttest: 0.8634603\tbest: 0.8645245 (104)\ttotal: 2.44s\tremaining: 8.64s\n",
            "110:\tlearn: 0.8671137\ttest: 0.8637831\tbest: 0.8645245 (104)\ttotal: 2.46s\tremaining: 8.62s\n",
            "111:\tlearn: 0.8674777\ttest: 0.8646556\tbest: 0.8646556 (111)\ttotal: 2.48s\tremaining: 8.59s\n",
            "112:\tlearn: 0.8671114\ttest: 0.8645682\tbest: 0.8646556 (111)\ttotal: 2.5s\tremaining: 8.57s\n",
            "113:\tlearn: 0.8671894\ttest: 0.8634603\tbest: 0.8646556 (111)\ttotal: 2.52s\tremaining: 8.54s\n",
            "114:\tlearn: 0.8673589\ttest: 0.8639664\tbest: 0.8646556 (111)\ttotal: 2.54s\tremaining: 8.52s\n",
            "115:\tlearn: 0.8671922\ttest: 0.8634162\tbest: 0.8646556 (111)\ttotal: 2.56s\tremaining: 8.49s\n",
            "116:\tlearn: 0.8672946\ttest: 0.8638862\tbest: 0.8646556 (111)\ttotal: 2.59s\tremaining: 8.47s\n",
            "117:\tlearn: 0.8672087\ttest: 0.8640698\tbest: 0.8646556 (111)\ttotal: 2.61s\tremaining: 8.45s\n",
            "118:\tlearn: 0.8672194\ttest: 0.8644452\tbest: 0.8646556 (111)\ttotal: 2.63s\tremaining: 8.44s\n",
            "119:\tlearn: 0.8674387\ttest: 0.8646811\tbest: 0.8646811 (119)\ttotal: 2.65s\tremaining: 8.4s\n",
            "120:\tlearn: 0.8675684\ttest: 0.8647249\tbest: 0.8647249 (120)\ttotal: 2.68s\tremaining: 8.39s\n",
            "121:\tlearn: 0.8683816\ttest: 0.8644013\tbest: 0.8647249 (120)\ttotal: 2.7s\tremaining: 8.36s\n",
            "122:\tlearn: 0.8684200\ttest: 0.8643574\tbest: 0.8647249 (120)\ttotal: 2.72s\tremaining: 8.33s\n",
            "123:\tlearn: 0.8680331\ttest: 0.8641216\tbest: 0.8647249 (120)\ttotal: 2.74s\tremaining: 8.31s\n",
            "124:\tlearn: 0.8681982\ttest: 0.8654687\tbest: 0.8654687 (124)\ttotal: 2.76s\tremaining: 8.29s\n",
            "125:\tlearn: 0.8685181\ttest: 0.8644534\tbest: 0.8654687 (124)\ttotal: 2.79s\tremaining: 8.27s\n",
            "126:\tlearn: 0.8687082\ttest: 0.8645935\tbest: 0.8654687 (124)\ttotal: 2.81s\tremaining: 8.27s\n",
            "127:\tlearn: 0.8684477\ttest: 0.8644534\tbest: 0.8654687 (124)\ttotal: 2.84s\tremaining: 8.25s\n",
            "128:\tlearn: 0.8681435\ttest: 0.8650138\tbest: 0.8654687 (124)\ttotal: 2.86s\tremaining: 8.23s\n",
            "129:\tlearn: 0.8677837\ttest: 0.8649700\tbest: 0.8654687 (124)\ttotal: 2.88s\tremaining: 8.19s\n",
            "130:\tlearn: 0.8683505\ttest: 0.8653909\tbest: 0.8654687 (124)\ttotal: 2.9s\tremaining: 8.16s\n",
            "131:\tlearn: 0.8683291\ttest: 0.8649700\tbest: 0.8654687 (124)\ttotal: 2.92s\tremaining: 8.14s\n",
            "132:\tlearn: 0.8684456\ttest: 0.8646458\tbest: 0.8654687 (124)\ttotal: 2.94s\tremaining: 8.13s\n",
            "133:\tlearn: 0.8683002\ttest: 0.8654876\tbest: 0.8654876 (133)\ttotal: 2.97s\tremaining: 8.11s\n",
            "134:\tlearn: 0.8687033\ttest: 0.8654781\tbest: 0.8654876 (133)\ttotal: 2.99s\tremaining: 8.07s\n",
            "135:\tlearn: 0.8690496\ttest: 0.8652505\tbest: 0.8654876 (133)\ttotal: 3.02s\tremaining: 8.08s\n",
            "136:\tlearn: 0.8685130\ttest: 0.8648298\tbest: 0.8654876 (133)\ttotal: 3.04s\tremaining: 8.06s\n",
            "137:\tlearn: 0.8691057\ttest: 0.8653035\tbest: 0.8654876 (133)\ttotal: 3.06s\tremaining: 8.04s\n",
            "138:\tlearn: 0.8688938\ttest: 0.8654439\tbest: 0.8654876 (133)\ttotal: 3.09s\tremaining: 8.02s\n",
            "139:\tlearn: 0.8689997\ttest: 0.8654439\tbest: 0.8654876 (133)\ttotal: 3.11s\tremaining: 8s\n",
            "140:\tlearn: 0.8693143\ttest: 0.8652597\tbest: 0.8654876 (133)\ttotal: 3.13s\tremaining: 7.97s\n",
            "141:\tlearn: 0.8693143\ttest: 0.8652597\tbest: 0.8654876 (133)\ttotal: 3.15s\tremaining: 7.95s\n",
            "142:\tlearn: 0.8690098\ttest: 0.8648912\tbest: 0.8654876 (133)\ttotal: 3.17s\tremaining: 7.93s\n",
            "143:\tlearn: 0.8691300\ttest: 0.8654002\tbest: 0.8654876 (133)\ttotal: 3.19s\tremaining: 7.89s\n",
            "144:\tlearn: 0.8693600\ttest: 0.8654002\tbest: 0.8654876 (133)\ttotal: 3.22s\tremaining: 7.89s\n",
            "145:\tlearn: 0.8694201\ttest: 0.8658220\tbest: 0.8658220 (145)\ttotal: 3.25s\tremaining: 7.87s\n",
            "146:\tlearn: 0.8695935\ttest: 0.8653128\tbest: 0.8658220 (145)\ttotal: 3.28s\tremaining: 7.87s\n",
            "147:\tlearn: 0.8698377\ttest: 0.8652160\tbest: 0.8658220 (145)\ttotal: 3.3s\tremaining: 7.84s\n",
            "148:\tlearn: 0.8696147\ttest: 0.8652597\tbest: 0.8658220 (145)\ttotal: 3.32s\tremaining: 7.81s\n",
            "149:\tlearn: 0.8697067\ttest: 0.8653565\tbest: 0.8658220 (145)\ttotal: 3.34s\tremaining: 7.78s\n",
            "150:\tlearn: 0.8699190\ttest: 0.8651193\tbest: 0.8658220 (145)\ttotal: 3.36s\tremaining: 7.77s\n",
            "151:\tlearn: 0.8700533\ttest: 0.8654439\tbest: 0.8658220 (145)\ttotal: 3.38s\tremaining: 7.75s\n",
            "152:\tlearn: 0.8699333\ttest: 0.8655408\tbest: 0.8658220 (145)\ttotal: 3.41s\tremaining: 7.72s\n",
            "153:\tlearn: 0.8701737\ttest: 0.8658220\tbest: 0.8658220 (145)\ttotal: 3.43s\tremaining: 7.71s\n",
            "154:\tlearn: 0.8700537\ttest: 0.8661033\tbest: 0.8661033 (154)\ttotal: 3.45s\tremaining: 7.68s\n",
            "155:\tlearn: 0.8701246\ttest: 0.8656911\tbest: 0.8661033 (154)\ttotal: 3.47s\tremaining: 7.66s\n",
            "156:\tlearn: 0.8702271\ttest: 0.8659626\tbest: 0.8661033 (154)\ttotal: 3.49s\tremaining: 7.63s\n",
            "157:\tlearn: 0.8698167\ttest: 0.8657882\tbest: 0.8661033 (154)\ttotal: 3.52s\tremaining: 7.62s\n",
            "158:\tlearn: 0.8697210\ttest: 0.8654628\tbest: 0.8661033 (154)\ttotal: 3.54s\tremaining: 7.6s\n",
            "159:\tlearn: 0.8697140\ttest: 0.8657445\tbest: 0.8661033 (154)\ttotal: 3.56s\tremaining: 7.57s\n",
            "160:\tlearn: 0.8697282\ttest: 0.8660700\tbest: 0.8661033 (154)\ttotal: 3.58s\tremaining: 7.54s\n",
            "161:\tlearn: 0.8696609\ttest: 0.8659827\tbest: 0.8661033 (154)\ttotal: 3.61s\tremaining: 7.53s\n",
            "162:\tlearn: 0.8698345\ttest: 0.8659827\tbest: 0.8661033 (154)\ttotal: 3.63s\tremaining: 7.51s\n",
            "163:\tlearn: 0.8695794\ttest: 0.8656133\tbest: 0.8661033 (154)\ttotal: 3.66s\tremaining: 7.49s\n",
            "164:\tlearn: 0.8697601\ttest: 0.8659391\tbest: 0.8661033 (154)\ttotal: 3.68s\tremaining: 7.47s\n",
            "165:\tlearn: 0.8698203\ttest: 0.8662649\tbest: 0.8662649 (165)\ttotal: 3.7s\tremaining: 7.45s\n",
            "166:\tlearn: 0.8696822\ttest: 0.8664495\tbest: 0.8664495 (166)\ttotal: 3.72s\tremaining: 7.42s\n",
            "167:\tlearn: 0.8700542\ttest: 0.8661238\tbest: 0.8664495 (166)\ttotal: 3.75s\tremaining: 7.4s\n",
            "168:\tlearn: 0.8703907\ttest: 0.8664495\tbest: 0.8664495 (166)\ttotal: 3.77s\tremaining: 7.38s\n",
            "169:\tlearn: 0.8702421\ttest: 0.8660802\tbest: 0.8664495 (166)\ttotal: 3.79s\tremaining: 7.35s\n",
            "170:\tlearn: 0.8701076\ttest: 0.8662213\tbest: 0.8664495 (166)\ttotal: 3.81s\tremaining: 7.33s\n",
            "171:\tlearn: 0.8702103\ttest: 0.8662213\tbest: 0.8664495 (166)\ttotal: 3.83s\tremaining: 7.31s\n",
            "172:\tlearn: 0.8705364\ttest: 0.8666884\tbest: 0.8666884 (172)\ttotal: 3.86s\tremaining: 7.29s\n",
            "173:\tlearn: 0.8702919\ttest: 0.8668297\tbest: 0.8668297 (173)\ttotal: 3.88s\tremaining: 7.26s\n",
            "174:\tlearn: 0.8703840\ttest: 0.8662213\tbest: 0.8668297 (173)\ttotal: 3.9s\tremaining: 7.24s\n",
            "175:\tlearn: 0.8700049\ttest: 0.8664060\tbest: 0.8668297 (173)\ttotal: 3.92s\tremaining: 7.21s\n",
            "176:\tlearn: 0.8701680\ttest: 0.8671010\tbest: 0.8671010 (176)\ttotal: 3.94s\tremaining: 7.19s\n",
            "177:\tlearn: 0.8699519\ttest: 0.8662213\tbest: 0.8671010 (176)\ttotal: 3.96s\tremaining: 7.17s\n",
            "178:\tlearn: 0.8700408\ttest: 0.8662753\tbest: 0.8671010 (176)\ttotal: 3.98s\tremaining: 7.14s\n",
            "179:\tlearn: 0.8704278\ttest: 0.8665472\tbest: 0.8671010 (176)\ttotal: 4s\tremaining: 7.12s\n",
            "180:\tlearn: 0.8707716\ttest: 0.8665472\tbest: 0.8671010 (176)\ttotal: 4.03s\tremaining: 7.09s\n",
            "181:\tlearn: 0.8709204\ttest: 0.8662213\tbest: 0.8671010 (176)\ttotal: 4.04s\tremaining: 7.07s\n",
            "182:\tlearn: 0.8709849\ttest: 0.8661777\tbest: 0.8671010 (176)\ttotal: 4.07s\tremaining: 7.04s\n",
            "183:\tlearn: 0.8710665\ttest: 0.8664601\tbest: 0.8671010 (176)\ttotal: 4.09s\tremaining: 7.02s\n",
            "184:\tlearn: 0.8709282\ttest: 0.8663730\tbest: 0.8671010 (176)\ttotal: 4.11s\tremaining: 6.99s\n",
            "185:\tlearn: 0.8707583\ttest: 0.8667538\tbest: 0.8671010 (176)\ttotal: 4.13s\tremaining: 6.97s\n",
            "186:\tlearn: 0.8708611\ttest: 0.8670803\tbest: 0.8671010 (176)\ttotal: 4.15s\tremaining: 6.95s\n",
            "187:\tlearn: 0.8709967\ttest: 0.8656327\tbest: 0.8671010 (176)\ttotal: 4.18s\tremaining: 6.93s\n",
            "188:\tlearn: 0.8706382\ttest: 0.8662420\tbest: 0.8671010 (176)\ttotal: 4.2s\tremaining: 6.91s\n",
            "189:\tlearn: 0.8711957\ttest: 0.8661006\tbest: 0.8671010 (176)\ttotal: 4.22s\tremaining: 6.89s\n",
            "190:\tlearn: 0.8711205\ttest: 0.8653501\tbest: 0.8671010 (176)\ttotal: 4.25s\tremaining: 6.87s\n",
            "191:\tlearn: 0.8712062\ttest: 0.8651208\tbest: 0.8671010 (176)\ttotal: 4.28s\tremaining: 6.86s\n",
            "192:\tlearn: 0.8713720\ttest: 0.8649796\tbest: 0.8671010 (176)\ttotal: 4.3s\tremaining: 6.84s\n",
            "193:\tlearn: 0.8713673\ttest: 0.8648914\tbest: 0.8671010 (176)\ttotal: 4.33s\tremaining: 6.82s\n",
            "194:\tlearn: 0.8715308\ttest: 0.8655009\tbest: 0.8671010 (176)\ttotal: 4.35s\tremaining: 6.8s\n",
            "195:\tlearn: 0.8710838\ttest: 0.8655984\tbest: 0.8671010 (176)\ttotal: 4.37s\tremaining: 6.78s\n",
            "196:\tlearn: 0.8711380\ttest: 0.8654569\tbest: 0.8671010 (176)\ttotal: 4.39s\tremaining: 6.76s\n",
            "197:\tlearn: 0.8712304\ttest: 0.8655009\tbest: 0.8671010 (176)\ttotal: 4.41s\tremaining: 6.73s\n",
            "198:\tlearn: 0.8715180\ttest: 0.8650859\tbest: 0.8671010 (176)\ttotal: 4.44s\tremaining: 6.71s\n",
            "199:\tlearn: 0.8715788\ttest: 0.8647145\tbest: 0.8671010 (176)\ttotal: 4.46s\tremaining: 6.69s\n",
            "200:\tlearn: 0.8714151\ttest: 0.8650417\tbest: 0.8671010 (176)\ttotal: 4.48s\tremaining: 6.67s\n",
            "201:\tlearn: 0.8713438\ttest: 0.8650417\tbest: 0.8671010 (176)\ttotal: 4.51s\tremaining: 6.65s\n",
            "202:\tlearn: 0.8715431\ttest: 0.8648118\tbest: 0.8671010 (176)\ttotal: 4.53s\tremaining: 6.63s\n",
            "203:\tlearn: 0.8716249\ttest: 0.8653248\tbest: 0.8671010 (176)\ttotal: 4.55s\tremaining: 6.61s\n",
            "204:\tlearn: 0.8717466\ttest: 0.8654664\tbest: 0.8671010 (176)\ttotal: 4.57s\tremaining: 6.58s\n",
            "205:\tlearn: 0.8717823\ttest: 0.8654664\tbest: 0.8671010 (176)\ttotal: 4.59s\tremaining: 6.56s\n",
            "206:\tlearn: 0.8719964\ttest: 0.8656081\tbest: 0.8671010 (176)\ttotal: 4.62s\tremaining: 6.53s\n",
            "207:\tlearn: 0.8721497\ttest: 0.8650950\tbest: 0.8671010 (176)\ttotal: 4.64s\tremaining: 6.51s\n",
            "208:\tlearn: 0.8720007\ttest: 0.8656619\tbest: 0.8671010 (176)\ttotal: 4.66s\tremaining: 6.49s\n",
            "209:\tlearn: 0.8722297\ttest: 0.8653342\tbest: 0.8671010 (176)\ttotal: 4.69s\tremaining: 6.47s\n",
            "210:\tlearn: 0.8719839\ttest: 0.8657597\tbest: 0.8671010 (176)\ttotal: 4.71s\tremaining: 6.45s\n",
            "211:\tlearn: 0.8722550\ttest: 0.8654319\tbest: 0.8671010 (176)\ttotal: 4.73s\tremaining: 6.43s\n",
            "212:\tlearn: 0.8720030\ttest: 0.8659997\tbest: 0.8671010 (176)\ttotal: 4.75s\tremaining: 6.4s\n",
            "213:\tlearn: 0.8720954\ttest: 0.8657157\tbest: 0.8671010 (176)\ttotal: 4.77s\tremaining: 6.38s\n",
            "214:\tlearn: 0.8721354\ttest: 0.8660978\tbest: 0.8671010 (176)\ttotal: 4.79s\tremaining: 6.36s\n",
            "215:\tlearn: 0.8720725\ttest: 0.8658136\tbest: 0.8671010 (176)\ttotal: 4.81s\tremaining: 6.33s\n",
            "216:\tlearn: 0.8722489\ttest: 0.8664698\tbest: 0.8671010 (176)\ttotal: 4.83s\tremaining: 6.3s\n",
            "217:\tlearn: 0.8721188\ttest: 0.8659997\tbest: 0.8671010 (176)\ttotal: 4.86s\tremaining: 6.29s\n",
            "218:\tlearn: 0.8720325\ttest: 0.8663277\tbest: 0.8671010 (176)\ttotal: 4.88s\tremaining: 6.26s\n",
            "219:\tlearn: 0.8720305\ttest: 0.8660978\tbest: 0.8671010 (176)\ttotal: 4.91s\tremaining: 6.25s\n",
            "220:\tlearn: 0.8721996\ttest: 0.8663488\tbest: 0.8671010 (176)\ttotal: 4.93s\tremaining: 6.22s\n",
            "221:\tlearn: 0.8721255\ttest: 0.8665682\tbest: 0.8671010 (176)\ttotal: 4.95s\tremaining: 6.2s\n",
            "222:\tlearn: 0.8722181\ttest: 0.8662399\tbest: 0.8671010 (176)\ttotal: 4.97s\tremaining: 6.17s\n",
            "223:\tlearn: 0.8721866\ttest: 0.8664805\tbest: 0.8671010 (176)\ttotal: 4.99s\tremaining: 6.15s\n",
            "224:\tlearn: 0.8723369\ttest: 0.8671490\tbest: 0.8671490 (224)\ttotal: 5.01s\tremaining: 6.12s\n",
            "225:\tlearn: 0.8725257\ttest: 0.8664805\tbest: 0.8671490 (224)\ttotal: 5.03s\tremaining: 6.1s\n",
            "226:\tlearn: 0.8728155\ttest: 0.8666776\tbest: 0.8671490 (224)\ttotal: 5.05s\tremaining: 6.07s\n",
            "227:\tlearn: 0.8728814\ttest: 0.8668201\tbest: 0.8671490 (224)\ttotal: 5.07s\tremaining: 6.04s\n",
            "228:\tlearn: 0.8727183\ttest: 0.8668425\tbest: 0.8671490 (224)\ttotal: 5.09s\tremaining: 6.02s\n",
            "229:\tlearn: 0.8726973\ttest: 0.8666117\tbest: 0.8671490 (224)\ttotal: 5.1s\tremaining: 5.99s\n",
            "230:\tlearn: 0.8730316\ttest: 0.8665568\tbest: 0.8671490 (224)\ttotal: 5.13s\tremaining: 5.98s\n",
            "231:\tlearn: 0.8731593\ttest: 0.8666557\tbest: 0.8671490 (224)\ttotal: 5.15s\tremaining: 5.95s\n",
            "232:\tlearn: 0.8731593\ttest: 0.8668425\tbest: 0.8671490 (224)\ttotal: 5.17s\tremaining: 5.93s\n",
            "233:\tlearn: 0.8729327\ttest: 0.8667546\tbest: 0.8671490 (224)\ttotal: 5.19s\tremaining: 5.9s\n",
            "234:\tlearn: 0.8728698\ttest: 0.8661053\tbest: 0.8671490 (224)\ttotal: 5.21s\tremaining: 5.88s\n",
            "235:\tlearn: 0.8727513\ttest: 0.8669089\tbest: 0.8671490 (224)\ttotal: 5.23s\tremaining: 5.85s\n",
            "236:\tlearn: 0.8726222\ttest: 0.8669089\tbest: 0.8671490 (224)\ttotal: 5.26s\tremaining: 5.83s\n",
            "237:\tlearn: 0.8726012\ttest: 0.8666667\tbest: 0.8671490 (224)\ttotal: 5.29s\tremaining: 5.82s\n",
            "238:\tlearn: 0.8727183\ttest: 0.8673385\tbest: 0.8673385 (238)\ttotal: 5.31s\tremaining: 5.8s\n",
            "239:\tlearn: 0.8726762\ttest: 0.8668649\tbest: 0.8673385 (238)\ttotal: 5.34s\tremaining: 5.78s\n",
            "240:\tlearn: 0.8728775\ttest: 0.8676252\tbest: 0.8676252 (240)\ttotal: 5.36s\tremaining: 5.76s\n",
            "241:\tlearn: 0.8727798\ttest: 0.8659624\tbest: 0.8676252 (240)\ttotal: 5.38s\tremaining: 5.74s\n",
            "242:\tlearn: 0.8729510\ttest: 0.8662819\tbest: 0.8676252 (240)\ttotal: 5.4s\tremaining: 5.72s\n",
            "243:\tlearn: 0.8731266\ttest: 0.8666117\tbest: 0.8676252 (240)\ttotal: 5.43s\tremaining: 5.69s\n",
            "244:\tlearn: 0.8730106\ttest: 0.8674897\tbest: 0.8676252 (240)\ttotal: 5.45s\tremaining: 5.67s\n",
            "245:\tlearn: 0.8728321\ttest: 0.8669627\tbest: 0.8676252 (240)\ttotal: 5.47s\tremaining: 5.65s\n",
            "246:\tlearn: 0.8732371\ttest: 0.8667874\tbest: 0.8676252 (240)\ttotal: 5.49s\tremaining: 5.63s\n",
            "247:\tlearn: 0.8730277\ttest: 0.8670844\tbest: 0.8676252 (240)\ttotal: 5.51s\tremaining: 5.6s\n",
            "248:\tlearn: 0.8733185\ttest: 0.8665129\tbest: 0.8676252 (240)\ttotal: 5.54s\tremaining: 5.58s\n",
            "249:\tlearn: 0.8731953\ttest: 0.8674024\tbest: 0.8676252 (240)\ttotal: 5.56s\tremaining: 5.56s\n",
            "250:\tlearn: 0.8731036\ttest: 0.8679183\tbest: 0.8679183 (250)\ttotal: 5.58s\tremaining: 5.54s\n",
            "251:\tlearn: 0.8737151\ttest: 0.8670406\tbest: 0.8679183 (250)\ttotal: 5.61s\tremaining: 5.52s\n",
            "252:\tlearn: 0.8735964\ttest: 0.8670406\tbest: 0.8679183 (250)\ttotal: 5.63s\tremaining: 5.5s\n",
            "253:\tlearn: 0.8735367\ttest: 0.8669189\tbest: 0.8679183 (250)\ttotal: 5.66s\tremaining: 5.48s\n",
            "254:\tlearn: 0.8735367\ttest: 0.8667325\tbest: 0.8679183 (250)\ttotal: 5.68s\tremaining: 5.46s\n",
            "255:\tlearn: 0.8734590\ttest: 0.8666886\tbest: 0.8679183 (250)\ttotal: 5.7s\tremaining: 5.43s\n",
            "256:\tlearn: 0.8735727\ttest: 0.8673906\tbest: 0.8679183 (250)\ttotal: 5.72s\tremaining: 5.41s\n",
            "257:\tlearn: 0.8736590\ttest: 0.8682043\tbest: 0.8682043 (257)\ttotal: 5.75s\tremaining: 5.39s\n",
            "258:\tlearn: 0.8735623\ttest: 0.8670178\tbest: 0.8682043 (257)\ttotal: 5.77s\tremaining: 5.37s\n",
            "259:\tlearn: 0.8733473\ttest: 0.8670615\tbest: 0.8682043 (257)\ttotal: 5.79s\tremaining: 5.35s\n",
            "260:\tlearn: 0.8738416\ttest: 0.8660744\tbest: 0.8682043 (257)\ttotal: 5.82s\tremaining: 5.33s\n",
            "261:\tlearn: 0.8740167\ttest: 0.8663049\tbest: 0.8682043 (257)\ttotal: 5.84s\tremaining: 5.31s\n",
            "262:\tlearn: 0.8738304\ttest: 0.8671053\tbest: 0.8682043 (257)\ttotal: 5.86s\tremaining: 5.28s\n",
            "263:\tlearn: 0.8737632\ttest: 0.8674897\tbest: 0.8682043 (257)\ttotal: 5.88s\tremaining: 5.26s\n",
            "264:\tlearn: 0.8738817\ttest: 0.8671605\tbest: 0.8682043 (257)\ttotal: 5.91s\tremaining: 5.24s\n",
            "265:\tlearn: 0.8739066\ttest: 0.8672596\tbest: 0.8682043 (257)\ttotal: 5.93s\tremaining: 5.21s\n",
            "266:\tlearn: 0.8741487\ttest: 0.8677877\tbest: 0.8682043 (257)\ttotal: 5.95s\tremaining: 5.19s\n",
            "267:\tlearn: 0.8739044\ttest: 0.8677126\tbest: 0.8682043 (257)\ttotal: 5.97s\tremaining: 5.17s\n",
            "268:\tlearn: 0.8739614\ttest: 0.8684298\tbest: 0.8684298 (268)\ttotal: 6s\tremaining: 5.15s\n",
            "269:\tlearn: 0.8739100\ttest: 0.8677563\tbest: 0.8684298 (268)\ttotal: 6.01s\tremaining: 5.12s\n",
            "270:\tlearn: 0.8738113\ttest: 0.8682427\tbest: 0.8684298 (268)\ttotal: 6.04s\tremaining: 5.1s\n",
            "271:\tlearn: 0.8739148\ttest: 0.8685601\tbest: 0.8685601 (271)\ttotal: 6.06s\tremaining: 5.08s\n",
            "272:\tlearn: 0.8742663\ttest: 0.8685601\tbest: 0.8685601 (271)\ttotal: 6.08s\tremaining: 5.05s\n",
            "273:\tlearn: 0.8741629\ttest: 0.8678560\tbest: 0.8685601 (271)\ttotal: 6.1s\tremaining: 5.03s\n",
            "274:\tlearn: 0.8737960\ttest: 0.8678560\tbest: 0.8685601 (271)\ttotal: 6.13s\tremaining: 5.01s\n",
            "275:\tlearn: 0.8738731\ttest: 0.8682862\tbest: 0.8685601 (271)\ttotal: 6.15s\tremaining: 4.99s\n",
            "276:\tlearn: 0.8739607\ttest: 0.8681991\tbest: 0.8685601 (271)\ttotal: 6.18s\tremaining: 4.97s\n",
            "277:\tlearn: 0.8740894\ttest: 0.8684123\tbest: 0.8685601 (271)\ttotal: 6.2s\tremaining: 4.95s\n",
            "278:\tlearn: 0.8741464\ttest: 0.8677932\tbest: 0.8685601 (271)\ttotal: 6.22s\tremaining: 4.93s\n",
            "279:\tlearn: 0.8741673\ttest: 0.8683121\tbest: 0.8685601 (271)\ttotal: 6.25s\tremaining: 4.91s\n",
            "280:\tlearn: 0.8741464\ttest: 0.8683557\tbest: 0.8685601 (271)\ttotal: 6.27s\tremaining: 4.89s\n",
            "281:\tlearn: 0.8743635\ttest: 0.8682119\tbest: 0.8685601 (271)\ttotal: 6.3s\tremaining: 4.87s\n",
            "282:\tlearn: 0.8745810\ttest: 0.8682991\tbest: 0.8685601 (271)\ttotal: 6.32s\tremaining: 4.85s\n",
            "283:\tlearn: 0.8743224\ttest: 0.8674499\tbest: 0.8685601 (271)\ttotal: 6.34s\tremaining: 4.83s\n",
            "284:\tlearn: 0.8744517\ttest: 0.8677371\tbest: 0.8685601 (271)\ttotal: 6.37s\tremaining: 4.8s\n",
            "285:\tlearn: 0.8744159\ttest: 0.8673385\tbest: 0.8685601 (271)\ttotal: 6.39s\tremaining: 4.79s\n",
            "286:\tlearn: 0.8745760\ttest: 0.8676252\tbest: 0.8685601 (271)\ttotal: 6.42s\tremaining: 4.76s\n",
            "287:\tlearn: 0.8747725\ttest: 0.8678560\tbest: 0.8685601 (271)\ttotal: 6.44s\tremaining: 4.74s\n",
            "288:\tlearn: 0.8746949\ttest: 0.8680556\tbest: 0.8685601 (271)\ttotal: 6.46s\tremaining: 4.71s\n",
            "289:\tlearn: 0.8744309\ttest: 0.8687303\tbest: 0.8687303 (289)\ttotal: 6.48s\tremaining: 4.69s\n",
            "290:\tlearn: 0.8749069\ttest: 0.8681428\tbest: 0.8687303 (289)\ttotal: 6.5s\tremaining: 4.67s\n",
            "291:\tlearn: 0.8744825\ttest: 0.8685430\tbest: 0.8687303 (289)\ttotal: 6.52s\tremaining: 4.64s\n",
            "292:\tlearn: 0.8743789\ttest: 0.8686869\tbest: 0.8687303 (289)\ttotal: 6.54s\tremaining: 4.62s\n",
            "293:\tlearn: 0.8746843\ttest: 0.8681119\tbest: 0.8687303 (289)\ttotal: 6.56s\tremaining: 4.6s\n",
            "294:\tlearn: 0.8749276\ttest: 0.8677249\tbest: 0.8687303 (289)\ttotal: 6.59s\tremaining: 4.58s\n",
            "295:\tlearn: 0.8748137\ttest: 0.8676811\tbest: 0.8687303 (289)\ttotal: 6.62s\tremaining: 4.56s\n",
            "296:\tlearn: 0.8749068\ttest: 0.8679245\tbest: 0.8687303 (289)\ttotal: 6.64s\tremaining: 4.54s\n",
            "297:\tlearn: 0.8750776\ttest: 0.8677249\tbest: 0.8687303 (289)\ttotal: 6.66s\tremaining: 4.51s\n",
            "298:\tlearn: 0.8752896\ttest: 0.8680992\tbest: 0.8687303 (289)\ttotal: 6.68s\tremaining: 4.49s\n",
            "299:\tlearn: 0.8751035\ttest: 0.8674938\tbest: 0.8687303 (289)\ttotal: 6.7s\tremaining: 4.47s\n",
            "300:\tlearn: 0.8752226\ttest: 0.8673064\tbest: 0.8687303 (289)\ttotal: 6.73s\tremaining: 4.45s\n",
            "301:\tlearn: 0.8751606\ttest: 0.8678808\tbest: 0.8687303 (289)\ttotal: 6.75s\tremaining: 4.42s\n",
            "302:\tlearn: 0.8751917\ttest: 0.8677932\tbest: 0.8687303 (289)\ttotal: 6.77s\tremaining: 4.4s\n",
            "303:\tlearn: 0.8748446\ttest: 0.8679808\tbest: 0.8687303 (289)\ttotal: 6.79s\tremaining: 4.38s\n",
            "304:\tlearn: 0.8750259\ttest: 0.8677932\tbest: 0.8687303 (289)\ttotal: 6.81s\tremaining: 4.35s\n",
            "305:\tlearn: 0.8754039\ttest: 0.8680119\tbest: 0.8687303 (289)\ttotal: 6.84s\tremaining: 4.33s\n",
            "306:\tlearn: 0.8751658\ttest: 0.8678933\tbest: 0.8687303 (289)\ttotal: 6.86s\tremaining: 4.31s\n",
            "307:\tlearn: 0.8751296\ttest: 0.8684254\tbest: 0.8687303 (289)\ttotal: 6.88s\tremaining: 4.29s\n",
            "308:\tlearn: 0.8750104\ttest: 0.8683250\tbest: 0.8687303 (289)\ttotal: 6.9s\tremaining: 4.26s\n",
            "309:\tlearn: 0.8751193\ttest: 0.8685259\tbest: 0.8687303 (289)\ttotal: 6.92s\tremaining: 4.24s\n",
            "310:\tlearn: 0.8750156\ttest: 0.8682505\tbest: 0.8687303 (289)\ttotal: 6.94s\tremaining: 4.22s\n",
            "311:\tlearn: 0.8750831\ttest: 0.8685391\tbest: 0.8687303 (289)\ttotal: 6.96s\tremaining: 4.2s\n",
            "312:\tlearn: 0.8754880\ttest: 0.8683948\tbest: 0.8687303 (289)\ttotal: 6.99s\tremaining: 4.17s\n",
            "313:\tlearn: 0.8755244\ttest: 0.8685391\tbest: 0.8687303 (289)\ttotal: 7.01s\tremaining: 4.15s\n",
            "314:\tlearn: 0.8754777\ttest: 0.8683511\tbest: 0.8687303 (289)\ttotal: 7.03s\tremaining: 4.13s\n",
            "315:\tlearn: 0.8753895\ttest: 0.8684954\tbest: 0.8687303 (289)\ttotal: 7.05s\tremaining: 4.11s\n",
            "316:\tlearn: 0.8755764\ttest: 0.8690160\tbest: 0.8690160 (316)\ttotal: 7.08s\tremaining: 4.08s\n",
            "317:\tlearn: 0.8755814\ttest: 0.8682067\tbest: 0.8690160 (316)\ttotal: 7.09s\tremaining: 4.06s\n",
            "318:\tlearn: 0.8753529\ttest: 0.8685391\tbest: 0.8690160 (316)\ttotal: 7.12s\tremaining: 4.04s\n",
            "319:\tlearn: 0.8755450\ttest: 0.8684517\tbest: 0.8690160 (316)\ttotal: 7.14s\tremaining: 4.02s\n",
            "320:\tlearn: 0.8755294\ttest: 0.8682505\tbest: 0.8690160 (316)\ttotal: 7.17s\tremaining: 4s\n",
            "321:\tlearn: 0.8754410\ttest: 0.8679183\tbest: 0.8690160 (316)\ttotal: 7.19s\tremaining: 3.97s\n",
            "322:\tlearn: 0.8756537\ttest: 0.8683817\tbest: 0.8690160 (316)\ttotal: 7.21s\tremaining: 3.95s\n",
            "323:\tlearn: 0.8754410\ttest: 0.8679621\tbest: 0.8690160 (316)\ttotal: 7.24s\tremaining: 3.93s\n",
            "324:\tlearn: 0.8756694\ttest: 0.8688279\tbest: 0.8690160 (316)\ttotal: 7.27s\tremaining: 3.91s\n",
            "325:\tlearn: 0.8757421\ttest: 0.8686835\tbest: 0.8690160 (316)\ttotal: 7.29s\tremaining: 3.89s\n",
            "326:\tlearn: 0.8756537\ttest: 0.8685695\tbest: 0.8690160 (316)\ttotal: 7.31s\tremaining: 3.87s\n",
            "327:\tlearn: 0.8760680\ttest: 0.8685998\tbest: 0.8690160 (316)\ttotal: 7.34s\tremaining: 3.85s\n",
            "328:\tlearn: 0.8762647\ttest: 0.8684559\tbest: 0.8690160 (316)\ttotal: 7.36s\tremaining: 3.83s\n",
            "329:\tlearn: 0.8762908\ttest: 0.8684995\tbest: 0.8690160 (316)\ttotal: 7.38s\tremaining: 3.8s\n",
            "330:\tlearn: 0.8765657\ttest: 0.8694067\tbest: 0.8694067 (330)\ttotal: 7.41s\tremaining: 3.78s\n",
            "331:\tlearn: 0.8765396\ttest: 0.8693059\tbest: 0.8694067 (330)\ttotal: 7.43s\tremaining: 3.76s\n",
            "332:\tlearn: 0.8763477\ttest: 0.8685430\tbest: 0.8694067 (330)\ttotal: 7.45s\tremaining: 3.74s\n",
            "333:\tlearn: 0.8762489\ttest: 0.8688307\tbest: 0.8694067 (330)\ttotal: 7.48s\tremaining: 3.72s\n",
            "334:\tlearn: 0.8768077\ttest: 0.8693492\tbest: 0.8694067 (330)\ttotal: 7.5s\tremaining: 3.69s\n",
            "335:\tlearn: 0.8770315\ttest: 0.8690180\tbest: 0.8694067 (330)\ttotal: 7.52s\tremaining: 3.67s\n",
            "336:\tlearn: 0.8766522\ttest: 0.8685866\tbest: 0.8694067 (330)\ttotal: 7.54s\tremaining: 3.65s\n",
            "337:\tlearn: 0.8767146\ttest: 0.8684995\tbest: 0.8694067 (330)\ttotal: 7.56s\tremaining: 3.63s\n",
            "338:\tlearn: 0.8770679\ttest: 0.8690752\tbest: 0.8694067 (330)\ttotal: 7.58s\tremaining: 3.6s\n",
            "339:\tlearn: 0.8770954\ttest: 0.8688008\tbest: 0.8694067 (330)\ttotal: 7.61s\tremaining: 3.58s\n",
            "340:\tlearn: 0.8771114\ttest: 0.8689449\tbest: 0.8694067 (330)\ttotal: 7.63s\tremaining: 3.56s\n",
            "341:\tlearn: 0.8769192\ttest: 0.8691325\tbest: 0.8694067 (330)\ttotal: 7.65s\tremaining: 3.54s\n",
            "342:\tlearn: 0.8770794\ttest: 0.8691325\tbest: 0.8694067 (330)\ttotal: 7.67s\tremaining: 3.51s\n",
            "343:\tlearn: 0.8768465\ttest: 0.8688008\tbest: 0.8694067 (330)\ttotal: 7.7s\tremaining: 3.49s\n",
            "344:\tlearn: 0.8768477\ttest: 0.8704319\tbest: 0.8704319 (344)\ttotal: 7.72s\tremaining: 3.47s\n",
            "345:\tlearn: 0.8766350\ttest: 0.8701859\tbest: 0.8704319 (344)\ttotal: 7.74s\tremaining: 3.45s\n",
            "346:\tlearn: 0.8767806\ttest: 0.8699983\tbest: 0.8704319 (344)\ttotal: 7.76s\tremaining: 3.42s\n",
            "347:\tlearn: 0.8768330\ttest: 0.8704319\tbest: 0.8704319 (344)\ttotal: 7.79s\tremaining: 3.4s\n",
            "348:\tlearn: 0.8771332\ttest: 0.8695652\tbest: 0.8704319 (344)\ttotal: 7.81s\tremaining: 3.38s\n",
            "349:\tlearn: 0.8771274\ttest: 0.8689884\tbest: 0.8704319 (344)\ttotal: 7.83s\tremaining: 3.36s\n",
            "350:\tlearn: 0.8773604\ttest: 0.8689449\tbest: 0.8704319 (344)\ttotal: 7.86s\tremaining: 3.33s\n",
            "351:\tlearn: 0.8769907\ttest: 0.8682248\tbest: 0.8704319 (344)\ttotal: 7.88s\tremaining: 3.31s\n",
            "352:\tlearn: 0.8772556\ttest: 0.8693201\tbest: 0.8704319 (344)\ttotal: 7.9s\tremaining: 3.29s\n",
            "353:\tlearn: 0.8772556\ttest: 0.8694643\tbest: 0.8704319 (344)\ttotal: 7.92s\tremaining: 3.27s\n",
            "354:\tlearn: 0.8771857\ttest: 0.8700846\tbest: 0.8704319 (344)\ttotal: 7.95s\tremaining: 3.25s\n",
            "355:\tlearn: 0.8773969\ttest: 0.8695652\tbest: 0.8704319 (344)\ttotal: 7.97s\tremaining: 3.22s\n",
            "356:\tlearn: 0.8771770\ttest: 0.8689884\tbest: 0.8704319 (344)\ttotal: 7.99s\tremaining: 3.2s\n",
            "357:\tlearn: 0.8767782\ttest: 0.8691325\tbest: 0.8704319 (344)\ttotal: 8.02s\tremaining: 3.18s\n",
            "358:\tlearn: 0.8768976\ttest: 0.8688443\tbest: 0.8704319 (344)\ttotal: 8.04s\tremaining: 3.16s\n",
            "359:\tlearn: 0.8768657\ttest: 0.8685998\tbest: 0.8704319 (344)\ttotal: 8.06s\tremaining: 3.14s\n",
            "360:\tlearn: 0.8775045\ttest: 0.8689449\tbest: 0.8704319 (344)\ttotal: 8.09s\tremaining: 3.11s\n",
            "361:\tlearn: 0.8771872\ttest: 0.8688443\tbest: 0.8704319 (344)\ttotal: 8.12s\tremaining: 3.09s\n",
            "362:\tlearn: 0.8774054\ttest: 0.8695652\tbest: 0.8704319 (344)\ttotal: 8.14s\tremaining: 3.07s\n",
            "363:\tlearn: 0.8774595\ttest: 0.8701428\tbest: 0.8704319 (344)\ttotal: 8.16s\tremaining: 3.05s\n",
            "364:\tlearn: 0.8773358\ttest: 0.8705765\tbest: 0.8705765 (364)\ttotal: 8.18s\tremaining: 3.02s\n",
            "365:\tlearn: 0.8774086\ttest: 0.8705765\tbest: 0.8705765 (364)\ttotal: 8.2s\tremaining: 3s\n",
            "366:\tlearn: 0.8775061\ttest: 0.8699983\tbest: 0.8705765 (364)\ttotal: 8.22s\tremaining: 2.98s\n",
            "367:\tlearn: 0.8776560\ttest: 0.8698539\tbest: 0.8705765 (364)\ttotal: 8.25s\tremaining: 2.96s\n",
            "368:\tlearn: 0.8772586\ttest: 0.8711983\tbest: 0.8711983 (368)\ttotal: 8.28s\tremaining: 2.94s\n",
            "369:\tlearn: 0.8775646\ttest: 0.8710106\tbest: 0.8711983 (368)\ttotal: 8.3s\tremaining: 2.92s\n",
            "370:\tlearn: 0.8773679\ttest: 0.8708229\tbest: 0.8711983 (368)\ttotal: 8.32s\tremaining: 2.89s\n",
            "371:\tlearn: 0.8772323\ttest: 0.8709088\tbest: 0.8711983 (368)\ttotal: 8.35s\tremaining: 2.87s\n",
            "372:\tlearn: 0.8775442\ttest: 0.8705765\tbest: 0.8711983 (368)\ttotal: 8.37s\tremaining: 2.85s\n",
            "373:\tlearn: 0.8777653\ttest: 0.8707641\tbest: 0.8711983 (368)\ttotal: 8.39s\tremaining: 2.83s\n",
            "374:\tlearn: 0.8775603\ttest: 0.8707212\tbest: 0.8711983 (368)\ttotal: 8.41s\tremaining: 2.8s\n",
            "375:\tlearn: 0.8776722\ttest: 0.8710963\tbest: 0.8711983 (368)\ttotal: 8.43s\tremaining: 2.78s\n",
            "376:\tlearn: 0.8774654\ttest: 0.8710963\tbest: 0.8711983 (368)\ttotal: 8.46s\tremaining: 2.76s\n",
            "377:\tlearn: 0.8773373\ttest: 0.8711554\tbest: 0.8711983 (368)\ttotal: 8.48s\tremaining: 2.74s\n",
            "378:\tlearn: 0.8775239\ttest: 0.8709677\tbest: 0.8711983 (368)\ttotal: 8.51s\tremaining: 2.72s\n",
            "379:\tlearn: 0.8776273\ttest: 0.8714879\tbest: 0.8714879 (379)\ttotal: 8.54s\tremaining: 2.7s\n",
            "380:\tlearn: 0.8776112\ttest: 0.8718631\tbest: 0.8718631 (380)\ttotal: 8.56s\tremaining: 2.67s\n",
            "381:\tlearn: 0.8776943\ttest: 0.8720080\tbest: 0.8720080 (381)\ttotal: 8.58s\tremaining: 2.65s\n",
            "382:\tlearn: 0.8778502\ttest: 0.8716329\tbest: 0.8720080 (381)\ttotal: 8.61s\tremaining: 2.63s\n",
            "383:\tlearn: 0.8780103\ttest: 0.8716329\tbest: 0.8720080 (381)\ttotal: 8.63s\tremaining: 2.61s\n",
            "384:\tlearn: 0.8782432\ttest: 0.8707212\tbest: 0.8720080 (381)\ttotal: 8.65s\tremaining: 2.58s\n",
            "385:\tlearn: 0.8783425\ttest: 0.8711554\tbest: 0.8720080 (381)\ttotal: 8.67s\tremaining: 2.56s\n",
            "386:\tlearn: 0.8785590\ttest: 0.8705335\tbest: 0.8720080 (381)\ttotal: 8.69s\tremaining: 2.54s\n",
            "387:\tlearn: 0.8783991\ttest: 0.8708229\tbest: 0.8720080 (381)\ttotal: 8.72s\tremaining: 2.52s\n",
            "388:\tlearn: 0.8785590\ttest: 0.8705765\tbest: 0.8720080 (381)\ttotal: 8.74s\tremaining: 2.5s\n",
            "389:\tlearn: 0.8783627\ttest: 0.8702011\tbest: 0.8720080 (381)\ttotal: 8.77s\tremaining: 2.47s\n",
            "390:\tlearn: 0.8781136\ttest: 0.8702011\tbest: 0.8720080 (381)\ttotal: 8.79s\tremaining: 2.45s\n",
            "391:\tlearn: 0.8781258\ttest: 0.8714452\tbest: 0.8720080 (381)\ttotal: 8.81s\tremaining: 2.43s\n",
            "392:\tlearn: 0.8782312\ttest: 0.8709839\tbest: 0.8720080 (381)\ttotal: 8.83s\tremaining: 2.4s\n",
            "393:\tlearn: 0.8781907\ttest: 0.8706509\tbest: 0.8720080 (381)\ttotal: 8.85s\tremaining: 2.38s\n",
            "394:\tlearn: 0.8784037\ttest: 0.8706078\tbest: 0.8720080 (381)\ttotal: 8.88s\tremaining: 2.36s\n",
            "395:\tlearn: 0.8786166\ttest: 0.8708819\tbest: 0.8720080 (381)\ttotal: 8.9s\tremaining: 2.34s\n",
            "396:\tlearn: 0.8784930\ttest: 0.8701731\tbest: 0.8720080 (381)\ttotal: 8.92s\tremaining: 2.31s\n",
            "397:\tlearn: 0.8784098\ttest: 0.8704197\tbest: 0.8720080 (381)\ttotal: 8.94s\tremaining: 2.29s\n",
            "398:\tlearn: 0.8785762\ttest: 0.8707098\tbest: 0.8720080 (381)\ttotal: 8.96s\tremaining: 2.27s\n",
            "399:\tlearn: 0.8786694\ttest: 0.8704197\tbest: 0.8720080 (381)\ttotal: 8.98s\tremaining: 2.25s\n",
            "400:\tlearn: 0.8786896\ttest: 0.8706078\tbest: 0.8720080 (381)\ttotal: 9.01s\tremaining: 2.22s\n",
            "401:\tlearn: 0.8786026\ttest: 0.8713333\tbest: 0.8720080 (381)\ttotal: 9.03s\tremaining: 2.2s\n",
            "402:\tlearn: 0.8786694\ttest: 0.8708979\tbest: 0.8720080 (381)\ttotal: 9.05s\tremaining: 2.18s\n",
            "403:\tlearn: 0.8787728\ttest: 0.8706509\tbest: 0.8720080 (381)\ttotal: 9.08s\tremaining: 2.16s\n",
            "404:\tlearn: 0.8789756\ttest: 0.8709839\tbest: 0.8720080 (381)\ttotal: 9.1s\tremaining: 2.13s\n",
            "405:\tlearn: 0.8789491\ttest: 0.8711126\tbest: 0.8720080 (381)\ttotal: 9.12s\tremaining: 2.11s\n",
            "406:\tlearn: 0.8793483\ttest: 0.8711126\tbest: 0.8720080 (381)\ttotal: 9.14s\tremaining: 2.09s\n",
            "407:\tlearn: 0.8790624\ttest: 0.8709248\tbest: 0.8720080 (381)\ttotal: 9.17s\tremaining: 2.07s\n",
            "408:\tlearn: 0.8793519\ttest: 0.8714452\tbest: 0.8720080 (381)\ttotal: 9.19s\tremaining: 2.04s\n",
            "409:\tlearn: 0.8791519\ttest: 0.8715047\tbest: 0.8720080 (381)\ttotal: 9.22s\tremaining: 2.02s\n",
            "410:\tlearn: 0.8793053\ttest: 0.8710268\tbest: 0.8720080 (381)\ttotal: 9.24s\tremaining: 2s\n",
            "411:\tlearn: 0.8789301\ttest: 0.8705060\tbest: 0.8720080 (381)\ttotal: 9.26s\tremaining: 1.98s\n",
            "412:\tlearn: 0.8791757\ttest: 0.8714619\tbest: 0.8720080 (381)\ttotal: 9.29s\tremaining: 1.96s\n",
            "413:\tlearn: 0.8791957\ttest: 0.8707370\tbest: 0.8720080 (381)\ttotal: 9.31s\tremaining: 1.93s\n",
            "414:\tlearn: 0.8793448\ttest: 0.8717522\tbest: 0.8720080 (381)\ttotal: 9.34s\tremaining: 1.91s\n",
            "415:\tlearn: 0.8793347\ttest: 0.8716070\tbest: 0.8720080 (381)\ttotal: 9.36s\tremaining: 1.89s\n",
            "416:\tlearn: 0.8793949\ttest: 0.8717522\tbest: 0.8720080 (381)\ttotal: 9.38s\tremaining: 1.87s\n",
            "417:\tlearn: 0.8791757\ttest: 0.8713168\tbest: 0.8720080 (381)\ttotal: 9.41s\tremaining: 1.84s\n",
            "418:\tlearn: 0.8791419\ttest: 0.8718974\tbest: 0.8720080 (381)\ttotal: 9.43s\tremaining: 1.82s\n",
            "419:\tlearn: 0.8794515\ttest: 0.8709839\tbest: 0.8720080 (381)\ttotal: 9.45s\tremaining: 1.8s\n",
            "420:\tlearn: 0.8793454\ttest: 0.8714024\tbest: 0.8720080 (381)\ttotal: 9.47s\tremaining: 1.78s\n",
            "421:\tlearn: 0.8793884\ttest: 0.8711289\tbest: 0.8720080 (381)\ttotal: 9.49s\tremaining: 1.75s\n",
            "422:\tlearn: 0.8795711\ttest: 0.8715214\tbest: 0.8720080 (381)\ttotal: 9.52s\tremaining: 1.73s\n",
            "423:\tlearn: 0.8793311\ttest: 0.8716667\tbest: 0.8720080 (381)\ttotal: 9.54s\tremaining: 1.71s\n",
            "424:\tlearn: 0.8793878\ttest: 0.8720000\tbest: 0.8720080 (381)\ttotal: 9.56s\tremaining: 1.69s\n",
            "425:\tlearn: 0.8791712\ttest: 0.8722908\tbest: 0.8722908 (425)\ttotal: 9.59s\tremaining: 1.67s\n",
            "426:\tlearn: 0.8792078\ttest: 0.8719573\tbest: 0.8722908 (425)\ttotal: 9.61s\tremaining: 1.64s\n",
            "427:\tlearn: 0.8792809\ttest: 0.8719573\tbest: 0.8722908 (425)\ttotal: 9.64s\tremaining: 1.62s\n",
            "428:\tlearn: 0.8793671\ttest: 0.8721629\tbest: 0.8722908 (425)\ttotal: 9.66s\tremaining: 1.6s\n",
            "429:\tlearn: 0.8792436\ttest: 0.8718891\tbest: 0.8722908 (425)\ttotal: 9.69s\tremaining: 1.58s\n",
            "430:\tlearn: 0.8793570\ttest: 0.8717863\tbest: 0.8722908 (425)\ttotal: 9.71s\tremaining: 1.55s\n",
            "431:\tlearn: 0.8793276\ttest: 0.8723937\tbest: 0.8723937 (431)\ttotal: 9.73s\tremaining: 1.53s\n",
            "432:\tlearn: 0.8792737\ttest: 0.8722232\tbest: 0.8723937 (431)\ttotal: 9.75s\tremaining: 1.51s\n",
            "433:\tlearn: 0.8798535\ttest: 0.8724967\tbest: 0.8724967 (433)\ttotal: 9.77s\tremaining: 1.49s\n",
            "434:\tlearn: 0.8798103\ttest: 0.8724787\tbest: 0.8724967 (433)\ttotal: 9.78s\tremaining: 1.46s\n",
            "435:\tlearn: 0.8799267\ttest: 0.8722055\tbest: 0.8724967 (433)\ttotal: 9.81s\tremaining: 1.44s\n",
            "436:\tlearn: 0.8800266\ttest: 0.8715979\tbest: 0.8724967 (433)\ttotal: 9.83s\tremaining: 1.42s\n",
            "437:\tlearn: 0.8798267\ttest: 0.8721805\tbest: 0.8724967 (433)\ttotal: 9.86s\tremaining: 1.4s\n",
            "438:\tlearn: 0.8799767\ttest: 0.8717435\tbest: 0.8724967 (433)\ttotal: 9.88s\tremaining: 1.37s\n",
            "439:\tlearn: 0.8797700\ttest: 0.8723262\tbest: 0.8724967 (433)\ttotal: 9.9s\tremaining: 1.35s\n",
            "440:\tlearn: 0.8799767\ttest: 0.8720347\tbest: 0.8724967 (433)\ttotal: 9.94s\tremaining: 1.33s\n",
            "441:\tlearn: 0.8801166\ttest: 0.8720347\tbest: 0.8724967 (433)\ttotal: 9.97s\tremaining: 1.31s\n",
            "442:\tlearn: 0.8800600\ttest: 0.8723262\tbest: 0.8724967 (433)\ttotal: 9.99s\tremaining: 1.29s\n",
            "443:\tlearn: 0.8799600\ttest: 0.8720775\tbest: 0.8724967 (433)\ttotal: 10s\tremaining: 1.26s\n",
            "444:\tlearn: 0.8798601\ttest: 0.8717435\tbest: 0.8724967 (433)\ttotal: 10s\tremaining: 1.24s\n",
            "445:\tlearn: 0.8799367\ttest: 0.8719319\tbest: 0.8724967 (433)\ttotal: 10.1s\tremaining: 1.22s\n",
            "446:\tlearn: 0.8797703\ttest: 0.8718291\tbest: 0.8724967 (433)\ttotal: 10.1s\tremaining: 1.2s\n",
            "447:\tlearn: 0.8800100\ttest: 0.8718291\tbest: 0.8724967 (433)\ttotal: 10.1s\tremaining: 1.17s\n",
            "448:\tlearn: 0.8800699\ttest: 0.8716836\tbest: 0.8724967 (433)\ttotal: 10.1s\tremaining: 1.15s\n",
            "449:\tlearn: 0.8800599\ttest: 0.8713499\tbest: 0.8724967 (433)\ttotal: 10.2s\tremaining: 1.13s\n",
            "450:\tlearn: 0.8800466\ttest: 0.8712640\tbest: 0.8724967 (433)\ttotal: 10.2s\tremaining: 1.1s\n",
            "451:\tlearn: 0.8799634\ttest: 0.8712640\tbest: 0.8724967 (433)\ttotal: 10.2s\tremaining: 1.08s\n",
            "452:\tlearn: 0.8800300\ttest: 0.8714095\tbest: 0.8724967 (433)\ttotal: 10.2s\tremaining: 1.06s\n",
            "453:\tlearn: 0.8800566\ttest: 0.8714095\tbest: 0.8724967 (433)\ttotal: 10.3s\tremaining: 1.04s\n",
            "454:\tlearn: 0.8801132\ttest: 0.8713070\tbest: 0.8724967 (433)\ttotal: 10.3s\tremaining: 1.02s\n",
            "455:\tlearn: 0.8802231\ttest: 0.8714953\tbest: 0.8724967 (433)\ttotal: 10.3s\tremaining: 994ms\n",
            "456:\tlearn: 0.8801266\ttest: 0.8716578\tbest: 0.8724967 (433)\ttotal: 10.3s\tremaining: 972ms\n",
            "457:\tlearn: 0.8803597\ttest: 0.8713235\tbest: 0.8724967 (433)\ttotal: 10.4s\tremaining: 949ms\n",
            "458:\tlearn: 0.8805728\ttest: 0.8720347\tbest: 0.8724967 (433)\ttotal: 10.4s\tremaining: 927ms\n",
            "459:\tlearn: 0.8808126\ttest: 0.8715979\tbest: 0.8724967 (433)\ttotal: 10.4s\tremaining: 904ms\n",
            "460:\tlearn: 0.8806293\ttest: 0.8715550\tbest: 0.8724967 (433)\ttotal: 10.4s\tremaining: 881ms\n",
            "461:\tlearn: 0.8806759\ttest: 0.8713665\tbest: 0.8724967 (433)\ttotal: 10.4s\tremaining: 859ms\n",
            "462:\tlearn: 0.8807958\ttest: 0.8711185\tbest: 0.8724967 (433)\ttotal: 10.5s\tremaining: 837ms\n",
            "463:\tlearn: 0.8806125\ttest: 0.8712210\tbest: 0.8724967 (433)\ttotal: 10.5s\tremaining: 814ms\n",
            "464:\tlearn: 0.8807691\ttest: 0.8713070\tbest: 0.8724967 (433)\ttotal: 10.5s\tremaining: 791ms\n",
            "465:\tlearn: 0.8807362\ttest: 0.8711185\tbest: 0.8724967 (433)\ttotal: 10.5s\tremaining: 769ms\n",
            "466:\tlearn: 0.8805765\ttest: 0.8709462\tbest: 0.8724967 (433)\ttotal: 10.6s\tremaining: 746ms\n",
            "467:\tlearn: 0.8806368\ttest: 0.8713832\tbest: 0.8724967 (433)\ttotal: 10.6s\tremaining: 724ms\n",
            "468:\tlearn: 0.8809167\ttest: 0.8714262\tbest: 0.8724967 (433)\ttotal: 10.6s\tremaining: 701ms\n",
            "469:\tlearn: 0.8808204\ttest: 0.8712805\tbest: 0.8724967 (433)\ttotal: 10.6s\tremaining: 678ms\n",
            "470:\tlearn: 0.8805871\ttest: 0.8710487\tbest: 0.8724967 (433)\ttotal: 10.7s\tremaining: 656ms\n",
            "471:\tlearn: 0.8805603\ttest: 0.8712375\tbest: 0.8724967 (433)\ttotal: 10.7s\tremaining: 633ms\n",
            "472:\tlearn: 0.8805740\ttest: 0.8712375\tbest: 0.8724967 (433)\ttotal: 10.7s\tremaining: 610ms\n",
            "473:\tlearn: 0.8809772\ttest: 0.8716148\tbest: 0.8724967 (433)\ttotal: 10.7s\tremaining: 588ms\n",
            "474:\tlearn: 0.8811072\ttest: 0.8714692\tbest: 0.8724967 (433)\ttotal: 10.7s\tremaining: 565ms\n",
            "475:\tlearn: 0.8807240\ttest: 0.8711779\tbest: 0.8724967 (433)\ttotal: 10.8s\tremaining: 543ms\n",
            "476:\tlearn: 0.8808610\ttest: 0.8710918\tbest: 0.8724967 (433)\ttotal: 10.8s\tremaining: 520ms\n",
            "477:\tlearn: 0.8807209\ttest: 0.8713832\tbest: 0.8724967 (433)\ttotal: 10.8s\tremaining: 497ms\n",
            "478:\tlearn: 0.8808212\ttest: 0.8713832\tbest: 0.8724967 (433)\ttotal: 10.8s\tremaining: 475ms\n",
            "479:\tlearn: 0.8808779\ttest: 0.8709893\tbest: 0.8724967 (433)\ttotal: 10.8s\tremaining: 452ms\n",
            "480:\tlearn: 0.8809345\ttest: 0.8709893\tbest: 0.8724967 (433)\ttotal: 10.9s\tremaining: 429ms\n",
            "481:\tlearn: 0.8813107\ttest: 0.8708438\tbest: 0.8724967 (433)\ttotal: 10.9s\tremaining: 407ms\n",
            "482:\tlearn: 0.8811778\ttest: 0.8713401\tbest: 0.8724967 (433)\ttotal: 10.9s\tremaining: 384ms\n",
            "483:\tlearn: 0.8812245\ttest: 0.8706709\tbest: 0.8724967 (433)\ttotal: 10.9s\tremaining: 362ms\n",
            "484:\tlearn: 0.8813446\ttest: 0.8707142\tbest: 0.8724967 (433)\ttotal: 11s\tremaining: 339ms\n",
            "485:\tlearn: 0.8814083\ttest: 0.8706709\tbest: 0.8724967 (433)\ttotal: 11s\tremaining: 316ms\n",
            "486:\tlearn: 0.8814648\ttest: 0.8710918\tbest: 0.8724967 (433)\ttotal: 11s\tremaining: 294ms\n",
            "487:\tlearn: 0.8814676\ttest: 0.8710918\tbest: 0.8724967 (433)\ttotal: 11s\tremaining: 271ms\n",
            "488:\tlearn: 0.8814648\ttest: 0.8708598\tbest: 0.8724967 (433)\ttotal: 11.1s\tremaining: 249ms\n",
            "489:\tlearn: 0.8814846\ttest: 0.8711944\tbest: 0.8724967 (433)\ttotal: 11.1s\tremaining: 226ms\n",
            "490:\tlearn: 0.8815581\ttest: 0.8710487\tbest: 0.8724967 (433)\ttotal: 11.1s\tremaining: 203ms\n",
            "491:\tlearn: 0.8815581\ttest: 0.8710487\tbest: 0.8724967 (433)\ttotal: 11.1s\tremaining: 181ms\n",
            "492:\tlearn: 0.8815213\ttest: 0.8711944\tbest: 0.8724967 (433)\ttotal: 11.1s\tremaining: 158ms\n",
            "493:\tlearn: 0.8813644\ttest: 0.8713832\tbest: 0.8724967 (433)\ttotal: 11.2s\tremaining: 136ms\n",
            "494:\tlearn: 0.8814407\ttest: 0.8714692\tbest: 0.8724967 (433)\ttotal: 11.2s\tremaining: 113ms\n",
            "495:\tlearn: 0.8815707\ttest: 0.8713665\tbest: 0.8724967 (433)\ttotal: 11.2s\tremaining: 90.4ms\n",
            "496:\tlearn: 0.8816075\ttest: 0.8711349\tbest: 0.8724967 (433)\ttotal: 11.2s\tremaining: 67.8ms\n",
            "497:\tlearn: 0.8817348\ttest: 0.8711349\tbest: 0.8724967 (433)\ttotal: 11.3s\tremaining: 45.2ms\n",
            "498:\tlearn: 0.8817644\ttest: 0.8711779\tbest: 0.8724967 (433)\ttotal: 11.3s\tremaining: 22.6ms\n",
            "499:\tlearn: 0.8817742\ttest: 0.8709893\tbest: 0.8724967 (433)\ttotal: 11.3s\tremaining: 0us\n",
            "\n",
            "bestTest = 0.8724966622\n",
            "bestIteration = 433\n",
            "\n",
            "Shrink model to first 434 iterations.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qBd1tzd5EdHo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "prediction=tuned_model_2.predict(test_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NyaRsNRyEnig",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "78d227c7-c590-4dc7-a9aa-e40ce3b183b6"
      },
      "source": [
        "prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1S9NI_QJDnbL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above prediction result gave f1 score of 86.8 on unseen data\n",
        "#i could not further improve the f1 score using catboost."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MiOwqK25XQSn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Going to experiment with lightgbm which is the next good boosting model used across.\n",
        "#we need to do one hot encoding in this unlike the catboost\n",
        "#performing one hot encoding and saving in a different variable\n",
        "pharma_data_one_hot = pd.get_dummies(pharma_data)\n",
        "pharma_data_one_hot=pharma_data_one_hot.drop(['Patient_Smoker_Cannot say'],axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P-WpcNNTXi7Z",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#performing one hot encoding in un seen data\n",
        "test_data_one_hot = pd.get_dummies(test_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "VoNMWlcJYLqY",
        "colab": {}
      },
      "source": [
        "#separating x and y after one hot encoding\n",
        "X_mod = pharma_data_one_hot.drop(['Survived_1_year'],axis=1)\n",
        "y_mod = pharma_data_one_hot['Survived_1_year']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "er3WT1chYLrc",
        "colab": {}
      },
      "source": [
        "#separating test and train data\n",
        "from sklearn.model_selection import train_test_split\n",
        "x_train_mod, x_test_mod, y_train_mod, y_test_mod = train_test_split(X_mod,y_mod,test_size=0.20,random_state=42)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hIBBN7xKDnbq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#trying lightgbm with basic params\n",
        "from lightgbm import LGBMClassifier\n",
        "model = LGBMClassifier(iterations=1000,\n",
        "                                 depth=6,\n",
        "                                 eval_metric = 'F1',\n",
        "                                 leaf_estimation_iterations = 10,\n",
        "                                use_best_model=True)\n",
        "model.fit(x_train_mod,y_train_mod)\n",
        "y_pred_mod=model.predict(x_test_mod)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ITbnT280Yoh4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "outputId": "b5b71141-59ac-4e02-ab9c-adfd440aba48"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix,f1_score\n",
        "tn, fp, fn, tp = confusion_matrix(y_test_mod, y_pred_mod).ravel()\n",
        "print(\"True Positive\", tp)\n",
        "print(\"True Negative\", tn)\n",
        "print(\"False Positive\", fp)\n",
        "print(\"False Negative\", fn)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True Positive 2561\n",
            "True Negative 1288\n",
            "False Positive 416\n",
            "False Negative 355\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8jGzu5liY0Jl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "ae2b2261-0f73-443b-8e04-eeafce73d971"
      },
      "source": [
        "acc= f1_score(y_test_mod,y_pred_mod)\n",
        "acc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.86916680807738"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ndQ-ZH9iY-7s",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "prediction=model.predict(test_data_one_hot)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bv8vNbJSZn9e",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "bdc68dbe-6d23-4397-d24c-e42bb1bd917a"
      },
      "source": [
        "prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n",
              "       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u39VbEYW0HN0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above prediction result gave f1 score of 86.98 on unseen data . Thats not bad.\n",
        "#going to perform grid search for lightgbm classifier"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oy_aagWjd_TH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#params array for grid search. i am going to mainly focus on learning rate, n_estimators, num_leaves and max_bin \n",
        "params ={\n",
        "            'learning_rate': [0.005, 0.003,0.002,0.001,0.03,0.02,0.01,0.3,0.2,0.1,1],\n",
        "            'n_estimators': [100,500,700,1000],\n",
        "            'num_leaves': [6,8,12,16], # large num_leaves helps improve accuracy but might lead to over-fitting\n",
        "            'boosting_type' : ['gbdt', 'dart'], # for better accuracy -> try dart\n",
        "            'objective' : ['binary'],\n",
        "            'max_bin':[255, 510] # large max_bin helps improve accuracy but might slow down training progress\n",
        "            # 'random_state' : [500],\n",
        "            # 'colsample_bytree' : [0.64, 0.65, 0.66],\n",
        "            # 'subsample' : [0.7,0.75],\n",
        "            # 'reg_alpha' : [1,1.2],\n",
        "            # 'reg_lambda' : [1,1.2,1.4]\n",
        "             }\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2tm3BkbWdpoQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 348
        },
        "outputId": "caa4628b-1053-4d5d-c6ea-474734e38e23"
      },
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "import lightgbm as lgb\n",
        "clf = lgb.LGBMClassifier(metric='f1')\n",
        "gs = GridSearchCV(\n",
        "    clf, params, verbose=1, cv=4, n_jobs=-1)\n",
        "gs.fit(x_train_mod,y_train_mod)\n",
        "# Results from Random Search\n",
        "print(\"\\n The best score across ALL searched params:\\n\",\n",
        "      gs.best_score_)\n",
        "print(\"\\n The best parameters across ALL searched params:\\n\",\n",
        "      gs.best_params_)\n",
        "print(\"\\n ========================================================\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Fitting 4 folds for each of 704 candidates, totalling 2816 fits\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
            "[Parallel(n_jobs=-1)]: Done  46 tasks      | elapsed:   38.8s\n",
            "[Parallel(n_jobs=-1)]: Done 196 tasks      | elapsed:  3.8min\n",
            "[Parallel(n_jobs=-1)]: Done 446 tasks      | elapsed:  8.7min\n",
            "[Parallel(n_jobs=-1)]: Done 796 tasks      | elapsed: 15.1min\n",
            "[Parallel(n_jobs=-1)]: Done 1246 tasks      | elapsed: 22.3min\n",
            "[Parallel(n_jobs=-1)]: Done 1796 tasks      | elapsed: 76.0min\n",
            "[Parallel(n_jobs=-1)]: Done 2446 tasks      | elapsed: 159.3min\n",
            "[Parallel(n_jobs=-1)]: Done 2816 out of 2816 | elapsed: 202.5min finished\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            " The best score across ALL searched params:\n",
            " 0.8419655568145501\n",
            "\n",
            " The best parameters across ALL searched params:\n",
            " {'boosting_type': 'gbdt', 'learning_rate': 0.1, 'max_bin': 255, 'n_estimators': 500, 'num_leaves': 6, 'objective': 'binary'}\n",
            "\n",
            " ========================================================\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1Zr67EUODnc2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#using the best params given b\n",
        "from lightgbm import LGBMClassifier\n",
        "model = LGBMClassifier(iterations=1000,\n",
        "                                 depth=6,\n",
        "                                 eval_metric = 'F1',\n",
        "                                 leaf_estimation_iterations = 10,\n",
        "                                 learning_rate= 0.1, \n",
        "                                 max_bin= 255, \n",
        "                                 n_estimators= 500, \n",
        "                                 num_leaves= 6,\n",
        "                                use_best_model=True)\n",
        "model.fit(x_train_mod,y_train_mod)\n",
        "y_pred_mod=model.predict(x_test_mod)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "biZeDi0FDnc8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "prediction=model.predict(test_data_one_hot)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IxLxyrsLDndD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "a9d8ee4c-64ef-4431-b92d-db6f1d4ed802"
      },
      "source": [
        "prediction"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "37tZAAu_DndK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above prediction results gave f1 score of 87.27"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "d2qocz1eSuTw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "e5d6334e-ae6c-4691-979c-e8d6bef98936"
      },
      "source": [
        "#adjusting various params especially max_bin, num_leaves and n_estimators which is important for model improvisation in lightgbm\n",
        "from lightgbm import LGBMClassifier\n",
        "model = LGBMClassifier(iterations=1000,\n",
        "                                 depth=6,\n",
        "                                 eval_metric = 'F1',\n",
        "                                 leaf_estimation_iterations = 10,\n",
        "                                 learning_rate= 0.1, \n",
        "                                 max_bin= 255, \n",
        "                                 n_estimators= 555, \n",
        "                                 num_leaves= 6,\n",
        "                                use_best_model=True)\n",
        "model.fit(x_train_mod,y_train_mod,eval_set=(x_test_mod,y_test_mod))\n",
        "y_pred_mod=model.predict(x_test_mod)"
      ],
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1]\tvalid_0's binary_logloss: 0.635895\n",
            "[2]\tvalid_0's binary_logloss: 0.617876\n",
            "[3]\tvalid_0's binary_logloss: 0.603026\n",
            "[4]\tvalid_0's binary_logloss: 0.5901\n",
            "[5]\tvalid_0's binary_logloss: 0.579429\n",
            "[6]\tvalid_0's binary_logloss: 0.569517\n",
            "[7]\tvalid_0's binary_logloss: 0.561376\n",
            "[8]\tvalid_0's binary_logloss: 0.552918\n",
            "[9]\tvalid_0's binary_logloss: 0.54584\n",
            "[10]\tvalid_0's binary_logloss: 0.540017\n",
            "[11]\tvalid_0's binary_logloss: 0.532967\n",
            "[12]\tvalid_0's binary_logloss: 0.523222\n",
            "[13]\tvalid_0's binary_logloss: 0.517731\n",
            "[14]\tvalid_0's binary_logloss: 0.509832\n",
            "[15]\tvalid_0's binary_logloss: 0.503388\n",
            "[16]\tvalid_0's binary_logloss: 0.499074\n",
            "[17]\tvalid_0's binary_logloss: 0.492247\n",
            "[18]\tvalid_0's binary_logloss: 0.48696\n",
            "[19]\tvalid_0's binary_logloss: 0.483179\n",
            "[20]\tvalid_0's binary_logloss: 0.477768\n",
            "[21]\tvalid_0's binary_logloss: 0.473635\n",
            "[22]\tvalid_0's binary_logloss: 0.469863\n",
            "[23]\tvalid_0's binary_logloss: 0.465006\n",
            "[24]\tvalid_0's binary_logloss: 0.461856\n",
            "[25]\tvalid_0's binary_logloss: 0.459021\n",
            "[26]\tvalid_0's binary_logloss: 0.454639\n",
            "[27]\tvalid_0's binary_logloss: 0.45104\n",
            "[28]\tvalid_0's binary_logloss: 0.448638\n",
            "[29]\tvalid_0's binary_logloss: 0.445668\n",
            "[30]\tvalid_0's binary_logloss: 0.443183\n",
            "[31]\tvalid_0's binary_logloss: 0.440808\n",
            "[32]\tvalid_0's binary_logloss: 0.438123\n",
            "[33]\tvalid_0's binary_logloss: 0.4356\n",
            "[34]\tvalid_0's binary_logloss: 0.432863\n",
            "[35]\tvalid_0's binary_logloss: 0.430392\n",
            "[36]\tvalid_0's binary_logloss: 0.427276\n",
            "[37]\tvalid_0's binary_logloss: 0.425615\n",
            "[38]\tvalid_0's binary_logloss: 0.423703\n",
            "[39]\tvalid_0's binary_logloss: 0.421496\n",
            "[40]\tvalid_0's binary_logloss: 0.419977\n",
            "[41]\tvalid_0's binary_logloss: 0.418319\n",
            "[42]\tvalid_0's binary_logloss: 0.41644\n",
            "[43]\tvalid_0's binary_logloss: 0.414972\n",
            "[44]\tvalid_0's binary_logloss: 0.41374\n",
            "[45]\tvalid_0's binary_logloss: 0.412249\n",
            "[46]\tvalid_0's binary_logloss: 0.410217\n",
            "[47]\tvalid_0's binary_logloss: 0.408771\n",
            "[48]\tvalid_0's binary_logloss: 0.407516\n",
            "[49]\tvalid_0's binary_logloss: 0.405736\n",
            "[50]\tvalid_0's binary_logloss: 0.404476\n",
            "[51]\tvalid_0's binary_logloss: 0.402846\n",
            "[52]\tvalid_0's binary_logloss: 0.401369\n",
            "[53]\tvalid_0's binary_logloss: 0.400236\n",
            "[54]\tvalid_0's binary_logloss: 0.398566\n",
            "[55]\tvalid_0's binary_logloss: 0.397483\n",
            "[56]\tvalid_0's binary_logloss: 0.396332\n",
            "[57]\tvalid_0's binary_logloss: 0.395056\n",
            "[58]\tvalid_0's binary_logloss: 0.394303\n",
            "[59]\tvalid_0's binary_logloss: 0.392971\n",
            "[60]\tvalid_0's binary_logloss: 0.392011\n",
            "[61]\tvalid_0's binary_logloss: 0.390992\n",
            "[62]\tvalid_0's binary_logloss: 0.390447\n",
            "[63]\tvalid_0's binary_logloss: 0.389602\n",
            "[64]\tvalid_0's binary_logloss: 0.388343\n",
            "[65]\tvalid_0's binary_logloss: 0.386939\n",
            "[66]\tvalid_0's binary_logloss: 0.385624\n",
            "[67]\tvalid_0's binary_logloss: 0.385074\n",
            "[68]\tvalid_0's binary_logloss: 0.384313\n",
            "[69]\tvalid_0's binary_logloss: 0.383643\n",
            "[70]\tvalid_0's binary_logloss: 0.38274\n",
            "[71]\tvalid_0's binary_logloss: 0.381687\n",
            "[72]\tvalid_0's binary_logloss: 0.381143\n",
            "[73]\tvalid_0's binary_logloss: 0.379838\n",
            "[74]\tvalid_0's binary_logloss: 0.379261\n",
            "[75]\tvalid_0's binary_logloss: 0.378257\n",
            "[76]\tvalid_0's binary_logloss: 0.377528\n",
            "[77]\tvalid_0's binary_logloss: 0.376752\n",
            "[78]\tvalid_0's binary_logloss: 0.376327\n",
            "[79]\tvalid_0's binary_logloss: 0.375109\n",
            "[80]\tvalid_0's binary_logloss: 0.374507\n",
            "[81]\tvalid_0's binary_logloss: 0.373747\n",
            "[82]\tvalid_0's binary_logloss: 0.373264\n",
            "[83]\tvalid_0's binary_logloss: 0.372716\n",
            "[84]\tvalid_0's binary_logloss: 0.372463\n",
            "[85]\tvalid_0's binary_logloss: 0.371758\n",
            "[86]\tvalid_0's binary_logloss: 0.370631\n",
            "[87]\tvalid_0's binary_logloss: 0.369881\n",
            "[88]\tvalid_0's binary_logloss: 0.369451\n",
            "[89]\tvalid_0's binary_logloss: 0.368977\n",
            "[90]\tvalid_0's binary_logloss: 0.368641\n",
            "[91]\tvalid_0's binary_logloss: 0.368258\n",
            "[92]\tvalid_0's binary_logloss: 0.367726\n",
            "[93]\tvalid_0's binary_logloss: 0.367097\n",
            "[94]\tvalid_0's binary_logloss: 0.366744\n",
            "[95]\tvalid_0's binary_logloss: 0.366142\n",
            "[96]\tvalid_0's binary_logloss: 0.365968\n",
            "[97]\tvalid_0's binary_logloss: 0.365409\n",
            "[98]\tvalid_0's binary_logloss: 0.364645\n",
            "[99]\tvalid_0's binary_logloss: 0.364266\n",
            "[100]\tvalid_0's binary_logloss: 0.363957\n",
            "[101]\tvalid_0's binary_logloss: 0.363588\n",
            "[102]\tvalid_0's binary_logloss: 0.363475\n",
            "[103]\tvalid_0's binary_logloss: 0.362998\n",
            "[104]\tvalid_0's binary_logloss: 0.362794\n",
            "[105]\tvalid_0's binary_logloss: 0.362501\n",
            "[106]\tvalid_0's binary_logloss: 0.361826\n",
            "[107]\tvalid_0's binary_logloss: 0.361444\n",
            "[108]\tvalid_0's binary_logloss: 0.361316\n",
            "[109]\tvalid_0's binary_logloss: 0.360926\n",
            "[110]\tvalid_0's binary_logloss: 0.360628\n",
            "[111]\tvalid_0's binary_logloss: 0.360135\n",
            "[112]\tvalid_0's binary_logloss: 0.359406\n",
            "[113]\tvalid_0's binary_logloss: 0.359125\n",
            "[114]\tvalid_0's binary_logloss: 0.358996\n",
            "[115]\tvalid_0's binary_logloss: 0.358761\n",
            "[116]\tvalid_0's binary_logloss: 0.358502\n",
            "[117]\tvalid_0's binary_logloss: 0.35821\n",
            "[118]\tvalid_0's binary_logloss: 0.357792\n",
            "[119]\tvalid_0's binary_logloss: 0.357715\n",
            "[120]\tvalid_0's binary_logloss: 0.357239\n",
            "[121]\tvalid_0's binary_logloss: 0.356915\n",
            "[122]\tvalid_0's binary_logloss: 0.356791\n",
            "[123]\tvalid_0's binary_logloss: 0.356426\n",
            "[124]\tvalid_0's binary_logloss: 0.356093\n",
            "[125]\tvalid_0's binary_logloss: 0.355834\n",
            "[126]\tvalid_0's binary_logloss: 0.355606\n",
            "[127]\tvalid_0's binary_logloss: 0.355134\n",
            "[128]\tvalid_0's binary_logloss: 0.354816\n",
            "[129]\tvalid_0's binary_logloss: 0.354327\n",
            "[130]\tvalid_0's binary_logloss: 0.354072\n",
            "[131]\tvalid_0's binary_logloss: 0.353803\n",
            "[132]\tvalid_0's binary_logloss: 0.353711\n",
            "[133]\tvalid_0's binary_logloss: 0.353334\n",
            "[134]\tvalid_0's binary_logloss: 0.353168\n",
            "[135]\tvalid_0's binary_logloss: 0.353143\n",
            "[136]\tvalid_0's binary_logloss: 0.352818\n",
            "[137]\tvalid_0's binary_logloss: 0.352754\n",
            "[138]\tvalid_0's binary_logloss: 0.352378\n",
            "[139]\tvalid_0's binary_logloss: 0.352245\n",
            "[140]\tvalid_0's binary_logloss: 0.351977\n",
            "[141]\tvalid_0's binary_logloss: 0.351897\n",
            "[142]\tvalid_0's binary_logloss: 0.351613\n",
            "[143]\tvalid_0's binary_logloss: 0.351195\n",
            "[144]\tvalid_0's binary_logloss: 0.351045\n",
            "[145]\tvalid_0's binary_logloss: 0.350933\n",
            "[146]\tvalid_0's binary_logloss: 0.350735\n",
            "[147]\tvalid_0's binary_logloss: 0.35048\n",
            "[148]\tvalid_0's binary_logloss: 0.350189\n",
            "[149]\tvalid_0's binary_logloss: 0.350055\n",
            "[150]\tvalid_0's binary_logloss: 0.349985\n",
            "[151]\tvalid_0's binary_logloss: 0.349965\n",
            "[152]\tvalid_0's binary_logloss: 0.349673\n",
            "[153]\tvalid_0's binary_logloss: 0.349515\n",
            "[154]\tvalid_0's binary_logloss: 0.349291\n",
            "[155]\tvalid_0's binary_logloss: 0.349247\n",
            "[156]\tvalid_0's binary_logloss: 0.34925\n",
            "[157]\tvalid_0's binary_logloss: 0.348877\n",
            "[158]\tvalid_0's binary_logloss: 0.348599\n",
            "[159]\tvalid_0's binary_logloss: 0.348492\n",
            "[160]\tvalid_0's binary_logloss: 0.348309\n",
            "[161]\tvalid_0's binary_logloss: 0.348138\n",
            "[162]\tvalid_0's binary_logloss: 0.348082\n",
            "[163]\tvalid_0's binary_logloss: 0.348013\n",
            "[164]\tvalid_0's binary_logloss: 0.347811\n",
            "[165]\tvalid_0's binary_logloss: 0.347662\n",
            "[166]\tvalid_0's binary_logloss: 0.347482\n",
            "[167]\tvalid_0's binary_logloss: 0.347191\n",
            "[168]\tvalid_0's binary_logloss: 0.347155\n",
            "[169]\tvalid_0's binary_logloss: 0.346983\n",
            "[170]\tvalid_0's binary_logloss: 0.346806\n",
            "[171]\tvalid_0's binary_logloss: 0.346556\n",
            "[172]\tvalid_0's binary_logloss: 0.346509\n",
            "[173]\tvalid_0's binary_logloss: 0.346466\n",
            "[174]\tvalid_0's binary_logloss: 0.346448\n",
            "[175]\tvalid_0's binary_logloss: 0.34621\n",
            "[176]\tvalid_0's binary_logloss: 0.345953\n",
            "[177]\tvalid_0's binary_logloss: 0.345993\n",
            "[178]\tvalid_0's binary_logloss: 0.34574\n",
            "[179]\tvalid_0's binary_logloss: 0.345673\n",
            "[180]\tvalid_0's binary_logloss: 0.345551\n",
            "[181]\tvalid_0's binary_logloss: 0.345457\n",
            "[182]\tvalid_0's binary_logloss: 0.345437\n",
            "[183]\tvalid_0's binary_logloss: 0.34538\n",
            "[184]\tvalid_0's binary_logloss: 0.345226\n",
            "[185]\tvalid_0's binary_logloss: 0.345044\n",
            "[186]\tvalid_0's binary_logloss: 0.34489\n",
            "[187]\tvalid_0's binary_logloss: 0.344704\n",
            "[188]\tvalid_0's binary_logloss: 0.344581\n",
            "[189]\tvalid_0's binary_logloss: 0.344455\n",
            "[190]\tvalid_0's binary_logloss: 0.344425\n",
            "[191]\tvalid_0's binary_logloss: 0.34438\n",
            "[192]\tvalid_0's binary_logloss: 0.344284\n",
            "[193]\tvalid_0's binary_logloss: 0.34416\n",
            "[194]\tvalid_0's binary_logloss: 0.344052\n",
            "[195]\tvalid_0's binary_logloss: 0.343842\n",
            "[196]\tvalid_0's binary_logloss: 0.343718\n",
            "[197]\tvalid_0's binary_logloss: 0.343718\n",
            "[198]\tvalid_0's binary_logloss: 0.34359\n",
            "[199]\tvalid_0's binary_logloss: 0.343536\n",
            "[200]\tvalid_0's binary_logloss: 0.343519\n",
            "[201]\tvalid_0's binary_logloss: 0.343411\n",
            "[202]\tvalid_0's binary_logloss: 0.343256\n",
            "[203]\tvalid_0's binary_logloss: 0.343268\n",
            "[204]\tvalid_0's binary_logloss: 0.34322\n",
            "[205]\tvalid_0's binary_logloss: 0.343302\n",
            "[206]\tvalid_0's binary_logloss: 0.343198\n",
            "[207]\tvalid_0's binary_logloss: 0.343146\n",
            "[208]\tvalid_0's binary_logloss: 0.343016\n",
            "[209]\tvalid_0's binary_logloss: 0.342885\n",
            "[210]\tvalid_0's binary_logloss: 0.342767\n",
            "[211]\tvalid_0's binary_logloss: 0.342677\n",
            "[212]\tvalid_0's binary_logloss: 0.342628\n",
            "[213]\tvalid_0's binary_logloss: 0.342615\n",
            "[214]\tvalid_0's binary_logloss: 0.342521\n",
            "[215]\tvalid_0's binary_logloss: 0.342548\n",
            "[216]\tvalid_0's binary_logloss: 0.34251\n",
            "[217]\tvalid_0's binary_logloss: 0.342395\n",
            "[218]\tvalid_0's binary_logloss: 0.342316\n",
            "[219]\tvalid_0's binary_logloss: 0.342269\n",
            "[220]\tvalid_0's binary_logloss: 0.342194\n",
            "[221]\tvalid_0's binary_logloss: 0.342202\n",
            "[222]\tvalid_0's binary_logloss: 0.342076\n",
            "[223]\tvalid_0's binary_logloss: 0.341885\n",
            "[224]\tvalid_0's binary_logloss: 0.341699\n",
            "[225]\tvalid_0's binary_logloss: 0.341658\n",
            "[226]\tvalid_0's binary_logloss: 0.341528\n",
            "[227]\tvalid_0's binary_logloss: 0.341484\n",
            "[228]\tvalid_0's binary_logloss: 0.341406\n",
            "[229]\tvalid_0's binary_logloss: 0.341259\n",
            "[230]\tvalid_0's binary_logloss: 0.341081\n",
            "[231]\tvalid_0's binary_logloss: 0.341076\n",
            "[232]\tvalid_0's binary_logloss: 0.34107\n",
            "[233]\tvalid_0's binary_logloss: 0.340986\n",
            "[234]\tvalid_0's binary_logloss: 0.340981\n",
            "[235]\tvalid_0's binary_logloss: 0.340884\n",
            "[236]\tvalid_0's binary_logloss: 0.340825\n",
            "[237]\tvalid_0's binary_logloss: 0.340755\n",
            "[238]\tvalid_0's binary_logloss: 0.340759\n",
            "[239]\tvalid_0's binary_logloss: 0.340776\n",
            "[240]\tvalid_0's binary_logloss: 0.340758\n",
            "[241]\tvalid_0's binary_logloss: 0.340615\n",
            "[242]\tvalid_0's binary_logloss: 0.34043\n",
            "[243]\tvalid_0's binary_logloss: 0.340344\n",
            "[244]\tvalid_0's binary_logloss: 0.340272\n",
            "[245]\tvalid_0's binary_logloss: 0.3403\n",
            "[246]\tvalid_0's binary_logloss: 0.340222\n",
            "[247]\tvalid_0's binary_logloss: 0.340108\n",
            "[248]\tvalid_0's binary_logloss: 0.340172\n",
            "[249]\tvalid_0's binary_logloss: 0.34013\n",
            "[250]\tvalid_0's binary_logloss: 0.340102\n",
            "[251]\tvalid_0's binary_logloss: 0.340071\n",
            "[252]\tvalid_0's binary_logloss: 0.34005\n",
            "[253]\tvalid_0's binary_logloss: 0.339882\n",
            "[254]\tvalid_0's binary_logloss: 0.339879\n",
            "[255]\tvalid_0's binary_logloss: 0.33989\n",
            "[256]\tvalid_0's binary_logloss: 0.339925\n",
            "[257]\tvalid_0's binary_logloss: 0.339889\n",
            "[258]\tvalid_0's binary_logloss: 0.339884\n",
            "[259]\tvalid_0's binary_logloss: 0.339805\n",
            "[260]\tvalid_0's binary_logloss: 0.339734\n",
            "[261]\tvalid_0's binary_logloss: 0.339617\n",
            "[262]\tvalid_0's binary_logloss: 0.339565\n",
            "[263]\tvalid_0's binary_logloss: 0.339571\n",
            "[264]\tvalid_0's binary_logloss: 0.339498\n",
            "[265]\tvalid_0's binary_logloss: 0.339352\n",
            "[266]\tvalid_0's binary_logloss: 0.339326\n",
            "[267]\tvalid_0's binary_logloss: 0.339271\n",
            "[268]\tvalid_0's binary_logloss: 0.339259\n",
            "[269]\tvalid_0's binary_logloss: 0.339183\n",
            "[270]\tvalid_0's binary_logloss: 0.339215\n",
            "[271]\tvalid_0's binary_logloss: 0.339224\n",
            "[272]\tvalid_0's binary_logloss: 0.339237\n",
            "[273]\tvalid_0's binary_logloss: 0.339091\n",
            "[274]\tvalid_0's binary_logloss: 0.339046\n",
            "[275]\tvalid_0's binary_logloss: 0.338955\n",
            "[276]\tvalid_0's binary_logloss: 0.338908\n",
            "[277]\tvalid_0's binary_logloss: 0.338922\n",
            "[278]\tvalid_0's binary_logloss: 0.338903\n",
            "[279]\tvalid_0's binary_logloss: 0.338886\n",
            "[280]\tvalid_0's binary_logloss: 0.338799\n",
            "[281]\tvalid_0's binary_logloss: 0.338645\n",
            "[282]\tvalid_0's binary_logloss: 0.338652\n",
            "[283]\tvalid_0's binary_logloss: 0.338629\n",
            "[284]\tvalid_0's binary_logloss: 0.338657\n",
            "[285]\tvalid_0's binary_logloss: 0.338622\n",
            "[286]\tvalid_0's binary_logloss: 0.338632\n",
            "[287]\tvalid_0's binary_logloss: 0.338544\n",
            "[288]\tvalid_0's binary_logloss: 0.338548\n",
            "[289]\tvalid_0's binary_logloss: 0.338572\n",
            "[290]\tvalid_0's binary_logloss: 0.338533\n",
            "[291]\tvalid_0's binary_logloss: 0.338556\n",
            "[292]\tvalid_0's binary_logloss: 0.338584\n",
            "[293]\tvalid_0's binary_logloss: 0.338501\n",
            "[294]\tvalid_0's binary_logloss: 0.338495\n",
            "[295]\tvalid_0's binary_logloss: 0.338436\n",
            "[296]\tvalid_0's binary_logloss: 0.338491\n",
            "[297]\tvalid_0's binary_logloss: 0.338498\n",
            "[298]\tvalid_0's binary_logloss: 0.338421\n",
            "[299]\tvalid_0's binary_logloss: 0.338368\n",
            "[300]\tvalid_0's binary_logloss: 0.338294\n",
            "[301]\tvalid_0's binary_logloss: 0.338321\n",
            "[302]\tvalid_0's binary_logloss: 0.33838\n",
            "[303]\tvalid_0's binary_logloss: 0.33841\n",
            "[304]\tvalid_0's binary_logloss: 0.338406\n",
            "[305]\tvalid_0's binary_logloss: 0.338402\n",
            "[306]\tvalid_0's binary_logloss: 0.33837\n",
            "[307]\tvalid_0's binary_logloss: 0.338356\n",
            "[308]\tvalid_0's binary_logloss: 0.338355\n",
            "[309]\tvalid_0's binary_logloss: 0.338345\n",
            "[310]\tvalid_0's binary_logloss: 0.338409\n",
            "[311]\tvalid_0's binary_logloss: 0.338365\n",
            "[312]\tvalid_0's binary_logloss: 0.338382\n",
            "[313]\tvalid_0's binary_logloss: 0.33821\n",
            "[314]\tvalid_0's binary_logloss: 0.338211\n",
            "[315]\tvalid_0's binary_logloss: 0.338192\n",
            "[316]\tvalid_0's binary_logloss: 0.338149\n",
            "[317]\tvalid_0's binary_logloss: 0.338092\n",
            "[318]\tvalid_0's binary_logloss: 0.338086\n",
            "[319]\tvalid_0's binary_logloss: 0.338093\n",
            "[320]\tvalid_0's binary_logloss: 0.338103\n",
            "[321]\tvalid_0's binary_logloss: 0.338113\n",
            "[322]\tvalid_0's binary_logloss: 0.338064\n",
            "[323]\tvalid_0's binary_logloss: 0.338004\n",
            "[324]\tvalid_0's binary_logloss: 0.33793\n",
            "[325]\tvalid_0's binary_logloss: 0.337901\n",
            "[326]\tvalid_0's binary_logloss: 0.337923\n",
            "[327]\tvalid_0's binary_logloss: 0.337853\n",
            "[328]\tvalid_0's binary_logloss: 0.337872\n",
            "[329]\tvalid_0's binary_logloss: 0.337811\n",
            "[330]\tvalid_0's binary_logloss: 0.337806\n",
            "[331]\tvalid_0's binary_logloss: 0.337669\n",
            "[332]\tvalid_0's binary_logloss: 0.337634\n",
            "[333]\tvalid_0's binary_logloss: 0.337637\n",
            "[334]\tvalid_0's binary_logloss: 0.337689\n",
            "[335]\tvalid_0's binary_logloss: 0.337661\n",
            "[336]\tvalid_0's binary_logloss: 0.337505\n",
            "[337]\tvalid_0's binary_logloss: 0.337479\n",
            "[338]\tvalid_0's binary_logloss: 0.337456\n",
            "[339]\tvalid_0's binary_logloss: 0.337434\n",
            "[340]\tvalid_0's binary_logloss: 0.337282\n",
            "[341]\tvalid_0's binary_logloss: 0.337265\n",
            "[342]\tvalid_0's binary_logloss: 0.337269\n",
            "[343]\tvalid_0's binary_logloss: 0.337153\n",
            "[344]\tvalid_0's binary_logloss: 0.337105\n",
            "[345]\tvalid_0's binary_logloss: 0.337067\n",
            "[346]\tvalid_0's binary_logloss: 0.336987\n",
            "[347]\tvalid_0's binary_logloss: 0.336895\n",
            "[348]\tvalid_0's binary_logloss: 0.336889\n",
            "[349]\tvalid_0's binary_logloss: 0.336856\n",
            "[350]\tvalid_0's binary_logloss: 0.336876\n",
            "[351]\tvalid_0's binary_logloss: 0.336723\n",
            "[352]\tvalid_0's binary_logloss: 0.336721\n",
            "[353]\tvalid_0's binary_logloss: 0.336687\n",
            "[354]\tvalid_0's binary_logloss: 0.336657\n",
            "[355]\tvalid_0's binary_logloss: 0.336729\n",
            "[356]\tvalid_0's binary_logloss: 0.336687\n",
            "[357]\tvalid_0's binary_logloss: 0.336722\n",
            "[358]\tvalid_0's binary_logloss: 0.336646\n",
            "[359]\tvalid_0's binary_logloss: 0.336606\n",
            "[360]\tvalid_0's binary_logloss: 0.336606\n",
            "[361]\tvalid_0's binary_logloss: 0.336594\n",
            "[362]\tvalid_0's binary_logloss: 0.336471\n",
            "[363]\tvalid_0's binary_logloss: 0.33639\n",
            "[364]\tvalid_0's binary_logloss: 0.336425\n",
            "[365]\tvalid_0's binary_logloss: 0.336448\n",
            "[366]\tvalid_0's binary_logloss: 0.336258\n",
            "[367]\tvalid_0's binary_logloss: 0.336202\n",
            "[368]\tvalid_0's binary_logloss: 0.336194\n",
            "[369]\tvalid_0's binary_logloss: 0.336217\n",
            "[370]\tvalid_0's binary_logloss: 0.336212\n",
            "[371]\tvalid_0's binary_logloss: 0.336194\n",
            "[372]\tvalid_0's binary_logloss: 0.336216\n",
            "[373]\tvalid_0's binary_logloss: 0.336218\n",
            "[374]\tvalid_0's binary_logloss: 0.336194\n",
            "[375]\tvalid_0's binary_logloss: 0.336189\n",
            "[376]\tvalid_0's binary_logloss: 0.336159\n",
            "[377]\tvalid_0's binary_logloss: 0.336192\n",
            "[378]\tvalid_0's binary_logloss: 0.336134\n",
            "[379]\tvalid_0's binary_logloss: 0.336177\n",
            "[380]\tvalid_0's binary_logloss: 0.336196\n",
            "[381]\tvalid_0's binary_logloss: 0.336176\n",
            "[382]\tvalid_0's binary_logloss: 0.336179\n",
            "[383]\tvalid_0's binary_logloss: 0.336077\n",
            "[384]\tvalid_0's binary_logloss: 0.335971\n",
            "[385]\tvalid_0's binary_logloss: 0.335939\n",
            "[386]\tvalid_0's binary_logloss: 0.335902\n",
            "[387]\tvalid_0's binary_logloss: 0.335912\n",
            "[388]\tvalid_0's binary_logloss: 0.335879\n",
            "[389]\tvalid_0's binary_logloss: 0.335854\n",
            "[390]\tvalid_0's binary_logloss: 0.335777\n",
            "[391]\tvalid_0's binary_logloss: 0.335726\n",
            "[392]\tvalid_0's binary_logloss: 0.335651\n",
            "[393]\tvalid_0's binary_logloss: 0.335711\n",
            "[394]\tvalid_0's binary_logloss: 0.335732\n",
            "[395]\tvalid_0's binary_logloss: 0.335709\n",
            "[396]\tvalid_0's binary_logloss: 0.335677\n",
            "[397]\tvalid_0's binary_logloss: 0.335656\n",
            "[398]\tvalid_0's binary_logloss: 0.335625\n",
            "[399]\tvalid_0's binary_logloss: 0.335623\n",
            "[400]\tvalid_0's binary_logloss: 0.33561\n",
            "[401]\tvalid_0's binary_logloss: 0.335629\n",
            "[402]\tvalid_0's binary_logloss: 0.335684\n",
            "[403]\tvalid_0's binary_logloss: 0.335569\n",
            "[404]\tvalid_0's binary_logloss: 0.335446\n",
            "[405]\tvalid_0's binary_logloss: 0.335416\n",
            "[406]\tvalid_0's binary_logloss: 0.335417\n",
            "[407]\tvalid_0's binary_logloss: 0.335424\n",
            "[408]\tvalid_0's binary_logloss: 0.335365\n",
            "[409]\tvalid_0's binary_logloss: 0.335401\n",
            "[410]\tvalid_0's binary_logloss: 0.335385\n",
            "[411]\tvalid_0's binary_logloss: 0.335411\n",
            "[412]\tvalid_0's binary_logloss: 0.335421\n",
            "[413]\tvalid_0's binary_logloss: 0.335415\n",
            "[414]\tvalid_0's binary_logloss: 0.335401\n",
            "[415]\tvalid_0's binary_logloss: 0.335384\n",
            "[416]\tvalid_0's binary_logloss: 0.335379\n",
            "[417]\tvalid_0's binary_logloss: 0.335392\n",
            "[418]\tvalid_0's binary_logloss: 0.335441\n",
            "[419]\tvalid_0's binary_logloss: 0.335447\n",
            "[420]\tvalid_0's binary_logloss: 0.335426\n",
            "[421]\tvalid_0's binary_logloss: 0.33531\n",
            "[422]\tvalid_0's binary_logloss: 0.335301\n",
            "[423]\tvalid_0's binary_logloss: 0.335296\n",
            "[424]\tvalid_0's binary_logloss: 0.335277\n",
            "[425]\tvalid_0's binary_logloss: 0.335237\n",
            "[426]\tvalid_0's binary_logloss: 0.335169\n",
            "[427]\tvalid_0's binary_logloss: 0.335204\n",
            "[428]\tvalid_0's binary_logloss: 0.335225\n",
            "[429]\tvalid_0's binary_logloss: 0.335211\n",
            "[430]\tvalid_0's binary_logloss: 0.335227\n",
            "[431]\tvalid_0's binary_logloss: 0.335127\n",
            "[432]\tvalid_0's binary_logloss: 0.335078\n",
            "[433]\tvalid_0's binary_logloss: 0.335008\n",
            "[434]\tvalid_0's binary_logloss: 0.335067\n",
            "[435]\tvalid_0's binary_logloss: 0.335109\n",
            "[436]\tvalid_0's binary_logloss: 0.33513\n",
            "[437]\tvalid_0's binary_logloss: 0.335099\n",
            "[438]\tvalid_0's binary_logloss: 0.335072\n",
            "[439]\tvalid_0's binary_logloss: 0.335118\n",
            "[440]\tvalid_0's binary_logloss: 0.335106\n",
            "[441]\tvalid_0's binary_logloss: 0.335069\n",
            "[442]\tvalid_0's binary_logloss: 0.335076\n",
            "[443]\tvalid_0's binary_logloss: 0.334991\n",
            "[444]\tvalid_0's binary_logloss: 0.335013\n",
            "[445]\tvalid_0's binary_logloss: 0.334971\n",
            "[446]\tvalid_0's binary_logloss: 0.33494\n",
            "[447]\tvalid_0's binary_logloss: 0.334937\n",
            "[448]\tvalid_0's binary_logloss: 0.33493\n",
            "[449]\tvalid_0's binary_logloss: 0.334869\n",
            "[450]\tvalid_0's binary_logloss: 0.334869\n",
            "[451]\tvalid_0's binary_logloss: 0.334906\n",
            "[452]\tvalid_0's binary_logloss: 0.334911\n",
            "[453]\tvalid_0's binary_logloss: 0.334918\n",
            "[454]\tvalid_0's binary_logloss: 0.334905\n",
            "[455]\tvalid_0's binary_logloss: 0.334958\n",
            "[456]\tvalid_0's binary_logloss: 0.334942\n",
            "[457]\tvalid_0's binary_logloss: 0.335001\n",
            "[458]\tvalid_0's binary_logloss: 0.334928\n",
            "[459]\tvalid_0's binary_logloss: 0.334808\n",
            "[460]\tvalid_0's binary_logloss: 0.334827\n",
            "[461]\tvalid_0's binary_logloss: 0.334756\n",
            "[462]\tvalid_0's binary_logloss: 0.334798\n",
            "[463]\tvalid_0's binary_logloss: 0.334802\n",
            "[464]\tvalid_0's binary_logloss: 0.334838\n",
            "[465]\tvalid_0's binary_logloss: 0.334807\n",
            "[466]\tvalid_0's binary_logloss: 0.334799\n",
            "[467]\tvalid_0's binary_logloss: 0.334736\n",
            "[468]\tvalid_0's binary_logloss: 0.334728\n",
            "[469]\tvalid_0's binary_logloss: 0.334688\n",
            "[470]\tvalid_0's binary_logloss: 0.334696\n",
            "[471]\tvalid_0's binary_logloss: 0.334653\n",
            "[472]\tvalid_0's binary_logloss: 0.334609\n",
            "[473]\tvalid_0's binary_logloss: 0.334587\n",
            "[474]\tvalid_0's binary_logloss: 0.334564\n",
            "[475]\tvalid_0's binary_logloss: 0.334557\n",
            "[476]\tvalid_0's binary_logloss: 0.334598\n",
            "[477]\tvalid_0's binary_logloss: 0.334548\n",
            "[478]\tvalid_0's binary_logloss: 0.334666\n",
            "[479]\tvalid_0's binary_logloss: 0.334658\n",
            "[480]\tvalid_0's binary_logloss: 0.334638\n",
            "[481]\tvalid_0's binary_logloss: 0.334585\n",
            "[482]\tvalid_0's binary_logloss: 0.334598\n",
            "[483]\tvalid_0's binary_logloss: 0.334593\n",
            "[484]\tvalid_0's binary_logloss: 0.334592\n",
            "[485]\tvalid_0's binary_logloss: 0.334512\n",
            "[486]\tvalid_0's binary_logloss: 0.334508\n",
            "[487]\tvalid_0's binary_logloss: 0.334543\n",
            "[488]\tvalid_0's binary_logloss: 0.334492\n",
            "[489]\tvalid_0's binary_logloss: 0.334451\n",
            "[490]\tvalid_0's binary_logloss: 0.334491\n",
            "[491]\tvalid_0's binary_logloss: 0.334465\n",
            "[492]\tvalid_0's binary_logloss: 0.334439\n",
            "[493]\tvalid_0's binary_logloss: 0.334417\n",
            "[494]\tvalid_0's binary_logloss: 0.334395\n",
            "[495]\tvalid_0's binary_logloss: 0.334441\n",
            "[496]\tvalid_0's binary_logloss: 0.334448\n",
            "[497]\tvalid_0's binary_logloss: 0.33441\n",
            "[498]\tvalid_0's binary_logloss: 0.334377\n",
            "[499]\tvalid_0's binary_logloss: 0.334426\n",
            "[500]\tvalid_0's binary_logloss: 0.334402\n",
            "[501]\tvalid_0's binary_logloss: 0.334404\n",
            "[502]\tvalid_0's binary_logloss: 0.334314\n",
            "[503]\tvalid_0's binary_logloss: 0.33438\n",
            "[504]\tvalid_0's binary_logloss: 0.334372\n",
            "[505]\tvalid_0's binary_logloss: 0.334413\n",
            "[506]\tvalid_0's binary_logloss: 0.334428\n",
            "[507]\tvalid_0's binary_logloss: 0.33436\n",
            "[508]\tvalid_0's binary_logloss: 0.334212\n",
            "[509]\tvalid_0's binary_logloss: 0.334154\n",
            "[510]\tvalid_0's binary_logloss: 0.334125\n",
            "[511]\tvalid_0's binary_logloss: 0.334142\n",
            "[512]\tvalid_0's binary_logloss: 0.334126\n",
            "[513]\tvalid_0's binary_logloss: 0.334096\n",
            "[514]\tvalid_0's binary_logloss: 0.334129\n",
            "[515]\tvalid_0's binary_logloss: 0.334024\n",
            "[516]\tvalid_0's binary_logloss: 0.333985\n",
            "[517]\tvalid_0's binary_logloss: 0.333962\n",
            "[518]\tvalid_0's binary_logloss: 0.333944\n",
            "[519]\tvalid_0's binary_logloss: 0.333938\n",
            "[520]\tvalid_0's binary_logloss: 0.333811\n",
            "[521]\tvalid_0's binary_logloss: 0.333804\n",
            "[522]\tvalid_0's binary_logloss: 0.333818\n",
            "[523]\tvalid_0's binary_logloss: 0.333838\n",
            "[524]\tvalid_0's binary_logloss: 0.333828\n",
            "[525]\tvalid_0's binary_logloss: 0.333868\n",
            "[526]\tvalid_0's binary_logloss: 0.33384\n",
            "[527]\tvalid_0's binary_logloss: 0.333888\n",
            "[528]\tvalid_0's binary_logloss: 0.333936\n",
            "[529]\tvalid_0's binary_logloss: 0.333974\n",
            "[530]\tvalid_0's binary_logloss: 0.333932\n",
            "[531]\tvalid_0's binary_logloss: 0.333919\n",
            "[532]\tvalid_0's binary_logloss: 0.33397\n",
            "[533]\tvalid_0's binary_logloss: 0.333991\n",
            "[534]\tvalid_0's binary_logloss: 0.334092\n",
            "[535]\tvalid_0's binary_logloss: 0.334115\n",
            "[536]\tvalid_0's binary_logloss: 0.334139\n",
            "[537]\tvalid_0's binary_logloss: 0.33417\n",
            "[538]\tvalid_0's binary_logloss: 0.334153\n",
            "[539]\tvalid_0's binary_logloss: 0.334122\n",
            "[540]\tvalid_0's binary_logloss: 0.334108\n",
            "[541]\tvalid_0's binary_logloss: 0.334119\n",
            "[542]\tvalid_0's binary_logloss: 0.334101\n",
            "[543]\tvalid_0's binary_logloss: 0.334146\n",
            "[544]\tvalid_0's binary_logloss: 0.334148\n",
            "[545]\tvalid_0's binary_logloss: 0.334145\n",
            "[546]\tvalid_0's binary_logloss: 0.334112\n",
            "[547]\tvalid_0's binary_logloss: 0.334143\n",
            "[548]\tvalid_0's binary_logloss: 0.334128\n",
            "[549]\tvalid_0's binary_logloss: 0.334125\n",
            "[550]\tvalid_0's binary_logloss: 0.334168\n",
            "[551]\tvalid_0's binary_logloss: 0.334184\n",
            "[552]\tvalid_0's binary_logloss: 0.334158\n",
            "[553]\tvalid_0's binary_logloss: 0.334121\n",
            "[554]\tvalid_0's binary_logloss: 0.334181\n",
            "[555]\tvalid_0's binary_logloss: 0.334192\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i3psUextdn-G",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "outputId": "5933ec63-a27e-4fe0-93a6-519840f9583a"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "tn, fp, fn, tp = confusion_matrix(y_test_mod, y_pred_mod).ravel()\n",
        "print(\"True Positive\", tp)\n",
        "print(\"True Negative\", tn)\n",
        "print(\"False Positive\", fp)\n",
        "print(\"False Negative\", fn)"
      ],
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True Positive 2592\n",
            "True Negative 1291\n",
            "False Positive 413\n",
            "False Negative 324\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "izMlmL3rds-f",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "10ac5b60-3c55-4157-d5a1-9b1c61092084"
      },
      "source": [
        "acc= f1_score(y_test_mod,y_pred_mod)\n",
        "acc"
      ],
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8755277824691775"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "KKD-B_7kSuUb",
        "colab": {}
      },
      "source": [
        "prediction=model.predict(test_data_one_hot)"
      ],
      "execution_count": 149,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "Ws_9CyudSuU6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "53fe9fc5-fa95-46df-cdad-4b9889a1f518"
      },
      "source": [
        "prediction"
      ],
      "execution_count": 150,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n",
              "       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n",
              "       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n",
              "       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n",
              "       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n",
              "       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n",
              "       0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n",
              "       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n",
              "       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n",
              "       0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n",
              "       1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n",
              "       0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n",
              "       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n",
              "       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n",
              "       1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n",
              "       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0,\n",
              "       1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n",
              "       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n",
              "       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n",
              "       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n",
              "       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n",
              "       1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n",
              "       0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n",
              "       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n",
              "       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n",
              "       0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n",
              "       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0,\n",
              "       0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
              "       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n",
              "       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
              "       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n",
              "       1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n",
              "       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XLwGR1BKDnda",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#the above prediction results gave an f1 score of 87.411934 on unseeen data"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bscb0cOaDndt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "53Lto4m1Dnd0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}